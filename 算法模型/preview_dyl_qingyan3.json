[
    {
        "prompt": "vue使用高德地图进行数据分片数据加载",
        "doc": [
            "       Vue 是一款用于构建用户界面的 JavaScript 框架。它基于标准 HTML、CSS 和 JavaScript 构建，并提供了一套声明式的、组件化的编程模型，帮助你高效地开发用户界面。       本章教程将介绍如何在 Vue 中使用自定义组件结合 JS API 加载、创建和销毁地图。如果您的项目是使用 Vue 框架，建议您将地图的初始化封装成组件，这样更便于使用 Vue 组件的生命周期来加载、创建和销毁地图。下载 Vue 2 组件完整代码下载 Vue 3 组件完整代码为了正常调用 API ，请先注册成为高德开放平台开发者，并申请 web 平台（JS API）的 key 和安全密钥，点击 具体操作。您在2021年12月02日以后申请的key需要配合您的安全密钥一起使用。在项目中新建 MapContainer.vue 文件，用作地图组件。在 MapContainer.vue 地图组件中创建 div 标签作为地图容器 ，并设置地图容器的 id 属性为 container。在地图组件 MapContainer.vue 中引入 amap-jsapi-loader 在 MapContainer.vue文件中初始化地图JS API Loader是我们提供的 API 加载器，其加载方式为异步加载 JS API 内容，所以在使用 AMap 对象前需进行验证，这种使用场景下，JS API 不会阻塞页面其他内容的执行和解析，但是脚本解析将有可能发生其他脚本资源执行之后，因为需要特别处理，以保证在 AMap对象完整生成之后再调用 JS API 的相关接口，否则有可能报错。",
            " 高德开放平台 | 高德地图API (amap.com)npm i @amap/amap-jsapi-loader --save        高德地图广泛应用于日常出行、旅游规划、商业定位等领域，可以为用户提供丰富而全面的地图服务和位置信息。希望此篇文章对您能有所帮助！\\n                    CSDN-Ada助手: \\n                    恭喜您写了第6篇博客！标题“箭 头 函 数”引人入胜，让我对内容充满了好奇。您的持续创作让人钦佩，能够不断分享知识和经验是非常难得的品质。在下一步的创作中，或许可以探讨一下箭头函数的应用场景，以及它在提高代码可读性和简洁性方面的优势。期待看到更多精彩的博客！\\n                \\n                    CSDN-Ada助手: \\n                    非常感谢您分享关于JavaScript中this关键字的博客！这是一个非常重要且容易混淆的概念，您的解释非常清晰易懂。希望您可以继续分享更多关于JavaScript的知识，比如闭包、原型链等等，这些都是很多初学者容易困惑的地方。期待您的下一篇博客！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您完成了第10篇博客！标题“关于JS中的this指向”非常吸引人。您对这个话题的探索令人赞叹。在这篇博客中，您对JS中的this指向进行了深入分析，这对于我们理解JavaScript语言的核心概念非常有帮助。\\n\\n我希望在下一步的创作中，您能够继续深入研究这个主题，并探索更多与this相关的内容。例如，您可以进一步讨论箭头函数中的this指向，或是介绍如何在不同的上下文中正确使用this。这些都是与JS中的this相关的重要问题，也会给读者带来更多的启发。\\n\\n谦虚地说，我相信您的深入研究和清晰的表达能力将继续为读者提供有价值的知识。期待您未来更多的创作！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第11篇博客！标题中的\"浏览器的线程和渲染流程\"这个话题非常有趣。通过深入研究浏览器的工作原理，您为读者提供了宝贵的信息。在下一步的创作中，或许您可以探索更多关于浏览器性能优化的内容，如何通过理解线程和渲染流程来提高网页加载速度等。非常期待您的下一篇博客！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第12篇博客！深入讨论JavaScript中的原型对象确实是一个很有深度的话题，您的文章写得非常好。希望您能继续保持创作的激情，并且不断拓展新的主题，比如可以探讨一些实际项目中如何应用原型对象的案例，或者深入解析原型链的机制等等。期待您更多的精彩内容！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "npm i @amap/amap-jsapi-loader --save或yarn add @amap/amap-jsapi-loader --save\\n                    依然风yrlf: \\n                    写得挺详细的，也言简意赅，挺有价值的文章\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "需求：实现点击获取经纬度、定位、对特殊位置标点及自定义信息窗体功能。高德地图的官网API：概述-地图 JS API 1.4 | 高德地图APIvue-amap的中文文档：组件 | vue-amap实现： 在main.js中引入需要提前申请高德key，步骤附在最后了这里直接放我封装的组件1、position：为marker点的坐标（经纬度），接收数组2、icon：自定义图标地址3、events：事件集合对象，click、dblclick、rightclick、mouseover、mouseout等4、offset：偏移量其他我没用到的还有：5、clickable：true允许用户可点击marker点（默认也是true）6、animation：marker点的动画效果      marker点弹跳效果：设置值为 AMAP_ANIMATION_BOUNCE7、label：点显示的简略信息8、content可以是文字字符串也可以是html静态属性动态属性 ref 可用方法提供无副作用的同步帮助方法事件（也是events里的）我把使用的页面也全贴上了，但其实search-box里面的东西大家可以忽略，只是针对markerList的查询过滤成果大致样式如下：附：高德Key申请登录后到这个地址：我的应用 | 高德控制台1、点击添加key2、根据自己的需求选择服务平台，可以看看对应的“可使用服务” 来决定，我这里选择Web端 3、提交后就有一条新增的记录，复制放进代码使用就好啦参考地址：vue-amap基于vue的高德地图使用_amap vue-CSDN博客 1.5.1 信息窗体 - vue-amap 中文文档 - 开发文档 - 文江博客\\n        \\n    \\n                    张小乱: \\n                    那个可以配置的\\n                \\n                    wuhao747003943: \\n                    非常感谢 成功了！\\n                \\n                    Naive_Jam: \\n                    从AB两个页面跳转到扫码页面时分别加个判断参数，在画扫码位置的地方区分一下，看看可以么\\n                \\n                    langlige_lang: \\n                    如果A,B两个页面都有扫码需求,并且扫码框的位置设置为不一样的,那一次加载A的时候位置是A页面设置的扫码位置,如果这时再去加载B页面.那B页面的扫码位置就还是A的位置,这个是咋解决 的\\n                \\n                    Naive_Jam: \\n                    恐怕不能，这段代码里用到了puls对象，小程序应该没有plus环境的。\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。"
        ]
    },
    {
        "prompt": "这个函数的用法\n```C\nerr_t\r\nhttpc_get_file(const ip_addr_t* server_addr, u16_t port, const char* uri, const httpc_connection_t *settings,\r\n               altcp_recv_fn recv_fn, void* callback_arg, httpc_state_t **connection)\n```",
        "doc": [
            "目录一、引言二、const关键字与变量2.1 、const修饰基本数据类型2.2、const修饰指针类型2.2.1、const在 * 号之前2.2.2、const在*号之后三、const关键字与引用3.1 权限放大3.2 权限缩写四、cosnt关键字与类4.1、修饰成员变量4.2、修饰成员函数        const是C和C++中一个十分重要的关键字，它在变量，函数，类，引用，指针中的有着十分重要的作用，本文将详细介绍const关键字在C++中的作用。首先，讲解const关键字修饰变量，将从两个方面讲解。        在平常代码的编写中我们有时并不希望一些数据被修改，我们可以用const关键字对其进行修饰例如下面的代码 ,对于const修饰的a来说 a的值是无法修改的。但是通过取出a的地址，对a进行解引用操作最终还是能够修改a的值但是这样就失去了const关键字的作用。        注：const修饰的a虽然能够被修改但是a仍然是变量并不是常量，我们可以通过下面的代码进行验证，在C99中是不支持变长数组的，如果const修饰的NUM是常量，那么就可以在数组创建时写成int a[NUM];但是编译器会报错，说明const修饰的依旧是变量。const对于指针也有着十分重要的作用，分为两种情况        当const在 * 号之前时（const int * 或 int const *）是对指针中的内容进行修饰，代表指针中的内容是无法修改，但是指针的指向是可以改变的，如下面的代码所示。        当const在 * 号之后时（int * const）是对指针的指向进行修饰，指针的指向不能够被修改，但是指针中的内容是可以被修改的，如下面的代码所示。在C++中const对于也有很大的作用，将从两个s方面进分析        对于const 修饰的a来说 ，a已经被const修饰了，那么对于b来说b是a的别名，那么b可以修改a中的内容，但是a被const进行了修饰，说明int &b = a把 a权限进行了放大是不被允许的。        还有一种权限放大的情况是 int &a = 10 对于10来说 10是常量是不能够被修改的但是对于a 是10的引用，可以对10进行修改，这也是一种权限的放大是不被编译器允许的。        在C++中对于一个int类型的变量可以是可以进行权限的缩小的，如下面代码所示，定义一个int类型的变量c。const修饰的引用b是c的别名，对于b来说，由于b是由const修饰的，所以b无法对c中的内容进行修改，这是允许的，是权限的缩小。 在定义的类中成员变量也可以用const进行修饰，被const关键词修饰的成员变量，也是不能够被修改的注：在一个类中的const 成员变量只能在构造函数中的初始化列表被初始化！原因：因为const修饰的变量只能够初始化，不能够赋值，在进入函数体内const变量都已经用不确定的值初始化好了，构造函数做的只有赋值，而const类型不能够赋值，所以需要在初始化列表中初始化        将const修饰的“成员函数”称之为const成员函数，const修饰类成员函数，实际修饰该成员函数隐含的this指针，表明在该成员函数中不能对类的任何成员进行修改。如下面的动物类为例定义一个const成员函数。在成员函数的后面加上const代表该函数是成员函数，成员变量是不能被修改的有关const static相关的详细使用：类和对象（下）/类和对象（下） · 懒惰的西望/lazy_study_cpp - 码云 - 开源中国 (gitee.com)\\n                    CSDN-Ada助手: \\n                    恭喜您发布了第三篇博客！文章“C++中const关键字的使用详解”内容丰富，讲解清晰易懂。希望您能继续保持创作的热情，分享更多有价值的知识。下一步，建议可以深入探讨C++中其他关键字的使用，或者结合实际案例分享编程经验，让读者受益更多。期待您更多精彩的作品！\\n\\nCSDN 正在通过评论红包奖励优秀博客，请看红包流：https://bbs.csdn.net/?type=4&header=0&utm_source=csdn_ai_ada_blog_reply3\\n                \\n                    手法king: \\n                    可以的呀，图文并茂很详细，学到了，加油支持\\n                \\n                    CSDN-Ada助手: \\n                    非常棒的博客！很高兴看到你对C语言指针进行了详细解释。你的解释对于初学者来说非常易懂，我期待着你的第二篇博客。对于扩展知识和技能，我建议你在未来的博客中可以讨论一下动态内存分配和指针算术操作，这些是与指针相关但在标题和摘要中未提及的重要主题。感谢你的辛勤工作，希望你能继续分享你的知识！\\n\\n如何写出更高质量的博客，请看该博主的分享：https://blog.csdn.net/lmy_520/article/details/128686434?utm_source=csdn_ai_ada_blog_reply2\\n                \\n                    fly in the sky !: \\n                    文章结构严谨，每次阅读都能收获知识，感谢大佬的分享，期待大佬下次更新。\\n                \\n                    Chris·Bosh: \\n                    期待博主输出更多好文\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "在学习C++的时候看过不少教程，但很难有把一个知识点完全讲透的。比如Cherno的C++会告诉你怎么去用How，而侯捷的C++会告诉你Why，但并没有完全把某个知识点讲干净。因此，该专栏用于记录和分享笔者在学习C++过程中遇到并在网上整理集合的知识点，并讲清楚How与Why，希望这些能对大家带来帮助。如有疑问和遗漏，也欢迎大家进行修正与补充。一般默认const是必须赋值的，使用const直接修饰变量，以下两种定义形式在本质上是一样的。此时，该变量变为了常量，在定义了之后无法对值进行修改。将const改为外部连接,作用于扩大至全局,编译时会分配内存,此时可以不初始化,而只是声明,编译器认为在程序其他地方进行了定义，该常量可以从其他地方获取Const类型转化为非Const类型的方法可以采用const_cast 进行强制转换。C++可以通过强大的指针进行修改，下面的代码就是通过指针去修改常量的值。最后输出的结果为可以看到，常量的值被修改了。可为什么输出MAX_IMAGE的时候还是99？看到网上的一个回答：因此，输出的还是99,但实际上常量的值已经被修改为2了在成员函数后加const，意味着该方法不会对成员变量造成影响接下来我们根据第一个Entity类进行函数设计对于参数传进来的是指针的函数 * 先来看看普通的函数对于函数传进来的常量引用参数来说 这个e是常量，不能将它重新赋值。 不过这里没有指针本身和指针指向内容的区别了，因为引用即内容，所以也不用考虑指针的问题。假设我们把Entity类的const去掉,我们的引用就无法获取到GetX()。因为我们已经不能保证这个GetX会不会使Entity类修改了。如果类成员变量被修改，就意味着违反了const的设计原则。所以有时候我们会看到这种形式的函数。类的设计者如果一开始没有设计const，则需要补上一个const的成员函数。但是实际上，只要我们一开始设计的时候就使用了const，便不会发生这种问题。因为无论是常量引用，还是非常量引用，常量指针还是非常量指针，都可以调用常量成员函数！！！侯捷老师在面向对象的设计上也讲过这一点，这里放个图供大家记忆：这就不得不提到这个比较让人感觉到无语的关键字multiple,他的优先级会高于const，当我们声明mutable的变量后，该变量是可以在const函数中改变的！！！笔者猜测的是由于后续修改的时候，又不得不在某个函数修改一些变量，所以整了个这个关键字。好了，话不多说，上代码：最后放个花火镇贴~",
            "注：为自己复习用，文末会放出引用参考文章(1)const修饰基本数据类型(2)const应用在函数中(3)const在类中的用法对于类似这些基本数据类型，修饰符const可以用在类型说明符前，也可以用在类型说明符后，其结果是一样的。在使用这些常量的时候，只要不改变这些常量的值便好。  const修饰指针（*）：参考《Effective c++》Item21上的做法，如果const位于星号*的左侧，则const就是用来修饰指针所指向的变量，即指针指向为常量；如果const位于星号的右侧，const就是修饰指针本身，即指针本身是常量。因此，[1]和[2]的情况相同，都是指针所指向的内容为常量，这种情况下不允许对内容进行更改操作，如不能*a = 3 ；[3]为指针本身是常量，而指针所指向的内容不是常量，这种情况下不能对指针本身进行更改操作，如a++是错误的；[4]为指针本身和指向的内容均为常量。 const修饰引用（&）：这两种定义方式是等价的，此时的引用a不能被更新。如：a++ 这是错误的。      其实，不论是参数还是返回值，道理都是一样的，参数传入时候和函数返回的时候，初始化const变量       1      修饰参数的const，如 void fun0(const A* a ); void fun1(const A& a);       调用函数的时候，用相应的变量初始化const常量，则在函数体中，按照const所修饰的部分进行常量化，如形参为const A* a，则不能对传递进来的指针的内容     进行改变，保护了原指针所指向的内容；如形参为const A& a，则不能对传递进来的引用对象进行改变，     保护了原对象的属性。      [注意]：参数const通常用于参数为指针或引用的情况;       2      修饰返回值的const，如const A fun2( ); const A* fun3( );          这样声明了返回值后，const按照\"修饰原则\"进行修饰，起到相应的保护作用。const Rational operator*(const Rational& lhs, const Rational& rhs) { return Rational(lhs.numerator() * rhs.numerator(), lhs.denominator() * rhs.denominator()); }      返回值用const修饰可以防止允许这样的操作发生:Rational a,b; Radional c; (a*b) = c;以上内容来自C++ const的用法详解_()const-CSDN博客const修饰类的成员函数，表示成员常量，不能被修改，同时它只能在初始化列表中赋值。const修饰类的成员函数，则该成员函数不能修改类中任何非const成员函数。一般写在函数的最后来修饰。对于const类对象/指针/引用，只能调用类的const成员函数，因此，const修饰成员函数的最重要作用就是限制对于const对象的使用。const修饰类对象表示该对象为常量对象，其中的任何成员都不能被修改。对于对象指针和对象引用也是一样。const修饰的对象，该对象的任何非const成员函数都不能被调用，因为任何非const成员函数会有修改成员变量的企图。以上内容来自C++学习笔记——7. 你真的掌握const关键字的用法吗？（const用法总结） - 知乎 (zhihu.com)const还有底层与顶层const这一说法，根据primer C++里的说法来解释：用名词顶层cost(top-level const)表示指针本身是个常量，而用名词底层const(low-level const)表示指针所指的对象是一个常量。更一般的，顶层cost可以表示任意的对象是常量，这一点对任何数据类型都适用， 如算术类型、类、指针等。底层cost则与指针和引用等复合类型的基本类型部分有关。 比较特殊的是，指针类型既可以是顶层const也可以是底层const,这一点和其他类型 相比区别明显：当执行对象的拷贝操作时，常量是顶层const还是底层const区别明显。其中，顶 层const不受什么影响： 执行拷贝操作并不会改变被拷贝对象的值，因此，拷入和拷出的对象是否是常量都没什么 影响。 另一方面，底层const的限制却不能忽视。当执行对象的拷贝操作时，拷入和拷出 的对象必须具有相同的底层cost资格，或者两个对象的数据类型必须能够转换。一般 来说，非常量可以转换成常量，反之则不行：p3既是顶层const也是底层const,拷贝p3时可以不在乎它是一个顶层const,但是 必须清楚它指向的对象得是一个常量。因此，不能用P3去初始化P,因为P指向的是一 个普通的（非常量）整数。另一方面，P3的值可以赋给P2,是因为这两个指针都是底层 const,尽管p3同时也是一个常量指针(顶层const),仅就这次赋值而言不会有什么 影响。小总结：如果某个变量是一个常量的话，有指针或者引用拷贝时不能允许通过拷贝后的引用或者指针发生改变原来变量值的情况。参考：c++中static的用法详解 - 知乎 (zhihu.com)\\n                    CSDN-Ada助手: \\n                    推荐 算法 技能树：https://edu.csdn.net/skill/algorithm?utm_source=AI_act_algorithm\\n                \\n                    CSDN-Ada助手: \\n                    不知道 算法 技能树是否可以帮到你：https://edu.csdn.net/skill/algorithm?utm_source=AI_act_algorithm\\n                \\n                    征途黯然.: \\n                    This article about 虚幻中的网络概述一 is inspiring.\\n                \\n                    xian活: \\n                    谢谢\\n                \\n                    IOLZQ: \\n                    感谢 写的真不错！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "目录1. const成员函数的使用引入 2. const 成员函数使用的另一个例子 3. const 成员函数使用总结const 修饰的“成员函数”称之为const成员函数，const修饰类成员函数，实际修饰该成员函数隐含的this 指针，表明在该成员函数中不能对类的任何成员进行修改 。我们来看下面的代码：我们将代码运行起来发现第28行出现了报错，这是什么原因呢？ 为了解决这个问题，我们首先要详细回顾一下 this 指针的含义，this指针本质上是一个隐含的形参。实际上我们定义的日期类中的成员函数会变成这种函数形式：也就是说，谁调用就把谁的地址传过来，此时的this就是形参，整个过程就叫做隐含的this指针。this指针本身不能修改，因为它是const修饰的，但是this指针指向的对象可以被修改。我们可以对 this 指针做出以下的总结：this指针的类型：类的类型* const，只能在“成员函数”的内部使用 this指针本质上其实是一个成员函数的形参，是对象调用成员函数时，将对象地址作为实参传递给this形参。所以对象中不存储this指针。 this指针是成员函数第一个隐含的指针形参，一般情况由编译器通过ecx寄存器自动传递，不需要用户传递。因此我们对于上面的报错代码可以做出以下分析，从而得到程序报错的原因。如图所示： Date*传给Date* const没有问题，都是可读也可修改，所以d1调用print()不会出错，const Date* 指向的内容不能被修改，可是当它传给Date*时就出错了，因为Date*是可以修改的，这里传过去会导致权限放大。所以当然d调用print()函数报错。权限不能放大，只能缩小或不变。因此，我们只需要在函数后面加上 const 修饰即可。 先看代码： 毫无疑问，这样的程序依然会发生报错，我们可以提前推断出程序错误的原因可能是发生了权限不匹配问题。现在我们来做分析： &d1: Date*    &d2: const Date*  同样的我们可以对隐藏的this指针加上const修饰，做到权限保持。const 对象不可以调用非 const 成员函数。const对象去调用非const成员函数，会造成权限放大的现象，原本在类外const对象的内容是不可以修改的，但是到了函数内部却有可以修改了，这是不被允许的。非const 对象可以调用 const 成员函数。非const对象本身就是可读可写的，那在函数内部你要去修改或者不修改都不会有影响。const成员函数内不可以调用其它的非const成员函数。 const成员函数内部只能调用const成员函数。因为const成员函数内部的this指针已经具有常属性的，万一这个非const成员函数去修改了成员变量的内容就会出问题了。非const成员函数内可以调用其它的const成员函数。权限缩小是允许的。 \\n                    ha_lydms: \\n                    这篇博客真是我心灵的驿站，每次阅读都能够让我感到内心平静和宁静。\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您发布了第20篇博客！标题“C++ 拷贝构造函数和运算符重载”听起来非常有深度和技术含量。希望您继续保持这种热情和创作力，分享更多有价值的内容。或许在接下来的博客中，可以探讨一些实际案例或者深入分析一些常见问题，让读者更容易理解和应用您分享的知识。期待您的下一篇作品！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第18篇博客！看到您对C++的研究和分享，我感到非常兴奋。我想建议您在下一篇博客中可以深入探讨一些C++的实际应用场景，或者分享一些C++在项目中的实践经验。当然，这只是一个建议，期待您的下一篇精彩博文！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜博主发布了关于插入排序算法的博客！非常感谢您分享这样有益的知识，对于理解和掌握排序算法来说，这篇文章无疑是非常有帮助的。希望您能继续分享更多关于算法和编程的知识，或许下一篇可以介绍一下其他常用的排序算法，比如快速排序或归并排序。期待您的下一篇作品！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您发布了第16篇博客《二叉树入门》，内容详实且易懂，对于初学者来说非常有帮助。希望您能继续保持创作的热情，不断分享更多有趣的知识和经验。下一步建议可以尝试深入挖掘二叉树的高级应用或者与其他数据结构的结合，让读者能够更全面地了解这个领域。期待您的下一篇作品！祝您写作顺利，不断进步！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。"
        ]
    },
    {
        "prompt": "vue3+ts 将图片转为base64",
        "doc": [
            "使用一个<input>元素来上传图片，并使用JavaScript的FileReader API将图片转换为Base64编码。\\n        \\n    \\n                    CSDN-Ada助手: \\n                    恭喜您写了第16篇博客！对于清除文本中最后一个字符这个问题，您的解决方法让我受益匪浅。希望您能继续分享更多关于javascript的知识和技巧，让更多人受益。下一步可以考虑分享一些实用的javascript小技巧或者深入解析某些常用函数的实现原理，期待您的更多精彩内容！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您发布了第17篇博客！对于如何在javascript中对数组进行去重这个话题，您的解读非常清晰和详细，让我受益匪浅。希望您能继续保持创作的热情和动力，分享更多有趣、实用的内容给读者。下一步，建议可以尝试探讨javascript中其他常见操作的方法，比如数组排序或筛选等，相信会有更多人受益！期待您的下一篇作品！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您发布了第18篇博客！探讨如何在CSS中控制英文或数字自动换行，这是一个非常实用的主题。希望您能继续保持创作的热情和努力，为读者带来更多有价值的内容。或许在下一篇博客中，可以分享一些CSS中其他常见排版问题的解决方法，让我们一起期待吧！期待您的下一篇作品！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您发布了第15篇博客，内容涉及express实现图片上传，非常实用！希望您能继续保持创作的热情和努力，为读者带来更多有价值的内容。下一步可以考虑分享一些关于图片上传后的处理方法或者相关的前端页面展示技巧，期待您的精彩创作！祝您写作顺利，越来越好！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜你发布了第13篇博客！看到你分享了vue3实现图片上传转base64格式的教程，非常实用！希望你可以继续保持创作的热情和努力，为大家带来更多有价值的内容。下一步，或许可以考虑分享一些关于vue3其他功能或者实战经验，让更多人受益。期待你的下一篇博客，加油！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "<el-uploadclass=“upload-demo”action=“https://jsonplaceholder.typicode.com/posts/”:on-change=“handleRemove”multiple:limit=“3”点击上传注意：今天在使用Vue进行文件上传的代码编写时，发现报错：自我介绍一下，小编13年上海交大毕业，曾经在小公司待过，也去过华为、OPPO等大厂，18年进入阿里一直到现在。深知大多数前端工程师，想要提升技能，往往是自己摸索成长或者是报班学习，但对于培训机构动则几千的学费，着实压力不小。自己不成体系的自学效果低效又漫长，而且极易碰到天花板技术停滞不前！因此收集整理了一份《2024年Web前端开发全套学习资料》，初衷也很简单，就是希望能够帮助到想自学提升又不知道该从何学起的朋友，同时减轻大家的负担。      既有适合小白学习的零基础资料，也有适合3年以上经验的小伙伴深入学习提升的进阶课程，基本涵盖了95%以上前端开发知识点，真正体系化！由于文件比较大，这里只是将部分目录大纲截图出来，每个节点里面都包含大厂面经、学习笔记、源码讲义、实战项目、讲解视频，并且后续会持续更新如果你觉得这些内容对你有帮助，可以添加V获取：vip1024c （备注前端） web浏览器中的javascriptwindow对象计时器浏览器定位和导航浏览历史浏览器和屏幕信息对话框错误处理作为window对象属性的文档元素一个人可以走的很快，但一群人才能走的更远。如果你从事以下工作或对以下感兴趣，欢迎戳这里加入程序员的圈子，让我们一起学习成长！AI人工智能、Android移动开发、AIGC大模型、C C#、Go语言、Java、Linux运维、云计算、MySQL、PMP、网络安全、Python爬虫、UE5、UI设计、Unity3D、Web前端开发、产品经理、车载开发、大数据、鸿蒙、计算机网络、嵌入式物联网、软件测试、数据结构与算法、音视频开发、Flutter、IOS开发、PHP开发、.NET、安卓逆向、云计算语言、Java、Linux运维、云计算、MySQL、PMP、网络安全、Python爬虫、UE5、UI设计、Unity3D、Web前端开发、产品经理、车载开发、大数据、鸿蒙、计算机网络、嵌入式物联网、软件测试、数据结构与算法、音视频开发、Flutter、IOS开发、PHP开发、.NET、安卓逆向、云计算**\\n                    CSDN-Ada助手: \\n                    Java 技能树或许可以帮到你：https://edu.csdn.net/skill/java?utm_source=AI_act_java\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "先在main.js文件中定义转换方法1、下载插件2、在main.js中引入3、在build文件夹下的webpack.base.conf.js文件添加配置4、使用：\\n                    CSDN-Ada助手: \\n                    哇, 你的文章质量真不错，值得学习！不过这么高质量的文章, 还值得进一步提升, 以下的改进点你可以参考下: (1)增加条理清晰的目录；(2)提升标题与正文的相关性；(3)增加除了各种控件外，文章正文的字数。\\n                \\n                    阳光下的雨u: \\n                    通常是缺少构建工具或者编译环境，也有是因为依赖项版本不兼容\\n                \\n                    weixin_45297921: \\n                    请问这是什么原因造成的呢\\n                \\n                    CSDN-Ada助手: \\n                    是不是以后前端开发会越来越多写小程序？\\n                \\n                    马·走·日·: \\n                    this.chartSettings22  写到这个位置？\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            ""
        ]
    },
    {
        "prompt": "An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block. 什么意思",
        "doc": [
            "本文为您介绍编写和优化Hologres SQL语句时可能遇到的常见问题及解决方法。报错：Creating publication with table that without binlog is not supported now报错：bigint out of range报错：too many shards in this instance报错：Feature not supported: insert into parent table报错：timestamp out of range报错：internal error: Connect timeout, err: std_exception: Connection refused报错：value too long for type character varying(256)报错：internal error: Write is not allowed in readonly mode报错：SELECT INTO is not supported now报错：ALTER TABLE CHANGE OWNER is not supported in SLPM (Schema-Level Permission Mode)报错：ERROR: HGERR_msge division by zero报错：remaining connection slots are reserved for non-replication superuser connections报错：Build desc failed: Column type: information_schema.sql_identifier can not translate into hologres type报错：ERROR: permission denied for table pg_subscription报错：CREATE TABLE is not supported for current instance报错：DISTINCT is not implemented for window functions报错：ERROR: commit ddl phase1 failed: DDLWrite is not allowed on replica报错：Feature not supported: INSERT ON CONFLICT RETURNING报错：ERROR: Query:[xxx] Get result failed: canceling statement due to user request报错：Total memory used by all existing queries exceeded memory limitation报错：ERROR: INSERT in ddl transaction is not supported now报错：ERROR: INSERT has more expressions than target columns报错：ERROR: Feature not supported: INSERT on conflict contains un-unique column报错：query is cancelled Cannot find index full ID:xxx (table id: x, index id: x) in storages or it is deleting报错：ALTER TABLE ALTER COLUMN SET TYPE is not supported now报错：current transaction is aborted, commands ignored until end of transaction block报错：Feature not supported: UPDATE with shard keys报错：query length xxxxx exceeded the maximum 102400报错：The specified partition does not exist报错：time before 1925 not supported报错：ERROR:function xxx does not exist报错：Update row with Key (id)=(xxxx) multiple times报错：Modify record by primary key is not on this table报错：null value in column \\\"xxx\\\" violates not-null constraint报错：ERROR: Currently materialized view does not support aggregate on expressions, only support single column报错：invalid input syntax for type numeric: \\\\\\\"\\\\\\\"报错：ERROR: function jsonb_set(json, text[], jsonb, boolean) does not exist报错：ERROR: new row for relation violates partition constraint报错：Group by key is type of imprecise not supported报错：ERROR: xxx for fe ，should not be evaluated报错：SET_TABLE_PROPERTY and CREATE TABLE statement are not in the same transaction for table如何处理数字开头的字段？执行DROP TABLE语句报错：cannot drop table写入或查询含有多表Join时报错： BinaryArray cannot contain more than 2147483646 bytes建表时报错：CREATE TABLE is not supported for current instance导入或者查询数据时报错：Cannot reserve capacity larger than 2^31 - 1 for binary执行SQL时报错：internal error: Sequence is used out报错：ERROR: ORCA failed to produce a plan : Lookup of object [failed to get table cluster index ] in cache failed问题原因：对没有开启Binlog的表创建了Publication。解决方法：Publication用于订阅Binlog，只允许对开启Binlog的表创建Publication。问题原因：bigint类型的数据长度超过了限制。解决方法：处理脏数据，使其在bigint类型的长度范围内。问题原因：当前实例设置的Shard数量超过了实例Shard总数的限制。解决方法：梳理当前实例的Shard数，不建议设置超过总数的Shard数，详情请参见实例规格概述。问题原因：不支持将数据直接写入分区父表。解决方法：需要将数据写入指定的分区子表。问题原因：TIMESTAMP类型的字段数据超过了精度限制。解决方法：处理脏数据，使其在TIMESTAMP类型的数据精度范围内。问题原因：通常是由于某种原因导致了实例宕机，从而出现报错。解决方法：提交工单排查Hologres实例宕机原因。问题原因：字段长度超过了VARCHAR类型的长度限制。解决方法：处理数据或将VARCHAR的长度设置得更长。问题原因：不支持在从实例中执行INSERT、UPDATE或DELETE等操作。解决方法：从实例中只允许执行SELECT操作，其余操作请在主实例中执行。问题原因：Hologres不支持使用SELECT INTO语法。解决方法：您可使用INSERT INTO SELECT方式插入数据，详情请参见INSERT。问题原因：不支持在SLPM模型下使用ALTER TABLE方式改变表owner。解决方法：SLPM权限模式的表Owner都是用户组，可以将用户从用户组中移除。问题原因：不支持除数为0。解决方法：使用CASE WHEN方法绕过。创建MySQL兼容性插件，开启允许除以0的开关，详情请参见迁移MySQL至Hologres。问题原因：当前连接数已满，导致非Superuser账号无法连接。解决方法：使用Superuser账号释放空闲连接，详情请参见释放连接。问题原因：部分系统表的字段类型比较复杂，当前Hologres不支持。解决方法：不建议将复杂的系统表数据与Hologres表关联查询。问题原因：非Superuser执行select hg_dump_script语句需要具备一定的权限才能执行。解决方法：可以使用Superuser用户执行select hg_dump_script('表名')获取DDL.可以使用Superuser用户授予当前用户pg_subscription的查看权限，授权示例如下。问题原因：不支持在共享集群中创建内部表。解决方法：如果需要创建内部表，需使用通用型实例。共享集群仅支持创建外部表，外部表创建语法请参见CREATE FOREIGN TABLE。问题原因：Hologres目前不支持在窗口函数中使用DISTINCT关键字。解决方法：窗口函数中去掉DISTINCT。问题原因：不支持在从实例中修改IP白名单。解决方法：需要在主实例中修改IP白名单。问题原因：Hologres暂不支持insert on conflict returning的语法。解决方法：去掉returning，详情请参见INSERT ON CONFLICT(UPSERT)。问题原因：Query设置了超时时间，运行时间过长导致超时。解决方法：优化Query，缩短其运行时间，或者重新设置更加合理的超时时间。详情请参见Query管理。问题原因：Query由于内存超出，导致出现OOM。解决方法：详情请参见OOM常见问题排查指南。问题原因：不支持在事务中执行INSERT操作。如：解决方法：在事务外执行INSERT操作。问题原因：INSERT写入的列与目标表的列数不一致。解决方法：INSERT写入的列需要与目标表列数保持一致，一一对应。问题原因：INSERT ON CONFLICT中的CONFLICT条件使用了非主键字段。解决方法：INSERT ON CONFLICT中的CONFLICT条件只能使用主键字段，详情请参见INSERT ON CONFLICT(UPSERT)。问题原因：Query执行过程中，涉及到的表存在TRUNCATE或DROP行为，导致表的table id发生变化，Query被取消了。解决方法：使用Query洞察排查当前Query是否在同一时间执行了TRUNCATE或DROP操作，详情请参见Query洞察。问题原因：当前不支持通过ALTER TABLE方式修改表中的列类型。解决方法：重新建表并修改列类型。问题原因：通常是由于上一个Transaction的命令未执行完，又开始执行下一个命令导致报错。如：解决方法：执行rollback;命令结束当前事务并回滚所有未提交的更改。问题原因：Hologres不支持对主键或Distribution Key执行UPDATE操作。解决方法：修改SQL重新执行。问题原因：Query的长度超过了102400字节的限制。解决方法：改写Query，使其长度保持在规定范围内。问题原因：通常发生在数据写入或更新时，对应的表分区不存在。解决方法：提前创建对应的分区。问题原因：时间相关的函数默认支持的范围为1925~2282年，超过该范围则会报错。解决方法：如果是to_char、to_date或to_timestamp等函数，可以在SQL前通过设置GUC参数hg_experimental_functions_use_pg_implementation以支持更大范围的时间。详情请参见时间和日期转换函数。问题原因：使用函数时未创建对应的extension，或函数语法不满足规定。解决方法：按照Hologres的规定正确使用函数。问题原因：执行UPDATE操作时，主键有重复数据。具体如下：数据来源确实有主键重复数据。表设置了生命周期TTL，TTL到期了但数据还未被删除。解决方法：对于数据来源确实有主键重复数据：可在执行UPDATE操作前处理重复数据。对于设置了TTL的表：可使用hg_remove_duplicated_pk函数清理过期数据，详情见INSERT ON CONFLICT(UPSERT)。问题原因：通常是通过Flink写入数据时选择了更新模式，但目标表没有主键，导致数据无法更新。解决方法：为目标表设置合适的主键，详情请参见主键Primary Key。问题原因：向表中被定义为NOT NULL的列插入了NULL值。解决方法：去掉NULL值后再插入数据。问题原因：单表物化视图不支持表达式，从而导致报错。解决方法：单表物化视图不使用表达式，详情请参见实时物化视图（Beta）。问题原因：NUMERIC类型的字段有脏数据，不符合NUMERIC的数据规范。解决方法：处理脏数据。问题原因：JSONB_SET函数传入的参数类型不匹配导致报错。解决方法：JSONB_SET函数第一个参数需要传入JSONB类型，详情请参见JSON和JSONB类型。问题原因：分区表写入的值与定义的值不一致。例如分区定义的值为20240110，但是写入了其他分区值，导致了分区冲突，示例如下：解决方法：向分区表内写入符合分区约束的分区值。问题原因：Group by的字段类型是非精确类型，导致报错。解决方法：Group by中避免非精确数据类型，如float等，建议使用精确的数据类型。问题原因：通常是使用某个函数查询系统表导致的报错。该函数运行在Hologres的引擎，但是系统表的计算不会经过Hologres引擎。所以在执行时，将函数直接计算而不经过Hologres引擎，导致了报错。解决方法：不建议使用该函数操作Hologres系统表。问题原因：建表时CREATE TABLE和call属性不在一个事务（transaction）中，导致报错。解决方法：建表时CREATE TABLE需要和call属性放在同一个事务中，示例如下：交互式分析Hologres兼容PostgreSQL，使用语法同PostgreSQL，不支持数字开头的字段。如果您使用Hologres时遇到数字开头的字段，查询时需要为该字段增加双引号，示例如下。 问题原因表存在相关依赖，例如有视图使用了此表，导致删除表失败。解决方法使用如下命令删除表的同时删除相关依赖。table_name为要删除表的名称。问题原因Hologres单个字段大小的上限是2 GB，在统计信息未及时更新的情况下，多表Join时生成了不合理的执行计划，从而出现超过2 GB的报错。解决方法对Join的表执行如下命令用于更新表的统计信息。如果更新表的统计信息后仍然报错，说明数据中有较大字段，在SQL前使用如下命令添加GUC参数解决。问题原因当前实例是共享集群（实例Endpoint以hgmc开头，如hgmc-cn-xxwwwkkk，可以前往Hologres管理控台查看实例Endpoint），共享集群不支持创建内部表，只能创建外部表。解决方法按照创建外部表语法创建外部表，详情请参见CREATE FOREIGN TABLE。使用Hologres独享示例，可支持创建内部表。问题原因及解决方法原因一：Hologres单个字段大小的上限为2 GB，在统计信息未及时更新的情况下，不合理的执行计划，从而出现超过2 GB的报错。解决方法：对表执行analyze命令，用于更新表的统计信息。原因二：表字段数据量超过2 GB，导致报错。解决方法：在SQL前面添加以下GUC参数以降低每次Query读取的批次大小。问题原因：表中有serial类型，serial类型值超过了取值范围。解决方法：方法1：如果是serial类型，建议重新建表，并将类型改为bigserial。方法2：serial类型在写入时会获取表锁，建议避免使用serial类型。问题原因：建表时列名中含有空格。解决方法：删除该表重新创建。",
            "I use django.test.TestCase for my project testing, however altough I’ve read django topic documentation below part is ambigouse for me. below two method for writing LoginTest gets two types of errors:for ebove code I get below MySQLdb.OperationalError:I get below TransactionManagementErrorI know setUp() method will run before each test_* method but what is the root cause of raising TransactionalError? does test_* run parallel I know not!also as I tested if this LoginTest class have a single test_* method everything is fine.is there any article to explain the order and mechanism of running internal django.test.TestCase function?inhereting from TransactionTestCase instead of TestCase solved my problem.there is a part in django documentation says:class TransactionTestCase ¶TransactionTestCase inherits from SimpleTestCase to add some database-specific features:does it mean we can’t use ORM in a test case inhereted from django.test.TestCase and for those cases we should use TransactionTestCase?\\nit seems so becouse in my code I just used User.objects.create_user() in just setUp() with no other ORM and I got TransactionErrorbut below is Django internal code, the main question is what are those situations that useing TransactionTestCase is preffered to TestCase?In case you want to use more than one transaction in your test case class, you have to use TransactionTestCase (this include if you want to have a transaction in setUp() method as this method run before each test_* method). as documentations says TransactionTestCase reset the database state to a know state after each test.The web framework for perfectionists with deadlines.Powered by Discourse, best viewed with JavaScript enabled",
            "current release\\n                Home\\n                | Download this Documentation\\n            \\n        Home\\n        | Download this Documentation\\n        Changed in version 1.4: Session transaction management has been revised\\nto be clearer and easier to use.  In particular, it now features\\n“autobegin” operation, which means the point at which a transaction begins\\nmay be controlled, without using the legacy “autocommit” mode.The Session tracks the state of a single “virtual” transaction\\nat a time, using an object called\\nSessionTransaction.   This object then makes use of the underlying\\nEngine or engines to which the Session\\nobject is bound in order to start real connection-level transactions using\\nthe Connection object as needed.This “virtual” transaction is created automatically when needed, or can\\nalternatively be started using the Session.begin() method.  To\\nas great a degree as possible, Python context manager use is supported both\\nat the level of creating Session objects as well as to maintain\\nthe scope of the SessionTransaction.Below, assume we start with a Session:We can now run operations within a demarcated transaction using a context\\nmanager:At the end of the above context, assuming no exceptions were raised, any\\npending objects will be flushed to the database and the database transaction\\nwill be committed. If an exception was raised within the above block, then the\\ntransaction would be rolled back.  In both cases, the above\\nSession subsequent to exiting the block is ready to be used in\\nsubsequent transactions.The Session.begin() method is optional, and the\\nSession may also be used in a commit-as-you-go approach, where it\\nwill begin transactions automatically as needed; these only need be committed\\nor rolled back:The Session itself features a Session.close()\\nmethod.  If the Session is begun within a transaction that\\nhas not yet been committed or rolled back, this method will cancel\\n(i.e. rollback) that transaction, and also expunge all objects contained\\nwithin the Session object’s state.   If the Session\\nis being used in such a way that a call to Session.commit()\\nor Session.rollback() is not guaranteed (e.g. not within a context\\nmanager or similar), the close method may be used\\nto ensure all resources are released:Finally, the session construction / close process can itself be run\\nvia context manager.  This is the best way to ensure that the scope of\\na Session object’s use is scoped within a fixed block.\\nIllustrated via the Session constructor\\nfirst:Similarly, the sessionmaker can be used in the same way:sessionmaker itself includes a sessionmaker.begin()\\nmethod to allow both operations to take place at once:SAVEPOINT transactions, if supported by the underlying engine, may be\\ndelineated using the Session.begin_nested()\\nmethod:Each time Session.begin_nested() is called, a new “BEGIN SAVEPOINT”\\ncommand is emitted to the database within the scope of the current\\ndatabase transaction (starting one if not already in progress), and\\nan object of type SessionTransaction is returned, which\\nrepresents a handle to this SAVEPOINT.  When\\nthe .commit() method on this object is called, “RELEASE SAVEPOINT”\\nis emitted to the database, and if instead the .rollback()\\nmethod is called, “ROLLBACK TO SAVEPOINT” is emitted.  The enclosing\\ndatabase transaction remains in progress.Session.begin_nested() is typically used as a context manager\\nwhere specific per-instance errors may be caught, in conjunction with\\na rollback emitted for that portion of the transaction’s state, without\\nrolling back the whole transaction, as in the example below:When the context manager yielded by Session.begin_nested()\\ncompletes, it “commits” the savepoint,\\nwhich includes the usual behavior of flushing all pending state.  When\\nan error is raised, the savepoint is rolled back and the state of the\\nSession local to the objects that were changed is expired.This pattern is ideal for situations such as using PostgreSQL and\\ncatching IntegrityError to detect duplicate rows; PostgreSQL normally\\naborts the entire transaction when such an error is raised, however when using\\nSAVEPOINT, the outer transaction is maintained.   In the example below\\na list of data is persisted into the database, with the occasional\\n“duplicate primary key” record skipped, without rolling back the entire\\noperation:When Session.begin_nested() is called, the Session first\\nflushes all currently pending state to the database; this occurs unconditionally,\\nregardless of the value of the Session.autoflush parameter\\nwhich normally may be used to disable automatic flush.  The rationale\\nfor this behavior is so that\\nwhen a rollback on this nested transaction occurs, the Session\\nmay expire any in-memory state that was created within the scope of the\\nSAVEPOINT, while\\nensuring that when those expired objects are refreshed, the state of the\\nobject graph prior to the beginning of the SAVEPOINT will be available\\nto re-load from the database.In modern versions of SQLAlchemy, when a SAVEPOINT initiated by\\nSession.begin_nested() is rolled back, in-memory object state that\\nwas modified since the SAVEPOINT was created\\nis expired, however other object state that was not altered since the SAVEPOINT\\nbegan is maintained.  This is so that subsequent operations can continue to make use of the\\notherwise unaffected data\\nwithout the need for refreshing it from the database.See alsoConnection.begin_nested() -  Core SAVEPOINT APIThe Connection in Core and\\n_session.Session in ORM feature equivalent transactional\\nsemantics, both at the level of the sessionmaker vs.\\nthe Engine, as well as the Session vs.\\nthe Connection.  The following sections detail\\nthese scenarios based on the following scheme:Both Session and Connection feature\\nConnection.commit() and Connection.rollback()\\nmethods.   Using SQLAlchemy 2.0-style operation, these methods affect the\\noutermost transaction in all cases.   For the Session, it is\\nassumed that Session.autobegin is left at its default\\nvalue of True.Engine:Session:Both sessionmaker and Engine feature a\\nEngine.begin() method that will both procure a new object\\nwith which to execute SQL statements (the Session and\\nConnection, respectively) and then return a context manager\\nthat will maintain a begin/commit/rollback context for that object.Engine:Session:When using a SAVEPOINT via the Session.begin_nested() or\\nConnection.begin_nested() methods, the transaction object\\nreturned must be used to commit or rollback the SAVEPOINT.  Calling\\nthe Session.commit() or Connection.commit() methods\\nwill always commit the outermost transaction; this is a SQLAlchemy 2.0\\nspecific behavior that is reversed from the 1.x series.Engine:Session:The Session features “autobegin” behavior, meaning that as soon\\nas operations begin to take place, it ensures a SessionTransaction\\nis present to track ongoing operations.   This transaction is completed\\nwhen Session.commit() is called.It is often desirable, particularly in framework integrations, to control the\\npoint at which the “begin” operation occurs.  To suit this, the\\nSession uses an “autobegin” strategy, such that the\\nSession.begin() method may be called directly for a\\nSession that has not already had a transaction begun:The above pattern is more idiomatically invoked using a context manager:The Session.begin() method and the session’s “autobegin” process\\nuse the same sequence of steps to begin the transaction.   This includes\\nthat the SessionEvents.after_transaction_create() event is invoked\\nwhen it occurs; this hook is used by frameworks in order to integrate their\\nown transactional processes with that of the ORM Session.For backends which support two-phase operation (currently MySQL and\\nPostgreSQL), the session can be instructed to use two-phase commit semantics.\\nThis will coordinate the committing of transactions across databases so that\\nthe transaction is either committed or rolled back in all databases. You can\\nalso Session.prepare() the session for\\ninteracting with transactions not managed by SQLAlchemy. To use two phase\\ntransactions set the flag twophase=True on the session:Most DBAPIs support the concept of configurable transaction isolation levels.\\nThese are traditionally the four levels “READ UNCOMMITTED”, “READ COMMITTED”,\\n“REPEATABLE READ” and “SERIALIZABLE”.  These are usually applied to a\\nDBAPI connection before it begins a new transaction, noting that most\\nDBAPIs will begin this transaction implicitly when SQL statements are first\\nemitted.DBAPIs that support isolation levels also usually support the concept of true\\n“autocommit”, which means that the DBAPI connection itself will be placed into\\na non-transactional autocommit mode.   This usually means that the typical\\nDBAPI behavior of emitting “BEGIN” to the database automatically no longer\\noccurs, but it may also include other directives.   When using this mode,\\nthe DBAPI does not use a transaction under any circumstances.  SQLAlchemy\\nmethods like .begin(), .commit() and .rollback() pass silently.SQLAlchemy’s dialects support settable isolation modes on a per-Engine\\nor per-Connection basis, using flags at both the\\ncreate_engine() level as well as at the Connection.execution_options()\\nlevel.When using the ORM Session, it acts as a facade for engines and\\nconnections, but does not expose transaction isolation directly.  So in\\norder to affect transaction isolation level, we need to act upon the\\nEngine or Connection as appropriate.See alsoSetting Transaction Isolation Levels including DBAPI Autocommit - be sure to review how isolation levels work at\\nthe level of the SQLAlchemy Connection object as well.To set up a Session or sessionmaker with a specific\\nisolation level globally, the first technique is that an\\nEngine can be constructed against a specific isolation level\\nin all cases, which is then used as the source of connectivity for a\\nSession and/or sessionmaker:Another option, useful if there are to be two engines with different isolation\\nlevels at once, is to use the Engine.execution_options() method,\\nwhich will produce a shallow copy of the original Engine which\\nshares the same connection pool as the parent engine.  This is often preferable\\nwhen operations will be separated into “transactional” and “autocommit”\\noperations:Above, both “eng” and \"autocommit_engine\" share the same dialect and\\nconnection pool.  However the “AUTOCOMMIT” mode will be set upon connections\\nwhen they are acquired from the autocommit_engine.  The two\\nsessionmaker objects “transactional_session” and “autocommit_session\"\\nthen inherit these characteristics when they work with database connections.The “autocommit_session” continues to have transactional semantics,\\nincluding that\\nSession.commit() and Session.rollback() still consider\\nthemselves to be “committing” and “rolling back” objects, however the\\ntransaction will be silently absent.  For this reason, it is typical,\\nthough not strictly required, that a Session with AUTOCOMMIT isolation be\\nused in a read-only fashion, that is:When we make a new Session, either using the constructor directly\\nor when we call upon the callable produced by a sessionmaker,\\nwe can pass the bind argument directly, overriding the pre-existing bind.\\nWe can for example create our Session from a default\\nsessionmaker and pass an engine set for autocommit:For the case where the Session or sessionmaker is\\nconfigured with multiple “binds”, we can either re-specify the binds\\nargument fully, or if we want to only replace specific binds, we\\ncan use the Session.bind_mapper() or Session.bind_table()\\nmethods:A key caveat regarding isolation level is that the setting cannot be\\nsafely modified on a Connection where a transaction has already\\nstarted.  Databases cannot change the isolation level of a transaction\\nin progress, and some DBAPIs and SQLAlchemy dialects\\nhave inconsistent behaviors in this area.Therefore it is preferable to use a Session that is up front\\nbound to an engine with the desired isolation level.  However, the isolation\\nlevel on a per-connection basis can be affected by using the\\nSession.connection() method at the start of a transaction:Above, we first produce a Session using either the constructor or a\\nsessionmaker. Then we explicitly set up the start of a database-level\\ntransaction by calling upon Session.connection(), which provides for\\nexecution options that will be passed to the connection before the\\ndatabase-level transaction is begun.  The transaction proceeds with this\\nselected isolation level.   When the transaction completes, the isolation\\nlevel is reset on the connection to its default before the connection is\\nreturned to the connection pool.The Session.begin() method may also be used to begin the\\nSession level transaction; calling upon\\nSession.connection() subsequent to that call may be used to set up\\nthe per-connection-transaction isolation level:See the section Transaction Events for an overview\\nof the available event hooks for session transaction state changes.If a Connection is being used which is already in a transactional\\nstate (i.e. has a Transaction established), a Session can\\nbe made to participate within that transaction by just binding the\\nSession to that Connection. The usual rationale for this\\nis a test suite that allows ORM code to work freely with a Session,\\nincluding the ability to call Session.commit(), where afterwards the\\nentire database interaction is rolled back.Changed in version 2.0: The “join into an external transaction” recipe is\\nnewly improved again in 2.0; event handlers to “reset” the nested\\ntransaction are no longer required.The recipe works by establishing a Connection within a\\ntransaction and optionally a SAVEPOINT, then passing it to a\\nSession as the “bind”; the\\nSession.join_transaction_mode parameter is passed with the\\nsetting \"create_savepoint\", which indicates that new SAVEPOINTs should be\\ncreated in order to implement BEGIN/COMMIT/ROLLBACK for the\\nSession, which will leave the external transaction in the same\\nstate in which it was passed.When the test tears down, the external transaction is rolled back so that any\\ndata changes throughout the test are reverted:The above recipe is part of SQLAlchemy’s own CI to ensure that it remains\\nworking as expected.flambé! the dragon and The Alchemist image designs created and generously donated by Rotem Yaari.Website content copyright © by SQLAlchemy authors and contributors.\\n            SQLAlchemy and its documentation are licensed under the MIT license.SQLAlchemy is a trademark of Michael Bayer.  mike(&)zzzcomputing.com\\n        All rights reserved. Website generation by\\n        zeekofile, with\\n        huge thanks to the Blogofile\\n        project.",
            "current release\\n                Home\\n                | Download this Documentation\\n            \\n        Home\\n        | Download this Documentation\\n        SQLAlchemy 1.4 / 2.0 TutorialThis page is part of the SQLAlchemy Unified Tutorial.Previous: Establishing Connectivity - the Engine   |   Next: Working with Database MetadataWith the Engine object ready to go, we may now proceed\\nto dive into the basic operation of an Engine and\\nits primary interactive endpoints, the Connection and\\nResult.   We will additionally introduce the ORM’s\\nfacade for these objects, known as the Session.Note to ORM readersWhen using the ORM, the Engine is managed by another\\nobject called the Session.  The Session in\\nmodern SQLAlchemy emphasizes a transactional and SQL execution pattern that\\nis largely identical to that of the Connection discussed\\nbelow, so while this subsection is Core-centric, all of the concepts here\\nare essentially relevant to ORM use as well and is recommended for all ORM\\nlearners.   The execution pattern used by the Connection\\nwill be contrasted with that of the Session at the end\\nof this section.As we have yet to introduce the SQLAlchemy Expression Language that is the\\nprimary feature of SQLAlchemy, we will make use of one simple construct within\\nthis package called the text() construct, which allows us to write\\nSQL statements as textual SQL.   Rest assured that textual SQL in\\nday-to-day SQLAlchemy use is by far the exception rather than the rule for most\\ntasks, even though it always remains fully available.The sole purpose of the Engine object from a user-facing\\nperspective is to provide a unit of\\nconnectivity to the database called the Connection.   When\\nworking with the Core directly, the Connection object\\nis how all interaction with the database is done.   As the Connection\\nrepresents an open resource against the database, we want to always limit\\nthe scope of our use of this object to a specific context, and the best\\nway to do that is by using Python context manager form, also known as\\nthe with statement.\\nBelow we illustrate “Hello World”, using a textual SQL statement.  Textual\\nSQL is emitted using a construct called text() that will be discussed\\nin more detail later:In the above example, the context manager provided for a database connection\\nand also framed the operation inside of a transaction. The default behavior of\\nthe Python DBAPI includes that a transaction is always in progress; when the\\nscope of the connection is released, a ROLLBACK is emitted to end the\\ntransaction.   The transaction is not committed automatically; when we want\\nto commit data we normally need to call Connection.commit()\\nas we’ll see in the next section.Tip“autocommit” mode is available for special cases.  The section\\nSetting Transaction Isolation Levels including DBAPI Autocommit discusses this.The result of our SELECT was also returned in an object called\\nResult that will be discussed later, however for the moment\\nwe’ll add that it’s best to ensure this object is consumed within the\\n“connect” block, and is not passed along outside of the scope of our connection.We just learned that the DBAPI connection is non-autocommitting.  What if\\nwe want to commit some data?   We can alter our above example to create a\\ntable and insert some data, and the transaction is then committed using\\nthe Connection.commit() method, invoked inside the block\\nwhere we acquired the Connection object:Above, we emitted two SQL statements that are generally transactional, a\\n“CREATE TABLE” statement [1] and an “INSERT” statement that’s parameterized\\n(the parameterization syntax above is discussed a few sections below in\\nSending Multiple Parameters).  As we want the work we’ve done to be\\ncommitted within our block, we invoke the\\nConnection.commit() method which commits the transaction. After\\nwe call this method inside the block, we can continue to run more SQL\\nstatements and if we choose we may call Connection.commit()\\nagain for subsequent statements.  SQLAlchemy refers to this style as commit as\\nyou go.There is also another style of committing data, which is that we can declare\\nour “connect” block to be a transaction block up front.   For this mode of\\noperation, we use the Engine.begin() method to acquire the\\nconnection, rather than the Engine.connect() method.  This method\\nwill both manage the scope of the Connection and also\\nenclose everything inside of a transaction with COMMIT at the end, assuming\\na successful block, or ROLLBACK in case of exception raise.  This style\\nis known as begin once:“Begin once” style is often preferred as it is more succinct and indicates the\\nintention of the entire block up front.   However, within this tutorial we will\\nnormally use “commit as you go” style as it is more flexible for demonstration\\npurposes.What’s “BEGIN (implicit)”?You might have noticed the log line “BEGIN (implicit)” at the start of a\\ntransaction block.  “implicit” here means that SQLAlchemy did not\\nactually send any command to the database; it just considers this to be\\nthe start of the DBAPI’s implicit transaction.   You can register\\nevent hooks to intercept this event, for example.DDL refers to the subset of SQL that instructs the database\\nto create, modify, or remove schema-level constructs such as tables. DDL\\nsuch as “CREATE TABLE” is recommended to be within a transaction block that\\nends with COMMIT, as many databases uses transactional DDL such that the\\nschema changes don’t take place until the transaction is committed. However,\\nas we’ll see later, we usually let SQLAlchemy run DDL sequences for us as\\npart of a higher level operation where we don’t generally need to worry\\nabout the COMMIT.We have seen a few examples that run SQL statements against a database, making\\nuse of a method called Connection.execute(), in conjunction with\\nan object called text(), and returning an object called\\nResult.  In this section we’ll illustrate more closely the\\nmechanics and interactions of these components.Most of the content in this section applies equally well to modern ORM\\nuse when using the Session.execute() method, which works\\nvery similarly to that of Connection.execute(), including that\\nORM result rows are delivered using the same Result\\ninterface used by Core.We’ll first illustrate the Result object more closely by\\nmaking use of the rows we’ve inserted previously, running a textual SELECT\\nstatement on the table we’ve created:Above, the “SELECT” string we executed selected all rows from our table.\\nThe object returned is called Result and represents an\\niterable object of result rows.Result has lots of methods for\\nfetching and transforming rows, such as the Result.all()\\nmethod illustrated previously, which returns a list of all Row\\nobjects.   It also implements the Python iterator interface so that we can\\niterate over the collection of Row objects directly.The Row objects themselves are intended to act like Python\\nnamed tuples.\\nBelow we illustrate a variety of ways to access rows.Tuple Assignment - This is the most Python-idiomatic style, which is to assign variables\\nto each row positionally as they are received:Integer Index - Tuples are Python sequences, so regular integer access is available too:Attribute Name - As these are Python named tuples, the tuples have dynamic attribute names\\nmatching the names of each column.  These names are normally the names that the\\nSQL statement assigns to the columns in each row.  While they are usually\\nfairly predictable and can also be controlled by labels, in less defined cases\\nthey may be subject to database-specific behaviors:Mapping Access - To receive rows as Python mapping objects, which is\\nessentially a read-only version of Python’s interface to the common dict\\nobject, the Result may be transformed into a\\nMappingResult object using the\\nResult.mappings() modifier; this is a result object that yields\\ndictionary-like RowMapping objects rather than\\nRow objects:SQL statements are usually accompanied by data that is to be passed with the\\nstatement itself, as we saw in the INSERT example previously. The\\nConnection.execute() method therefore also accepts parameters,\\nwhich are known as bound parameters.  A rudimentary example\\nmight be if we wanted to limit our SELECT statement only to rows that meet a\\ncertain criteria, such as rows where the “y” value were greater than a certain\\nvalue that is passed in to a function.In order to achieve this such that the SQL statement can remain fixed and\\nthat the driver can properly sanitize the value, we add a WHERE criteria to\\nour statement that names a new parameter called “y”; the text()\\nconstruct accepts these using a colon format “:y”.   The actual value for\\n“:y” is then passed as the second argument to\\nConnection.execute() in the form of a dictionary:In the logged SQL output, we can see that the bound parameter :y was\\nconverted into a question mark when it was sent to the SQLite database.\\nThis is because the SQLite database driver uses a format called “qmark parameter style”,\\nwhich is one of six different formats allowed by the DBAPI specification.\\nSQLAlchemy abstracts these formats into just one, which is the “named” format\\nusing a colon.Always use bound parametersAs mentioned at the beginning of this section, textual SQL is not the usual\\nway we work with SQLAlchemy.  However, when using textual SQL, a Python\\nliteral value, even non-strings like integers or dates, should never be\\nstringified into SQL string directly; a parameter should always be\\nused.  This is most famously known as how to avoid SQL injection attacks\\nwhen the data is untrusted.  However it also allows the SQLAlchemy dialects\\nand/or DBAPI to correctly handle the incoming input for the backend.\\nOutside of plain textual SQL use cases, SQLAlchemy’s Core Expression API\\notherwise ensures that Python literal values are passed as bound parameters\\nwhere appropriate.In the example at Committing Changes, we executed an INSERT\\nstatement where it appeared that we were able to INSERT multiple rows into the\\ndatabase at once.  For DML statements such as “INSERT”,\\n“UPDATE” and “DELETE”, we can send multiple parameter sets to the\\nConnection.execute() method by passing a list of dictionaries\\ninstead of a single dictionary, which indicates that the single SQL statement\\nshould be invoked multiple times, once for each parameter set.  This style\\nof execution is known as executemany:The above operation is equivalent to running the given INSERT statement once\\nfor each parameter set, except that the operation will be optimized for\\nbetter performance across many rows.A key behavioral difference between “execute” and “executemany” is that the\\nlatter doesn’t support returning of result rows, even if the statement includes\\nthe RETURNING clause. The one exception to this is when using a Core\\ninsert() construct, introduced later in this tutorial at\\nUsing INSERT Statements, which also indicates RETURNING using the\\nInsert.returning() method.  In that case, SQLAlchemy makes use of\\nspecial logic to reorganize the INSERT statement so that it can be invoked\\nfor many rows while still supporting RETURNING.See alsoexecutemany - in the Glossary, describes the\\nDBAPI-level\\ncursor.executemany()\\nmethod that’s used for most “executemany” executions.“Insert Many Values” Behavior for INSERT statements - in Working with Engines and Connections, describes\\nthe specialized logic used by Insert.returning() to deliver\\nresult sets with “executemany” executions.As mentioned previously, most of the patterns and examples above apply to\\nuse with the ORM as well, so here we will introduce this usage so that\\nas the tutorial proceeds, we will be able to illustrate each pattern in\\nterms of Core and ORM use together.The fundamental transactional / database interactive object when using the\\nORM is called the Session.  In modern SQLAlchemy, this object\\nis used in a manner very similar to that of the Connection,\\nand in fact as the Session is used, it refers to a\\nConnection internally which it uses to emit SQL.When the Session is used with non-ORM constructs, it\\npasses through the SQL statements we give it and does not generally do things\\nmuch differently from how the Connection does directly, so\\nwe can illustrate it here in terms of the simple textual SQL\\noperations we’ve already learned.The Session has a few different creational patterns, but\\nhere we will illustrate the most basic one that tracks exactly with how\\nthe Connection is used which is to construct it within\\na context manager:The example above can be compared to the example in the preceding section\\nin Sending Parameters - we directly replace the call to\\nwith engine.connect() as conn with with Session(engine) as session,\\nand then make use of the Session.execute() method just like we\\ndo with the Connection.execute() method.Also, like the Connection, the Session features\\n“commit as you go” behavior using the Session.commit() method,\\nillustrated below using a textual UPDATE statement to alter some of\\nour data:Above, we invoked an UPDATE statement using the bound-parameter, “executemany”\\nstyle of execution introduced at Sending Multiple Parameters, ending\\nthe block with a “commit as you go” commit.TipThe Session doesn’t actually hold onto the\\nConnection object after it ends the transaction.  It\\ngets a new Connection from the Engine\\nthe next time it needs to execute SQL against the database.The Session obviously has a lot more tricks up its sleeve\\nthan that, however understanding that it has a Session.execute()\\nmethod that’s used the same way as Connection.execute() will\\nget us started with the examples that follow later.See alsoBasics of Using a Session - presents basic creational and usage patterns with\\nthe Session object.SQLAlchemy 1.4 / 2.0 TutorialNext Tutorial Section: Working with Database Metadataflambé! the dragon and The Alchemist image designs created and generously donated by Rotem Yaari.Website content copyright © by SQLAlchemy authors and contributors.\\n            SQLAlchemy and its documentation are licensed under the MIT license.SQLAlchemy is a trademark of Michael Bayer.  mike(&)zzzcomputing.com\\n        All rights reserved. Website generation by\\n        zeekofile, with\\n        huge thanks to the Blogofile\\n        project."
        ]
    },
    {
        "prompt": "为什么报错\n```JavaScript\nfunction(){\r\n    console.log(\"未来是什么\")\r\n}\n```",
        "doc": [
            "此浏览器不再受支持。请升级到 Microsoft Edge 以使用最新的功能、安全更新和技术支持。本文概述了 控制台的功能。内容：可以在上部窗格中以工具或抽屉中的工具的形式打开控制台。按 Ctrl+Shift+J (Windows、Linux) 或 Command+Option+J (macOS) 。若要从命令菜单中打开控制台工具，请键入Console并运行旁边有面板锁屏提醒的“显示控制台”命令。按 Esc。或者，单击“ 自定义和控制 DevTools (...) 然后选择” 显示控制台抽屉”。“DevTools”窗口底部弹出“抽屉”，并打开 “控制台” 工具。若要从命令菜单打开控制台工具，请键入“控制台”，然后运行旁边有抽屉锁屏提醒的“显示控制台”命令。单击 “主机设置” () 按钮。若要显示 边栏，请单击“ 显示控制台边栏 () 。  边栏可帮助你进行筛选。本部分包含更改消息在控制台中的显示方式的功能。  有关动手演练，请参阅 查看消息。若要关闭 主机的默认消息分组行为，请单击“ 主机设置” ( “) ”按钮，然后选择“ 分组相似”旁边的复选框。  有关示例，请参阅 记录 XHR 和提取请求。若要在 XMLHttpRequest 每次发生时将所有和 Fetch 请求记录到 控制台 ，请单击 “控制台设置” () 按钮，然后选中 “Log XMLHttpRequests”旁边的复选框。上图中的顶部消息显示 控制台的默认分组行为。  加载新网页时，默认操作将清除 控制台。  若要在页面加载期间保留消息，请单击“ 控制台设置” () 按钮，然后选择“ 保留日志”旁边的复选框。Microsoft Edge 的默认操作是将网络消息记录到 控制台。  在下图中，所选消息表示 的 429HTTP 状态代码。若要隐藏网络消息，请执行以下操作：单击 “主机设置” () 按钮。选中 “隐藏网络”旁边的复选框。有多种方法可在 控制台中筛选出消息。若要仅显示来自网页 JavaScript 的消息， 请打开控制台边栏 ，然后单击# 用户消息。DevTools 为每个方法分配 console.* 四个严重级别之一：例如， console.log() 位于 Info 组中，但 console.error() 位于 Error 组中。  控制台对象 API 参考介绍了每个适用方法的严重性级别。  浏览器记录到控制台的每条消息也有严重性级别。可以隐藏不感兴趣的任何级别的邮件。  例如，如果只对消息感兴趣 Error ，则可以隐藏其他三个组。若要筛选消息，请单击“日志级别”下拉列表，然后选择 、VerboseInfo、 Warning或 Error。若要使用日志级别进行筛选， 请打开控制台边栏 ，然后选择 “错误”、“ 警告”、“ 信息”或“ 详细”。键入 url: 后跟 URL，以便仅查看来自该 URL 的消息。  键入 url:后，DevTools 将显示所有相关 URL。  域也正常工作。  例如，如果 https://example.com/a.js 和 https://example.com/b.js 正在记录消息， url:https://example.com 则允许你专注于这两个脚本中的消息。若要隐藏 URL 中的消息，请键入 -url:。  这是一个负 URL 筛选器。显示来自单个 URL 的消息：打开控制台边栏。展开 #用户消息 部分。选择包含要关注的消息的脚本的 URL。假设你的网页上有一个广告 (广告) 。  广告嵌入在 中， <iframe> 并在 控制台中生成许多消息。  由于广告在不同的 JavaScript 上下文中运行，因此隐藏消息的一种方法是单击“ 控制台设置” () 按钮，然后选中“ 仅选定上下文”旁边的复选框。在“筛选器”文本框中键入正则表达式，以/[gm][ta][mi]/筛选出与该模式不匹配的任何消息。  DevTools 检查是否在消息文本或导致记录消息的脚本中找到模式。本部分包含与 在控制台中运行 JavaScript 相关的功能。  有关动手演练，请参阅 运行 JavaScript。按 向上键 可循环浏览之前在 控制台中运行的 JavaScript 表达式的历史记录。  按 Enter 再次运行该表达式。如果你发现自己在 控制台 中反复键入相同的 JavaScript 表达式，你可能会发现创建 实时表达式更容易。  使用 实时表达式时，键入一次表达式，然后将其固定到 主机顶部。  表达式的值几乎实时更新。  请参阅 使用实时表达式监视 Real-Time 中的 JavaScript 表达式值。在控制台中键入 JavaScript 表达式时，预先评估会显示返回值的预览。  若要关闭返回值预览：：键入表达式时， 控制台 的自动完成弹出窗口将显示之前运行的表达式。  表达式预写有 > 字符。  若要停止显示历史记录中的表达式，请单击“ 主机设置 () 按钮，然后清除“ 从历史记录中自动完成 ”复选框旁边的复选框。在下图中， document.querySelector('a') 和 document.querySelector('img') 是前面计算的表达式。默认情况下，JavaScript 上下文下拉列表设置为 top，表示main网页的浏览上下文。假设你的网页上有一个 <iframe>广告嵌入到 中，并且你想要运行 JavaScript 来调整广告的 DOM。  单击 “JavaScript 上下文” 下拉列表，然后选择广告的浏览上下文：若要清除控制台，请使用以下任一方法：单击“ 清除主机” () ”。右键单击邮件，然后选择“ 清除控制台”。在控制台中键入 clear() ，然后按 Enter。从网页的 JavaScript 调用 console.clear() 。当主机处于焦点时，按 Ctrl+L 。注意此页面的部分内容是基于 Google 创建和 共享 的工作进行的修改，并根据 Creative Commons 署名 4.0 国际许可中所述的条款使用。\\n原始页面 在此处 找到，由 Kayce Basques (Technical Writer、Chrome DevTools & Lighthouse) 创作。 此作品根据 Creative Commons 署名 4.0 国际许可获得许可。",
            "Hello，大家好，我是 Sunday。在日常开发中，大多数同学都会通过 console.log 的方式来进行代码调试。但是 console.log 是具备很多局限性的，比如：我们想要获取某段代码的执行耗时，通过 console.log 就无法满足需求。那么怎么办呢？其实对于 console 对象来说，除了 log 方法它还提供了很多其他的方法帮助我们进行调试，利用这些方法可以极大地提升我们的工作效率~~使用 console.table 可视化复杂的对象和数组：打印结果如下：图片使用 console.trace 可以明确函数的调用逻辑关系：打印结果如下：图片使用 console.time && console.timeEnd 来记录代码的执行耗时：打印结果如下：图片使用 console.assert 断言你的判断逻辑。如果断言为假，它抛出一个你指定的错误：打印结果如下：图片在很多时候，我们的控制台可能会打印非常多的内容。所以，可以让代码在执行到某一个特定的时机时，利用 console.clear() 清空控制台执行之后会打印这个：图片使用 console.error 直接打印一个错误级别的描述：打印结果如下：\\n            \\n                \\n                    \\n                        \\n                        \\n\\t\\t\\t\\t\\t    图片\\n\\t\\t\\t\\t\\t\\t\\n                        \\n                    \\n                \\n            \\n        微信扫码分享2018-01-26 10:42:442023-02-24 08:00:002021-03-17 08:53:212018-03-08 11:10:332020-03-25 08:26:442010-01-27 13:54:522022-07-06 15:51:482020-05-20 19:38:112023-08-31 09:10:182020-01-09 08:26:162019-05-06 15:27:482011-02-22 16:09:532021-09-07 07:53:432010-06-13 11:28:392013-03-29 13:17:532012-05-21 10:13:052024-03-07 08:22:322024-03-18 07:56:492021-05-28 11:30:392017-09-12 15:11:12微信扫码分享\\n                            北京市海淀区中关村南1条甲1号ECO中科爱克大厦6-7层\\n                        \\n                            北京市公安局海淀分局备案编号：110108002980号\\n                            营业执照\\n                            京ICP备09067568号\\n                            Copyright © 2005-2024 51CTO.COM\\n                            京ICP证060544 版权所有 未经许可 请勿转载\\n                        51CTO技术栈公众号51CTO技术栈公众号",
            "",
            "console.log(a1) //相当于console.log(window.a1)a2() //相当于window.a2()var a1 = 3funciton a2() {console.log(‘a2’)}我们都知道在执行代码之前 a1 和a2已经存在于window里了，说明在执行全局代码之前，js引擎肯定做了一些准备工作1. 全局执行上下文准备工作：在执行全局代码前将window确定为全局执行上下文对全局数据进行预处理(预编译)①var定义的全局变量 ------> undefined， 添加为window的属性②function声明的全局函数 --------> 赋值(fun)，添加为window的方法③this --------> 赋值(window)总结：也就是说，我们访问用var声明的变量或者用function定义函数，都会从全局上下文(window)找2. 函数执行上下文function fn(a1) {console.log(a1); //2console.log(a2); //undefineda3() //a3console.log(this); //windowconsole.log(arguments) //伪数组(2,3)var a2 = 3function a3() {console.log(‘a3’);}}fn(2,3)准备工作：在调用函数后，准备执行函数体之前，创建对应的函数执行上下文对象(虚拟的，存在于栈中)对局部数据进行预处理(预编译)①形参变量--------> 赋值(实参)，添加为(该函数的)执行上下文的属性②argument--------> 赋值(实参列表)，添加为(该函数的)执行上下文的属性①var定义的全局变量 ------> undefined， 添加为(该函数的)执行上下文的属性②function声明的全局函数 --------> 赋值(fun)，添加为(该函数的)执行上下文的方法③this --------> 赋值(调用函数的对象)三、执行上下文栈===========================================================================//1.进入全局执行上下文var a = 10var bar = function(x) {var b = 5foo(x + b) //foo能够重新调用吗？ //3.进入foo函数执行上下文}var foo = function(y) {var c = 5console.log(a + c + y);}bar(10) //2.进入bar函数执行上下文可能有些人会有疑问foo在bar函数里，那么foo函数会执行吗？ 会的。因为是先定义的foo函数，然后再调用bar，而在调用foo函数时，window上已经存在了。相当于：var a;var bar;var foo;a = 10bar = function(x) {var b = 5foo(x + b)}foo = function(y) {var c = 5console.log(a + c + y);}bar(10)这样就很好理解了吧！那么，以上代码块总共创建了几个执行上下文呢？3个：window执行上下文、bar执行上下文、foo执行上下文得出结论：n + 1 个n：调用了几个函数1：window那么，有这么多的执行上下文，我们就需要用栈来管理它们1.在全局代码执行前,JS引擎就会创建一个栈来存储管理所有的执行上下文对象2.在全局执行上下文(window)确定后,将其添加到栈中(压栈)3.在函数执行上下文创建后,将其添加到栈中(压栈)4.在当前函数执行完后,将栈顶的对象移除(出栈)5.当所有的代码执行完后,栈中只剩下window四、经典面试题==========================================================================面试题1依次输出什么？整个过程中产生了几个执行上下文？//1.依次输出什么？//2.整个过程中产生了几个执行上下文？console.log(‘global begin’ + i);var i = 1foo(1)function foo(i) {if(i === 4) {return}console.log(‘foo() begin:’ + i);foo(i + 1)console.log(‘foo() end:’ + i);}console.log(‘global end:’ + i);依次输出：global begin undefinedfoo() begin: 1foo() begin: 2foo() begin: 3foo() end: 3foo() end: 2foo() end: 1执行上下文： 5个foo 1~4个window 1个global end: 1面试题2var c = 1function c() {console.log©}c(2) // c is not a function相当于：function c() {console.log©var c = 3}var cc = 1 //此处覆盖了1覆盖了c函数，因此调用1，肯定就会报错了c(2) // c is not a function面试题3console.log(bar); // funciont bar() { console.log(123) }console.log(bar()); // undefinedvar bar = 456;function bar() {console.log(123); // 123}console.log(bar); // 456bar = 789;console.log(bar); // 789console.log(bar()) // bar is not a function本题考察变量提升谁先执行，很显然是函数提升优先。以上代码块相当于：自我介绍一下，小编13年上海交大毕业，曾经在小公司待过，也去过华为、OPPO等大厂，18年进入阿里一直到现在。深知大多数前端工程师，想要提升技能，往往是自己摸索成长或者是报班学习，但对于培训机构动则几千的学费，着实压力不小。自己不成体系的自学效果低效又漫长，而且极易碰到天花板技术停滞不前！因此收集整理了一份《2024年Web前端开发全套学习资料》，初衷也很简单，就是希望能够帮助到想自学提升又不知道该从何学起的朋友，同时减轻大家的负担。既有适合小白学习的零基础资料，也有适合3年以上经验的小伙伴深入学习提升的进阶课程，基本涵盖了95%以上前端开发知识点，真正体系化！由于文件比较大，这里只是将部分目录截图出来，每个节点里面都包含大厂面经、学习笔记、源码讲义、实战项目、讲解视频，并且会持续更新！如果你觉得这些内容对你有帮助，可以扫码获取！！（备注：前端）核心竞争力，怎么才能提高呢？成年人想要改变生活，逆转状态？那就开始学习吧~万事开头难，但是程序员这一条路坚持几年后发展空间还是非常大的，一切重在坚持。为了帮助大家更好更高效的准备面试，特别整理了《前端工程师面试手册》电子稿文件。前端面试题汇总JavaScript性能linux前端资料汇总前端工程师岗位缺口一直很大，符合岗位要求的人越来越少，所以学习前端的小伙伴要注意了，一定要把技能学到扎实，做有含金量的项目，这样在找工作的时候无论遇到什么情况，问题都不会大。68d8f5bef31e668ce.png)性能linux前端资料汇总前端工程师岗位缺口一直很大，符合岗位要求的人越来越少，所以学习前端的小伙伴要注意了，一定要把技能学到扎实，做有含金量的项目，这样在找工作的时候无论遇到什么情况，问题都不会大。\\n                \\n                  博客等级\\n                \\n                  \\n              请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。"
        ]
    },
    {
        "prompt": "写一个C语言基于T507H linux-arm平台运行的RS485串口程序\n",
        "doc": [
            "要在ARM Linux上使用C语言读取Modbus协议的串口数据，需要按照以下步骤进行操作：打开串口设备：使用open()函数打开串口设备文件，例如\"/dev/ttyUSB0\"。可以使用O_RDWR标志表示读写模式打开串口。配置串口参数：使用tcgetattr()函数获取当前串口属性，然后修改其中的参数，例如波特率、数据位、停止位和奇偶校验等。最后使用tcsetattr()函数将修改后的属性应用到串口设备。配置Modbus通信：使用libmodbus库（或其他Modbus库）来配置Modbus通信。创建modbus_t结构体对象并使用modbus_new_rtu()函数初始化，指定串口设备文件和其他通信参数，例如波特率和从机地址。建立Modbus连接：使用modbus_connect()函数连接到Modbus设备。根据需要，可以设置连接的超时时间。读取Modbus数据：使用modbus_read_registers()等函数来读取Modbus设备的数据。根据Modbus协议的要求，指定要读取的寄存器地址和寄存器数量。处理Modbus数据：根据需要，对读取到的Modbus数据进行解析和处理。根据Modbus协议的规定，解析数据的格式和含义。关闭Modbus连接和串口设备：使用modbus_close()函数关闭Modbus连接，使用close()函数关闭串口设备。下面是一个简单的示例代码，演示了在ARM Linux上使用C语言读取Modbus协议的串口数据：\\n        \\n    \\n                    章鱼哥嵌入式开发: \\n                    谢谢认可\\n                \\n                    ha_lydms: \\n                    作者总是能够用简洁而有力的语言表达最深刻的思想，让我感到非常震撼和敬佩。\\n                \\n                    章鱼哥嵌入式开发: \\n                    只是个范例，如果多任务数据量大的话就有必要了\\n                \\n                    人生得意_徐尽欢: \\n                    工程量小，是不是没必要用操作系统呢？就比如串口通讯，用中断方式就结束了\\n                \\n                    章鱼哥嵌入式开发: \\n                    有的,有AT32的库包含这个工程\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者章鱼哥嵌入式开发坚持不易，你们的鼓励是我的动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "开发过程中会Windows 和 Ubuntu 下进行文件传输，在进行Linux开发时，我们需要将在Windows下编写的代码传输Ubuntu下进行编译，我们需要采用FTP服务打开 Ubuntu 的终端窗口，然后执行如下命令来安装 FTP 服务：sudo apt-get install vsftpd等待软件自动安装，安装完成以后使用 VI 命令打开/etc/vsftpd.conf，命令如下：sudo vi /etc/vsftpd.conf打开 vsftpd.conf 文件以后找到如下两行：local_enable=YES write_enable=YES确保上面两行前面没有“#”，有的话就取消掉.①下载：Windows 下 FTP 客户端我们使用 FileZilla，下载后双击，然后一直点击下一步直至安装完成。 ②配置： 打开软件，界面如下 点击：文件->站点管理器->新站点,然后对站点的“常规”进行设置,如下图所示：  点击连接后Ubuntu下的文件目录如下图所示：  发现Ubuntu 文件目录下的中文目录都是乱码的，这是因为编码方式没有选对，先断开连接，点击： 服务器(S)->断开连接，然后打开站点管理器，选中要设置的站点“Ubuntu”，选择“字符集”，如下图：  最后就配置完成了FTP后面进行 Linux 驱动开发的时候需要 NFS 启动，因此要先安装并开启 Ubuntu 中的 NFS 服务，使用如下命令安装 NFS 服务：sudo apt-get install nfs-kernel-server rpcbind等待安装完成，安装完成以后在用户根目录下创建一个名为“linux”的文件夹，以后所有的东西都放到这个“linux”文件夹里面，在“linux”文件夹里面新建一个名为“nfs”的文件夹。以后我们可以在开发板上通过网络文件系统来访问 nfs 文件夹，要先配置 nfs，使用如下命令打开 nfs 配置文件/etc/exports：sudo vi /etc/exports打开/etc/exports 以后在后面添加如下所示内容：/home/zuozhongkai/linux/nfs *(rw,sync,no_root_squash)然后重启 NFS 服务，使用命令如下：sudo /etc/init.d/nfs-kernel-server restart开启 Ubuntu 的 SSH 服务以后我们就可以在 Windwos 下使用终端软件登陆到 Ubuntu，比如使用 SecureCRT，Ubuntu 下使用如下命令开启 SSH 服务：sudo apt-get install openssh-server上述命令安装 ssh 服务，ssh 的配置文件为/etc/ssh/sshd_config，使用默认配置即可。ARM 裸机、Uboot 移植、Linux 移植这些都需要在 Ubuntu 下进行编译，编译就需要编译器.Ubuntu 自带的 gcc 编译器是针对 X86 架构的！而我们现在要编译的是 ARM 架构的代码，所以我们需要一个在 X86 架构的 PC 上运行，可以编译 ARM 架 构代码的 GCC 编译器，这个编译器就叫做交叉编译器。交叉编译器就是： 1、它是一个 GCC 编译器。 2、这个 GCC 编译器是运行在 X86 架构的 PC 上的。 3、这个 GCC 编译器是编译 ARM 架构代码的，也就是编译出来的可执行文件是在 ARM 芯片上运行的。 交叉编译器有很多种，我们使用 Linaro 出品的交叉编译器，有很多种 GCC 交叉编译工具链，因为我们所使用的 I.MX6U-ALPHA 开发板是一个 Cortex-A7 内核的开发板，因此选择 arm-linux-gnueabihf。 使用前面已经安装好的 FileZilla 将交叉编译器拷贝到 Ubuntu 中刚刚新建的“tool”文件夹中，操作如下图所示：  拷贝完成后在 Ubuntu 中创建目录：/usr/local/arm，命令如下：sudo mkdir /usr/local/arm自我介绍一下，小编13年上海交大毕业，曾经在小公司待过，也去过华为、OPPO等大厂，18年进入阿里一直到现在。深知大多数Linux运维工程师，想要提升技能，往往是自己摸索成长或者是报班学习，但对于培训机构动则几千的学费，着实压力不小。自己不成体系的自学效果低效又漫长，而且极易碰到天花板技术停滞不前！因此收集整理了一份《2024年Linux运维全套学习资料》，初衷也很简单，就是希望能够帮助到想自学提升又不知道该从何学起的朋友，同时减轻大家的负担。     既有适合小白学习的零基础资料，也有适合3年以上经验的小伙伴深入学习提升的进阶课程，基本涵盖了95%以上Linux运维知识点，真正体系化！由于文件比较大，这里只是将部分目录大纲截图出来，每个节点里面都包含大厂面经、学习笔记、源码讲义、实战项目、讲解视频，并且后续会持续更新如果你觉得这些内容对你有帮助，可以添加VX：vip1024b （备注Linux运维获取） 最全的Linux教程，Linux从入门到精通======================linux从入门到精通(第2版)Linux系统移植Linux驱动开发入门与实战LINUX 系统移植 第2版Linux开源网络全栈详解 从DPDK到OpenFlow第一份《Linux从入门到精通》466页====================内容简介====本书是获得了很多读者好评的Linux经典畅销书**《Linux从入门到精通》的第2版**。本书第1版出版后曾经多次印刷，并被51CTO读书频道评为“最受读者喜爱的原创IT技术图书奖”。本书第﹖版以最新的Ubuntu 12.04为版本，循序渐进地向读者介绍了Linux 的基础应用、系统管理、网络应用、娱乐和办公、程序开发、服务器配置、系统安全等。本书附带1张光盘，内容为本书配套多媒体教学视频。另外,本书还为读者提供了大量的Linux学习资料和Ubuntu安装镜像文件，供读者免费下载。本书适合广大Linux初中级用户、开源软件爱好者和大专院校的学生阅读，同时也非常适合准备从事Linux平台开发的各类人员。需要《Linux入门到精通》、《linux系统移植》、《Linux驱动开发入门实战》、《Linux开源网络全栈》电子书籍及教程的工程师朋友们劳烦您转发+评论一个人可以走的很快，但一群人才能走的更远。如果你从事以下工作或对以下感兴趣，欢迎戳这里加入程序员的圈子，让我们一起学习成长！AI人工智能、Android移动开发、AIGC大模型、C C#、Go语言、Java、Linux运维、云计算、MySQL、PMP、网络安全、Python爬虫、UE5、UI设计、Unity3D、Web前端开发、产品经理、车载开发、大数据、鸿蒙、计算机网络、嵌入式物联网、软件测试、数据结构与算法、音视频开发、Flutter、IOS开发、PHP开发、.NET、安卓逆向、云计算ms/4304bb5a486d4c3ab8389e65ecb71ac0)AI人工智能、Android移动开发、AIGC大模型、C C#、Go语言、Java、Linux运维、云计算、MySQL、PMP、网络安全、Python爬虫、UE5、UI设计、Unity3D、Web前端开发、产品经理、车载开发、大数据、鸿蒙、计算机网络、嵌入式物联网、软件测试、数据结构与算法、音视频开发、Flutter、IOS开发、PHP开发、.NET、安卓逆向、云计算\\n        \\n    \\n                    CSDN-Ada助手: \\n                    推荐 Java 技能树：https://edu.csdn.net/skill/java?utm_source=AI_act_java\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "字符设备是 Linux 驱动中最基本的一类设备驱动，字符设备就是一个一个字节，按照字节流进行读写操作的设备，读写数据是分先后顺序的。比如我们最常见的点灯、按键、IIC、SPI， LCD 等等都是字符设备，这些设备的驱动就叫做字符设备驱动。Linux 驱动有两种运行方式，第一种就是将驱动编译进 Linux 内核中，这样当 Linux 内核启动的时候就会自动运行驱动程序。第二种就是将驱动编译成模块(Linux 下模块扩展名为.ko)，在Linux 内核启动以后使用“modprobe”命令加载驱动模块。 在调试驱动的时候一般都选择将其编译为模块，这样我们修改驱动以后只需要编译一下驱动代码即可，不需要编译整个 Linux 代码。而且在调试的时候只需要加载或者卸载驱动模块即可，不需要重启整个系统。总之，将驱动编译为模块最大的好处就是方便开发，当驱动开发完成，确定没有问题以后就可以将驱动编译进Linux 内核中，当然也可以不编译进 Linux 内核中，具体看自己的需求。 模块有加载和卸载两种操作，我们在编写驱动的时候需要注册这两种操作函数，模块的加载和卸载注册函数如下：为了搞清楚这两个函数的使用方法，我们可以参照一下内核的写法。最后写出相应代码demo_project.c。然后我们现在写一下Makefile。第 1 行，KERNELDIR 表示开发板所使用的 Linux 内核源码目录，使用绝对路径，大家根据自己的实际情况填写即可。 第 2 行，CURRENT_PATH 表示当前路径，直接通过运行“pwd”命令来获取当前所处路径。 第 3 行，obj-m 表示将 demo_project.c 这个文件编译为 chrdevbasedemo_project.ko 模块。 第 8 行，具体的编译命令，后面的 modules 表示编译模块，-C 表示将当前的工作目录切换到指定目录中，也就是 KERNERLDIR 目录。M 表示模块源码目录，“make modules”命令中加入 M=dir 以后程序会自动到指定的 dir 目录中读取模块的源码并将其编译为.ko 文件。 然后，我们make一下： 这样一来发现最终编译是成功的。当然，我们也需要提前写好工作区下的两个配置文件。 第一个是c_cpp_properties.json:第二个是settings.json:make之前的目录是：  make之后的目录是：  然后，我们将生成的.ko文件复制到对应目录下面去。这样一来，我们在串口终端的相应目录下也看到了这个文件。  在第一次使用这个模块的时候，我们可能会报错。  在这个时候我们在串口终端输入depmod后恢复正常。最终是生成了四个文件： 然后，我们分别使用modprobe demo_project.ko 和rmmod demo_project.ko来加载和卸载设备，使用lsmod命令来查看设备，效果如下：  这样一来，驱动模块的加载和卸载就算顺利完成了。对于字符设备驱动而言，当驱动模块加载成功以后需要注册字符设备，同样，卸载驱动模块的时候也需要注销掉字符设备。字符设备的注册和注销函数原型如下所示:根据这两个函数，利用现有的内核资源，编辑出相应的驱动代码：这里面有一个设备号的概念：为了方便管理，Linux 中每个设备都有一个设备号，设备号由主设备号和次设备号两部分组成，主设备号表示某一个具体的驱动，次设备号表示使用这个驱动的各个设备。Linux 提供了一个名为 dev_t 的数据类型表示设备号，dev_t 定义在文件 include/linux/types.h 里面，dev_t 其实就是 unsigned int 类型，是一个 32 位的数据类型。这 32 位的数据构成了主设备号和次设备号两部分，其中高 12 位为主设备号，低 20 位为次设备号。因此 Linux系统中主设备号范围为 0~4095。 我们使用cat /proc/devices命令查看一下有哪些设备，其中字符设备如下： 首先，我们利用man命令查看open、close、read、write和printf的详细信息，里面的信息包括了包含的头文件、函数的写法、函数的输入输出要求以及注意事项等信息。是我们编写应用程序最重要的参考依据。  我们需要在vscode中创建一个名为demo_projectAPP.c的文件，经过我们熟练地使用man指令，写出下面的程序：我们使用arm-linux-gnueabinf-gcc来编译一下该应用程序 将生成的文件拷贝到相应目录下驱动加载成功需要在/dev 目录下创建一个与之对应的设备节点文件，应用程序就是通过操作这个设备节点文件来完成对具体设备的操作。输入如下命令创建/dev/demo_project 这个设备节点文件：其中mknod是创建节点命令，/dev/demo_project是要创建的节点文件，c表示这是个字符设备，200是设备的主设备号，0是设备的次设备号。创建完成以后就会存在/dev/demo_project这个文件，可以使用ls /dev/demo_project-l命令查看  重新利用make编译模块并拷贝.ko至相应目录下，重复第一小节的操作。我们最后利用cat /proc/devices命令查看一下有哪些设备。  发现有主设备号为200的设备。最后运行这个应用程序  到这里就大功告成了。这一小节写起来会非常轻松了，这里主要是使用到了四个函数：atoi()、memcpy、copy_to_user和copy_from_user。 demo_project.c的代码如下:demo_projectAPP.c的代码如下:我们在终端进行操作，得到相应的结果：  OK，到这里我们就大功告成了！\\n                \\n                  博客等级\\n                \\n                  \\n              \\n        \\n    \\n                    killer-p: \\n                    哥们，这个博客来自哪个公众号呀，写得真好\\n                \\n                    2401_83364227: \\n                    引用「2005年考察输出“1-4-7-2-5-8-3-6-9”这几个数字」\\n真的帮助很大\\n                \\n                    钟一鸣-: \\n                    你这个S4按键的长按影响了S4按键的短按功能  不太合理\\n                \\n                    Dokin丶: \\n                    大佬写的很好，期待后文\\n                \\n                    CSDN-Ada助手: \\n                    恭喜你，获得了 2023 博客之星评选的入围资格，请看这个帖子 （https://bbs.csdn.net/topics/617282534?utm_source=blogger_star_comment）。 请在这里提供反馈： https://blogdev.blog.csdn.net/article/details/129986459?utm_source=blogger_star_comment。\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者Elec Liu你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            ""
        ]
    },
    {
        "prompt": "C/C++ Extension Pack 是干嘛用的插件",
        "doc": [
            "第一期的插件合集已经更新完毕，已经将文章链接放在文章末尾，大家如果有文献阅读、翻译、笔记、查看期刊影响因子的插件配置可以去插件合集（一）去查看哦，不会配置插件的小伙伴也可以去查看小白配置教程~今天给大家推荐另外几款很不错的zotero插件~zotero官方推荐插件，网页链接：zotero官方推荐插件GitHub官网插件下载链接：GitHub官网下载下载scholaread插件：scholaread插件下载网页直达：scholaread网页直达Scholaread插件论文同步后直接查看：界面简洁直观，功能强大易操作的zotero插件，主要有以下功能：配置步骤点击zotero内悬浮弹窗→进入官网注册账号→点击授权→点击打开zotero（浏览器弹窗直接打开无需手动复制）如果无法跳出弹窗，还需要： copy 复制密钥→回到 zotero→点击编辑→点击首选项→scholaread中粘贴密钥→OK小新学姐：Zotero超强冷门插件—文献翻译阅读管理工具scholaread使用教程注意如果无法弹出弹窗，需要手动复制一下密钥粘贴到zotero的scholaread中zotero Reading List 插件下载：reading list 插件下载Zotero Reading List 是一个冷门的插件，它提供了更多直观和美观的方式来管理每份论文的阅读状态。它提供了5种不同的阅读状态，包括 \"New\"（全新未读）、\"To Read\"（准备阅读）、\"In Progress\"（正在阅读）、\"Read\"（已读完）和 \"Not Reading\"（不准备读）。这种多样化的状态选择能够更详细地了解文献的阅读进度，并更轻松地管理每篇文献的状态。通过不同的图标和颜色，可以更直观地了解和区分不同的阅读状态，使得文献管理更加直观和有效。配置步骤：安装好插件→选择标题栏→右键勾选Read Status列→工具→Zotero Reading List Preferences 按照洗好勾选三项→选择某篇论文右键→Read Status →选择状态（快捷键输入）第一步：安装好插件后右键标题栏勾选Read Status列第二步 在工具Zotero Reading List Preferences 按照喜好勾选三项第三步 选择某篇论文右键→Read Status →选择状态（快捷键输入）快捷键使用：zotero chartero插件下载：chartero插件下载zotero中文献阅读的可视化管理，具体有以下功能：配置步骤：安装好插件→选择右上角“文库总览”即可查看单独文献阅读数据：点击某篇论文→仪表盘注意：如果有不兼容的情况，选择之前的版本下载即可安装好插件，右上角选择文库预览 查看相关数据查看更详细的数据和导出，右上角全屏查看或导出单独篇的阅读数据，在首页或者PDF阅读里面都可以查看Night插件下载：Night for Zotero 插件下载、熬夜党必备的深色模式，有自行切换深色模式的开关，根据个人喜好和使用场景进行调整~配置步骤：插件安装好之后直接右上角切换即可，如果未显示，重启zotero哦zotero-reference插件下载：zotero-reference 插件下载Zotero Reference 插件为大家在阅读文献的同时提供了便捷的参考文献查阅功能：配置步骤：插件安装好后→编辑→首选项→参考文献（配置见后图）→打开一篇论文→点击右上角→点击参考文献→刷新→点击加好将文献加入阅读列表第一步：插件安装好之后，编辑→首选项第二步 参考文献配置第三步 打开一篇论文→点击右上角→点击参考文献→刷新第四步 点击加号将文献加入阅读列表首页点击论文可以查看该论文关联了哪些其他的论文第五步 选择参考文献中的论文，查看参考文献中论文的摘要如果有在zotero中查看文献，想要分屏对应查看某个图表，可以右键选择横向分屏scite插件下载：scite 插件下载可以一键判断论文是否靠谱，自动识别论文被支持、反驳、引用的次数，还有详细的引用报告，写文献综述的时候可以很好地用上配置步骤：安装好插件→右键标题→勾选 supporting、contrasting、mentioning→列数显示论文支持、被引用、反驳次数→右键论文→选择“view scite report”查看完整引用报告第一步 右键标题→勾选 supporting、contrasting、mentioning第二步 列数显示论文支持、被引用、反驳次数第三步 右键论文→选择“view scite report”查看完整引用报告其他插文章参考小新学姐：最全zotero必备插件合集（一）小新学姐：吐血整理 ，最快配置zotero入门教程——小白必备小新学姐：Zotero超强冷门插件——文献翻译阅读管理工具scholaread使用教程小新学姐：zotero同步+翻译，一个插件就搞定!小新学姐：Zotero影响因子、期刊标签不显示最新解决教程以上就是今天学姐分享的最新插件啦，如果大家在插件配置上有任何问题，都可以私信学姐，或者直接点击反馈哦~问题反馈，如果觉得有用可以双击屏幕，给学姐个小红心~后续还会分享更多zotero插件哦！",
            "",
            "#插件 #文献管理[Zotero]使用JurisM Style实现同时生成“et al”和“等”[Zotero修改版]终于可以原生支持同时生成“et al”和“等”了完成后出现插件图标，在扩展选项中更新插件 在【Advanced】—【Translators】 中点击Update translators  在知网文章下载页面点击Zotero插件图标，如果只有snapshot说明设置未成功，仅能在Zotero中关联知网页面，并不能保存pdf 继续点击Update translators，不断刷新（可能需要很多次，别着急）直到出现full text pdf 为止 成功！ 完成后就可以在Zoerozotero+short-doi+sci-hub可以实现大部分英文文献的抓取与免费下载。 short-doi：快速抓取文献doi提示：以下是本篇文章正文内容，下面案例可供参考在https://github.com/bwiernik/zotero-shortdoi/releases下载short-doi插件并在zotero中安装。 点击工具----DOI Manager Preferences，按照默认设置即可，如图 （1）编辑----首选项----高级----设置编辑器  （2）点击I accept the risk！  （3）搜索extensions.zotero.findPDFs.resolvers，见下图步骤1，  （4）双击搜索到的extensions.zotero.findPDFs.resolvers，见上图步骤2，出现下图所示对话框  （5）将默认的[]改为下面的代码，点击OK 至此，所有步骤结束，该功能已经可以使用。（1）直接通过浏览器插件抓取 （2）对于只抓取了原文链接没有抓取pdf的条目，选中----右键单击----找到可用的pdf，即可获取pdf文件。https://mp.weixin.qq.com/s/QMSG24tgn4z8ShfE9pVYMg https://mp.weixin.qq.com/s/ddJ_liehAU0fJ7M8B-Hrzggithub Zotero-style 和Zotero-tag的安装及使用方法 - 知乎 (zhihu.com)zotero-style: https://github.com/MuiseDestiny/zotero-style/releases zotero-tag: https://github.com/windingwind/zotero-tag/releases Zutilo下载他们的 .xpi 文件 ：可以直接提取： 链接：https://pan.baidu.com/s/1PeNd3Pc_mc7sShsg8PavLQ?pwd=c67r 提取码：c 67 r工具–>附加组件–>右上角设置–>Install add-on from file–>找到刚才插件下载存放的位置，加载进来将鼠标放在图中圈起的位置，然后鼠标右键，选中你要添加的列，如下是我的添加后的效果（1）编辑—>首选项—>zotero tag （2）然后自己设定一些规则，可以参考我下面设置的，其中⭐（复制的地方）不是打出来的，可以直接复制黏贴过去（3）接下来随便选中一篇文献，然后通过快捷键添加标签，此时在右侧的标签栏就可以看到这篇文献的标签增加了（4）但是你还需要给标签分配颜色，找到左下角标签，像下面这样，给每个标签分配一个颜色注意：⭐也需要分配颜色才能显示出来，可以给他随便分配一个颜色，就可以在文献中显示出来啦经过以上设置，我们就实现了通过快捷键来标记文献信息啦！Release 2.5.1: 支持easyScholar配置密钥获取自定义数据集 · MuiseDestiny/zotero-style (github.com)（下图为 chrome 点击 es 扩展后的界面）  国自然管科 CCF Release Release 1.0.20 · windingwind/zotero-pdf-translate (github.com) 按上述方法进行安装 效果图如下： \\n                    CSDN-Ada助手: \\n                    Python入门 技能树或许可以帮到你：https://edu.csdn.net/skill/python?utm_source=AI_act_python\\n                \\n                    前  行: \\n                    请问mac应该怎么办呢\\n                \\n                    RS_boy: \\n                    太方便了，感谢博主\\n                \\n                    、东月白: \\n                    \\n                \\n                    Thomas1120: \\n                    哇，这样看文献方便多了\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "大家在下载安装和同步zotero之后，今天就给大家来说一下zotero中插件的安装方法和一些zotero必备的插件合集！Zotero有非常丰富的插件库，在Zotero中安装插件对于用zotero来管理文献的同学至关重要，插件配置好之后，能够帮助大家提高论文管理和读论文的效率哦，下面就来看看zotero的安装方法和必备的插件有哪些吧~zotero官方推荐插件，网页链接：zotero官方推荐插件GitHub官网插件下载链接：GitHub官网下载下载scholaread插件：Scholaread插件论文同步后直接查看：界面简洁直观，功能强大易操作的zotero插件，主要有以下功能：配置步骤点击zotero内悬浮弹窗→进入官网注册账号→点击授权→点击打开zotero（浏览器弹窗直接打开无需手动复制）如果无法跳出弹窗，还需要： copy 复制密钥→回到 zotero→点击编辑→点击首选项→scholaread中粘贴密钥→OK小新学姐：Zotero超强冷门插件—文献翻译阅读管理工具scholaread使用教程注意如果无法弹出弹窗，需要手动复制一下密钥粘贴到zotero的scholaread中下载茉莉花插件：茉莉花插件如果你经常读中文文献，且经常使用知网下载论文，这个插件必须安装！它主要有以下功能：配置步骤第一步：编辑→首选项第二步：茉莉花→非官方维护中文翻译器→更新全部第三步：中文插件设置全选→点击打卡知网→输入知网登陆账号后的链接第四步：知网里选择需要的论文直接存到zotero注意如果存到Zotero中的文章没有pdf文件，可以选择论文→点击右键→知网助手→查找知网附件下载sci-hub插件：sci-hub插件利用 Sci-Hub 自动下载带有 DOI 条目的 PDF 文献，后续会自动更新，如果地址失效需要手动更新有效地址失效后手动更新步骤：编辑→首选项→sci-hub→更新链接注意如果抓取的文献无pdf，选择文献点击右键将对应的PDF加到zotero中下载zotero style 插件：zotero style 插件配置步骤点击标题栏→点击右键→勾选需要展示内容以评级为例具体操作步骤为：点击评级→点击列设置→选择自己喜欢的团案样式、颜色→保存→选择论文设置推荐的图案样式网站：✂️ Emoji Emoticon Copy Paste   | EmojiAll English Official Website颜色选择网站：colorhunt——配色选择下载链接：Zotcard插件卡片样式选择社区：欢迎分享你的卡片模版 · 018/zotcard · Discussion #2配置步骤安装好插件→工具→zotcard选项→配置→复制代码→保存→打开一篇论文→右上角→＋号→选择模板→边读论文边记笔记Better Notes下载链接：Better Notes 插件配置步骤在上面的Zotcard配置好后→点击右上角齿轮→先点击设为工作区笔记→点击在工作区预览→切换不同视图/保存图片/保存大纲笔记green frog 插件下载：green frog 插件下载在上面的zotero style 期刊标签设置好之后，想要显示论文影响因子的同学可以下载小绿蛙（green frog）参考文章：小新学姐：Zotero影响因子、期刊标签不显示最新解决教程具体操作步骤安装小绿蛙插件→编辑→首选项→绿青蛙→复制密钥→ok→选择论文→右键→从easyscholar更新期刊信息1.下载\"xpi\"结尾的插件；2.打开zotero→附加组件→齿轮图标→ Install Add-on From File→选择下载好的插件安装→重启Zotero具体操作截图： 其他zotero插件配置下载小新学姐：zotero必装插件合集最新（二）小新学姐：Zotero超强冷门插件——文献翻译阅读管理工具scholaread使用教程小新学姐：最全zotero必备插件合集（最新更新20231129）小新学姐：吐血整理 ，最快配置zotero入门教程——小白必备用上面的插件就能快速上手zotero啦！如果觉得有用可以双击屏幕，给学姐个小红心~后续还会分享更多zotero插件哦！"
        ]
    },
    {
        "prompt": "如何修改，让caption中的文字居中\n```undefined\n <table class=\"table\" >\r\n            <caption class=\"table_title\">预售许可证信息</caption>\r\n            <tr class=\"table_3\">\r\n                <td class=\"td_1\">开发企业：</td>\r\n                <td>万年县爱佳房地产开发有限公司</td>\r\n            </tr>\r\n            <tr class=\"table_2\">\r\n                <td class=\"td_1\">项目名称：</td>\r\n                <td>黄金壹号院</td>\r\n            </tr>\n```",
        "doc": [
            "表格存在即是合理的。 表格的现在还是较为常用的一种标签，但不是用来布局，常见显示、展示表格式数据。因为它可以让数据显示的非常的规整，可读性非常好。table 标签表示表格数据-------即通过二维数据表表示的信息。table 里面包含的二级元素按如下格式：具体使用情况见如下代码：表格标签 table 支持全局属性。下列的 border、cellspacing、cellpadding、width、height、align、bgcolor、frame、rules、summary 已经废弃，用CSS来代替。HTML <caption> 元素 (or HTML 表格标题元素) 展示一个表格的标题， 它常常作为 <table> 的第一个子元素出现，同时显示在表格内容的最前面，但是，它同样可以被CSS样式化，所以，它同样可以出现在任何一个一个相对于表格的做任意位置。见1.1caption 标签支持全局属性。表格列组（Column Group <colgroup>）标签用来定义表中的一组列表。见1.1colgroup 标签支持全局属性，除此之外，还支持如下属性：这个属性用于定义列组中的每一个列成员的背景颜色。但不要使用这个并未被标准化的属性，它只是在 IE 的某些版本中生效。这个属性包含一个正整数，表示 colgrouup 定义的连续列组的个数，如果没有定义的话，默认值为1。col 元素定义表格中的列，并用于定义所有公共单元格上的公共语义。它通常位于 <colgroup> 元素内。见1.1col 标签支持全局属性，除此之外，还支持如下属性：这个属性用于定义列组中的每一个列成员的背景颜色。但不要使用这个并未被标准化的属性，它只是在 IE 的某些版本中生效。这个属性包含一个正整数，表示 colgrouup 定义的连续列组的个数，如果没有定义的话，默认值为1。<thead> 元素定义了一组定义表格的列头的行。见1.1thead 标签支持全局属性，除此之外，还支持如下属性：这个属性用于定义每个单元格的背景颜色。但不要使用这个并未被标准化的属性，它只是在 IE 的某些版本中生效。tbody 标签封装了一组行，表明它们组成了表的主体。见1.1tbody 标签支持全局属性。<tr> 元素定义表格中的行。同一行可同时出现 <td> 和 <th> 元素。见1.1tr 标签支持全局属性。th 标签定义表格内的表头单元格。这部分特征是由 scope 和header 属性准确定义的。见1.1th 标签支持全局属性，除此之外，还支持如下属性：这个属性定义了每列中每单元格的背景色。不要使用这个属性，它不是标准属性且仅在某些版本的 Microsoft Internet Explorer 支持。这个属性包含一个正整数表示了每单元格中扩展列的数量。默认值为1 。超过1000的值被视作1000。这个属性包含了一个空间分隔的字符串的列表，每个与其他<th> 元素相关联的 id 属性一一对应。这个属性包含一个正整数，表示了每单元格中扩展列的数量。默认值为1。如果该值被设置为 0，这个单元格就被扩展为(<thead>，<tbody> 或 <tfoot>)中表格部分的最后一个元素。比65534大的值被视作65534。这个枚举属性定义了表头元素 (在 <th> 中定义) 关联的单元格。它可能有以下值：表头关联一行中所有的单元格。表头关联一列中所有的单元格。表头属于一个行组并与其中所有单元格相关联。这些单元格可以被放在表头的左侧或右侧，取决于 <table> 元素中 dir 属性的值 。表头属于一个列组并与其中所有单元格相关联。td 标签定义了一组包含数组的表格单元格。见1.1th 标签支持全局属性，除此之外，还支持如下属性：这个属性定义了每列中每单元格的背景色。不要使用这个属性，它不是标准属性且仅在某些版本的 Microsoft Internet Explorer 支持。这个属性包含一个正整数，表示了每单元格中扩展列的数量。默认值为1 。超过1000的值被视作1。这个属性包含了一个空间分隔的字符串的列表，每个与其他<th> 元素相关联的 id 属性一一对应。这个属性包含一个正整数，表示了每单元格中扩展列的数量。默认值为1。如果该值被设置为 0，这个单元格就被扩展为(<thead>，<tbody> 或 <tfoot>)中表格部分的最后一个元素。比65534大的值被视作65534。合并单元格是我们比较常用的一个操作，但是不会合并的很复杂。合并单元格的顺序，我们按照先上后下，先左后右的顺序，跟我们以前学习汉字的书写顺序完全一致。<tfoot> 定义了一组表格中各列的汇总行。见1.1tfoot 标签支持全局属性，除此之外，还支持如下属性：此属性定义了列内单元格的背景色。 请勿使用此属性，因为这并非标准，且只有某些特定版本的 Microsoft Internet Explorer（IE浏览器）支持。如果你感觉文章不咋地//(ㄒoㄒ)//，就在评论处留言，作者继续改进；o_O??? 如果你觉得该文章有一点点用处，可以给作者点个赞；\\\\\\\\*^o^*// 如果你想要和作者一起进步，可以微信扫描二维码，关注前端老L；~~~///(^v^)\\\\\\\\\\\\~~~ 谢谢各位读者们啦(^_^)∠※！！！\\n        \\n    \\n                    爱敲代码的向鱼: \\n                    我遇到同样的情况 他在oncreate方法已经初始化，也拿到实例了传入进去还是为null，和上面的情况一样的\\n                \\n                    Mr  Robot: \\n                    可以给个完整的处理代码吗谢谢\\n                \\n                    伤心小狗床边哭: \\n                    一样的写法 为啥获取不\\n                \\n                    Fuhuan3: \\n                    直接照搬源文档啊\\n                \\n                    Bnnnnnnnnnnnnn: \\n                    用那个上传图片的key没有禁掉诶\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者老__L你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "",
            "目录表格标题提示，hover可显示tooltip (提示框) 动态创建Table设置表格标题居中固定左侧右侧表头使用data-sortable=\"true\"排序, 自定义获取排序参数自定义排序图标    Bootstrap中文网这里使用的是tooltip (提示框) 效果tooltip (提示框) 是一个小小的弹窗，在鼠标移动到元素上显示，鼠标移到元素外就消失。常用的功能，可以通过以下属性来设置：触发提示框的方式：1、click 【默认】单击时显示或关闭2、hover 移上去显示，移出去隐藏3、focus 单击时显示，点击空白处时隐藏4、manual 手动模式。需要调用js代码触发显示或关闭提示框设置提示框内容是否支持HTML格式。默认值:false当值为true时，title属性值可以设置成html代码。不过建议不要这么设置，以防XSS攻击默认值false，当提示框用于按钮组、表单或表格时，必须指定选项容器：'body'以避免不必要的副作用，（例如当触发弹出窗口时元素变宽和/或失去圆角）。data-container = \"body\"可以使用 Bootstrap 的 mx-auto 类或者text-center 类设置居中插件地址一、datatables.net-fixedcolumns (v4.3.0) - FixedColumns for DataTables | BootCDN - Bootstrap 中文网开源项目免费 CDN 加速服务二、 三、GitHub - wenzhixin/bootstrap-table-fixed-columns: https://bootstrap-table.com/docs/extensions/fixed-columns/在bootstrap-table配置中加入如下配置 使用htmljs因原来的排序图标不是很明显, 且点击后才有显示, 所以提出优化下使用本地图片替换原图片效果 换了个大图标,(ps:图片来自网络, 比较丑)\\n        \\n    \\n                    瑶山: \\n                    是php.ini-development复制复制过来的，修改为：php.ini。\\n                \\n                    抱抱九儿°: \\n                    你好我们问一下，这个修改php.ini扩展文件，用笔记本查找的时候没有是什么情况啊\\n                \\n                    abc54rfuhsef: \\n                    怎么向里面加数据？我加数据老报错\\n                \\n                    瑶山: \\n                    安装路径换了吗, 换了路径对应有配置路径的地方也要换\\n                \\n                    ...........1111: \\n                    师傅 请问一下我刚开始用最新版的php去按着步骤操作 最后能在浏览器上面看到php执行后的代码 但是我按照同样的步骤只不过把php的版本换成了5.2.1这个后就显示无法连接到localhost了\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者瑶山你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "我花了两天时间试图解决无花果/无花果问题无济于事 .我有一个Django应用程序，用户可以在其中提交图像，我正在使用图形和figcaption标签来显示带有附带 Headers 的图像 . 主要问题是 Headers 宽度超出图片宽度 .我试图找出一种方法让图像保持相同的大小和 Headers ，以相应地排列宽度 . 我也在使用Twitter-Bootstrap . 我对所有解决方案持开放态度 . 任何意见，经验或建议都非常感谢 .更新：这是实际的HTML模板代码和CSS：这个问题的解决方案是使用TABLE和TABLECAPTION . 它只有2行代码 .您可以在网站上看到此解决方案的实时预览：http://www.sandrasen.de/projektgebiete/kienheide/在HTML5中，事情非常简单：HTMLCSS关键是如果可以的话，在 figure 元素上为 img 设置某种 max-width ，那么它将保持它和文本的约束 .See an example fiddle .首先，这个 <figure width=\"{{story.pic.width_field}}\"> 应该是 <figure style=\"width: {{story.pic.width_field}};\">  .第二，只做这个css（ img 或 figcaption ; see fiddle不需要其他任何东西）：带有长文本的真正小图像仍然会出现问题，as this fiddle shows . 为了使它至少看起来干净，您可能会检查 img 的某个最小尺寸，如果它太小（例如， 100px ），则不要将 figure 上的 width 设置 min-width 设置为 img 并将 max-width 设置为阈值 100px 喜欢this fiddle shows ."
        ]
    },
    {
        "prompt": "快速排序\n```vue\n\r\n            </div>\n```",
        "doc": [
            "vue.js 是一款流行的前端框架，它提供了很多便捷的方法和指令来处理数据。其中一个常见的需求是对数组进行排序操作，Vue.js的sort方法就能很好地满足这个需求。以下介绍如何使用vue.js的sort方法来对数组进行排序。首先，我们需要创建一个Vue实例，并在其data选项中定义一个数组。假设我们的数组是一个包含一些数字的无序数组，如下所示：接下来，我们可以在Vue实例的方法中使用sort方法来对数组进行排序操作。sort方法是JavaScript原生数组对象的一个方法，它可以接受一个比较函数作为参数进行排序。在Vue实例中的methods选项中，我们可以定义一个sortArray的方法来排序数组。在sortArray方法中，我们使用了JavaScript的排序规则来比较数组元素。如果a小于b，sort方法会返回一个负值，这样a就会被排在b的前面；如果a大于b，sort方法会返回一个正值，这样a就会被排在b的后面。因此，通过return a - b;可以实现升序排序。在Vue实例中，我们可以通过在HTML模板中使用v-on指令来调用sortArray方法，以触发数组排序的操作。例如，我们可以在按钮的点击事件中调用sortArray方法。上述代码中，我们使用v-on指令为按钮绑定了点击事件，并将sortArray方法作为事件的处理函数。当按钮被点击时，sortArray方法会被调用来对数组进行排序操作。最后，我们使用v-for指令将排序后的数组显示在页面中。完整的示例代码如下：以上就是使用Vue.js的sort方法对数组进行排序的方法，通过触发按钮点击事件来实现数组的升序排序。通过这个示例，你可以学会如何在Vue.js中使用sort方法对数组进行排序，并了解了在Vue实例中调用方法和绑定事件的方法。\\n        \\n    \\n                    码到三十五: \\n                    这篇文章真是让我大开眼界！作者对技术的理解深入而独到，每一个细节都展现出了扎实的专业功底。文中的案例既生动又实用，让人在阅读的过程中不断产生共鸣。不仅如此，文章的逻辑清晰，条理分明，读起来非常流畅，真的是一篇不可多得的好文章！\\n                \\n                    程序边界: \\n                    每次阅读你的博客都是一次愉快的体验，非常感谢你的分享。期待你未来能继续创作出更多优秀的作品，让我们共同感受文字的魅力！\\n                \\n                    征途黯然.: \\n                    VUE实现下一页的功能 article is outstanding and truly impressive.\\n                \\n                    摔跤猫子: \\n                    VUE实现下一页的功能，深入浅出，干货满满\\n                \\n                    码到三十五: \\n                    非常喜欢这篇博客！博主的写作风格简洁明了，让人一目了然。文章内容丰富，涵盖了很多实用的知识点，对我来说非常有帮助。尤其是博主在文章中提供了很多实际操作的步骤和技巧，让我能够更好地应用所学的知识。同时，博主的配图也很精美，更加生动地展示了文章中的内容。总之，非常感谢博主的分享，期待博主能够继续输出这样优质的好文。\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者忧郁的蛋~你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "✨✨✨学习的道路很枯燥，希望我们能并肩走下来!文章目录前言一、快速排序介绍二、快速排序实现的方法(升序）1.hoare版本：2.挖坑法3.前后指针法  三、快速排序的优化1. 关于所排序的数据有序或接近有序的问题1.1 随机取key方法1.2 三数取中法2.关于递归深度过深导致栈溢出问题 2.1 利用栈实现非递归结构2.2 小区间优化总结本篇详细介绍了快速排序，让使用者对快速排序有进一步认识，而不是仅仅停留在表面，更好的模拟，为了更好的使用. 文章可能出现错误，如有请在评论区指正，让我们一起交流，共同进步！快速排序是Hoare于1962年提出的一种二叉树结构的交换排序方法，其基本思想为：任取待排序元素序列中 的某元素作为基准值，按照该排序码将待排序集合分割成两子序列，左子序列中所有元素均小于基准值，右 子序列中所有元素均大于基准值，然后最左右子序列重复该过程，直到所有元素都排列在相应位置上为止。 上述为快速排序递归实现的主框架，发现与二叉树前序遍历规则非常像，同学们在写递归框架时可想想二叉 树前序遍历规则即可快速写出来，后序只需分析如何按照基准值来对区间中数据进行划分的方式即可。 思路图如下： 我们先对单趟升序排序进行分析：1.从右边先走（后面会解释），右找比key小，找到停止，否则继续向左前进2.右边停止后，左边开始找比key大的，找到停止，否则继续向右前进3.两边都停止时，且未相遇，则交换4.相遇时，则将下标为key与下表为left的值进行交换，此时key到达正确位置 现在我们对已经找到key的正确位置了此时数组内可分为对begin到keyi-1的数据我们也可以看作一个完整的数组，这样将大问题分成小问题解决，我们就利用递归来解决这道问题。 到这里我们代码基本完成很多人想问，为什么一定要从右边开始找呢？ 思路图如下： 这个思路核心仍然是hoare的方法，但不需要区分左走还是右走，更便于教学理解代码如下：核心1.cur>=key,cur++2.cur<key,++prev,交换prev和cur的值，cur++ prev和cur的关系：1. prev紧跟cur一前一后2.prev和cur之间是比key大的值根据这些以及递归思想，我们可以写出如下代码 假设我们得到一个有序或者接近有序的数据，利用我们之前写的快速排序，我们会发现快速排序却不如时间复杂度高的排序方法，这是为什么呢？如图所示，在数据有序的情况下，我们每一次都 要遍历整个数组来确定key的位置，时间复杂度达到了O（N^2),这显然不能符合他的“快速”因此我们要对此进行优化在有序问题中，我们发现取key基本上是最小或最大的数值，导致left基本不懂，right几乎每次都要到数组靠前的位置，因此，我们如果取的key为随机呢。顾名思义，就是取key为[left,right]区间内的中间值取中代码如下：整体代码如下： 快速排序在大量数据的处理上有着显著的优势，但在小区间内的排序速度有时却不如插入排序等时间复杂度高的排序.快排递归到小区间时，我们可以采用插入排序进行优化，减少递归次数，提速和减少空间利用。代码如下✨✨✨各位读友，本篇分享到内容是否更好的让你理解了数据在内存中的存储，如果对你有帮助给个👍赞鼓励一下吧！！ 🎉🎉🎉世上没有绝望的处境，只有对处境绝望的人。 感谢每一位一起走到这的伙伴，我们可以一起交流进步！！！一起加油吧！！！。\\n                    ✿༺小陈在拼命༻✿: \\n                    优质好文，博主的文章细节很到位，兼顾实用性和可操作性，感谢博主的分享，文章思路清晰，图文并茂，详略得当，三连支持，期待博主持续输出好文!\\n                \\n                    CSDN-Ada助手: \\n                    恭喜用户发布了关于快速排序原理及其多种方法的实现和优化的博客，内容十分详尽和有深度。接下来，可以考虑结合实际案例或者应用场景，进一步展开对快速排序的讨论，让读者更好地理解和应用这一算法。希望用户能够继续坚持创作，为大家带来更多有价值的内容。\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您发表了第20篇博客，标题为“直接插入排序与希尔排序”！这两种排序算法的对比分析一定会对读者们有所启发。希望您能继续坚持创作，分享更多有价值的知识和见解。或许下一步可以探讨其他排序算法的实现原理或者应用场景，期待您的精彩文章！加油！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您撰写了关于选择排序原理及实现的博客，内容详实深入，让读者对这一排序算法有了更深入的了解。希望您能继续保持创作的热情和努力，探索更多有趣的主题，拓展自己的知识领域。或许下一篇博客可以尝试介绍其他常用的排序算法，让读者们对排序算法有更全面的认识。期待您更多精彩的创作！祝您写作愉快！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您撰写了关于冒泡排序原理及实现的精彩博客！不仅分享了有关排序算法的知识，还展现了您对技术的深刻理解。希望您能继续保持创作的热情，不断分享更多有价值的内容。或许下一步可以尝试探讨其他常用排序算法的原理与实现，让读者们对算法有更全面的了解。期待您更多的优质博客！加油！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "微信微博分享文章到微博复制链接复制链接到剪贴板在《Vue进阶（幺肆贰）：CSS-静态定位，相对定位，绝对定位，固定定位的用法和区别详解》一文中，讲解了CSS常用的几种定位方式。此博文主要讲解如何应用绝对定位实现完美布局，及应用注意事项。在布局过程中我们经常用到绝对定位，很多初学者在一开始用绝对定位经常会达不到预期的效果，因为它们往往会忽略使用绝对定位的两个条件。什么？使用绝对定位还要条件？当然要啦！代码又没有脑子，没法自己思考应该定位到哪里。为了使用的时候方便，使用绝对定位的时候要满足两个条件。在讲这两个条件的之前，我们要先提一个重要概念：标准流。什么是标准流呢？标准流（normal flow），也被称为文档流，是指在不借助任何特殊的css排列规则元素。浮动和定位（absolute，fixed）会脱离标准流，也就是不受这套规则的约束。标准流其实就是一个默认的排布规则。下面介绍一下标准流元素的一些排布规则：标准流中上下相邻两个元素的margin-bottom与margin-top会发生重叠情况。display 属性可以设置元素外部显示类型，元素的外部显示类型将决定该元素在流式布局中的表现。注意⚠️：设置块级元素的外部显示类型display：inline;不是把块级元素变成了内联元素，它本身还是块级元素，只是它具备了内联元素的显示特点。那么外部显示类型display: inline-block; 的显示特点是什么呢？从名字上看，它应该是具备了块级和内联元素的特点，没错，它结和了块级元素：可以设置属性：width、height、margin-top和margin 和内联元素：多个元素在一行显示的特点。一些常见的行内元素包括 <span>、<a>、<img>、<button>、<input> 等。这里使用内联元素span，其display默认值是inline。因此，不需要显示指定该值。如图所示，满足了内联元素的特点：多个元素在一行显示，设置属性：width、height、margin-top、margin-bottom无效。一些常见的块级元素包括 <div>、<p>、<h1> 到 <h6>、<form> 等。仅仅将span替换为p元素，样式设置没变。如图所示，满足了块级元素的特点：每个元素独占一行，设置属性：width、height、margin-top、margin-bottom生效。对span元素的样式添加display: inline-block。如图所示：它结和了块级元素：可以设置属性：width、height、margin-top和margin 和内联元素：多个元素在一行显示的特点。看了上面的一些排布规则，大家是不是就了解什么叫标准流啦？举个例子，就拿float来说，没有浮动的盒子是一个标准流，而浮动的盒子是一个非标准流 ，因为float更改了它默认的排布规则。而我们要用到的绝对定位，则是对离自己最近的那个非标准流盒子而言的。  （对一个盒子使用了浮动，相对定位，或者绝对定位，那么这个盒子就变成了一个非标准流的盒子。）好了，接下来就该讲使用绝对定位要满足的两个条件了。当我们要使用绝对定位的时候，必须要有两个条件：为什么要满足这两个条件呢？因为绝对定位是以父元素为基准点，进行定位。如果他没有父元素，或者它的父元素没有设置position:relative属性它就会以最近的非标准流盒子为基准点进行定位。绝对定位会使当前元素脱离文档流，即变成了非标准流。这是什么意思呢？其实，当它为标准流的时候，它默认在原位，当它脱离标准流的时候，他就浮动起来了，不再占据原来的位置了。这时候你要是想定位，如果不将它的父元素设置为相对定位（即让父元素变为非标准流），或者它没有父元素，那么它就会以<html>节点的顶部为基准定位。如果满足了这两个条件，它就将会以父元素为基准进行绝对定位。这样定位的话，会省去很多麻烦。下面来看一下具体例子：上面的代码定义了一个大div，其包含一个小div，小div中使用了绝对定位。按照以上代码实现逻辑，是想实现文字根据div_test2来定位，但是运行一下，如图：可以看到，这段文字根据<html>节点顶部作为基准定位。这是因为它的父元素没有设置相对定位。现在给它的父元素设置一下相对定位。作者其他文章评论（0）在此一键设置昵称，即可参与社区互动！*长度不超过10个汉字或20个英文字符，设置后3个月内不可修改。*长度不超过10个汉字或20个英文字符，设置后3个月内不可修改。",
            ""
        ]
    },
    {
        "prompt": "请你编写一段代码实现一个数组方法，使任何数组都可以调用 array.last() 方法，这个方法将返回数组最后一个元素。如果数组中没有元素，则返回 -1 。\n\n你可以假设数组是 JSON.parse 的输出结果。",
        "doc": [
            "昨天（2021年5月29日）参加了软考软件设计师的考试，试卷上出现了一道算法题，问：连续子数组最大和的分治解法的时间复杂度，考完正好记录总结一下这道算法题。题目描述： 输入一个整型数组，数组里有正数也有负数。 数组中连续的一个或多个整数组成一个子数组，每个子数组都有一个和。 比如上面这个数组的子数组的最大和为187,从下标3到下标7的位置。（本文中数组下标从1开始）比较常规的思路是暴力（O(n3)）、前缀和数组（O(n2)）两种，但是时间复杂度比较高，这题也可以用分治的策略做，时间复杂度O(nlogn)，还有两种时间复杂度为O(n)的做法，一种是动态规划，另一种是扫描法。这题需要掌握O(n)的解法。所谓分治法，是指将一个问题分解为两个子问题，然后分而解决之。具体步骤如下： 先将数组分为两个等长的子数组a, b； 分别求出两个数组a，b的连续子数组之和；  还有一种情况（容易忽略）：有可能最大和的子数组跨越两个数组； 最后比较ma, mb, mc，取最大即可。在计算mc时，注意：mc必定包含总区间的中间元素，因此求mc等价于从中间元素开始往左累加的最大值 + 从中间元素开始往右累加的最大值。dp[i]表示以下标i指向的元素结尾的所有子数组的最大和 状态转移方程：dp[i] = max(dp[i-1]+nums[i],nums[i]) 最后的答案：ans=max(dp[i]) 这题的dp思路和最长上升子序列类似，倒像是简化版的，这里第i个状态只从第i-1个状态转移过来。当我们加上一个正数时，和会增加；当我们加上一个负数时，和会减少。如果当前得到的和是个负数，那么这个和在接下来的累加中应该抛弃并重新清零，不然的话这个负数将会减少接下来的和。\\n        \\n    \\n                    huahuaxiaonou: \\n                    我试过，开始两次有效现在没用了。是梯子问题？\\n                \\n                    Mr-吕: \\n                    1111111\\n                \\n                    xlk1790577446: \\n                    好的 s我\\n                \\n                    weiambt: \\n                    这个100是十进制下的，十进制的100转成二进制就是01100100\\n                \\n                    whirligigw: \\n                    这个100是什么进制啊？求大佬解答，为什么第一个字节是100，转成二进制就是0110 0100啊\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者weiambt你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、C币套餐、付费专栏及课程。",
            "本章的学习内容如下 四、C语言中的数组：数组的创建与初始化四、C语言中的数组：数组的输入与元素个数C语言—第6次作业—十道代码题掌握一维数组四、C语言中的数组：二维数组当我们输入一维数组时需要一个循环来遍历下标，二维数组有两个下标 ，所以我们需要两个循环嵌套使用来遍历下标。打印每一个元素的地址，我们可以发现，每个元素是按00，01，02，03，10.....的下标顺序存储的，每个整型元素占四个字节的空间。数组的长度用变量指定，无需初始化比如如下代码指示了如何用一个变量指定一维数组的长度并打印它。效率会比遍历整个数组高一半。二分查找（折半查找） 的规则：在一个升序数组中找到这个元素的下标即能定位到这个元素，不断折半查找与想要找到的这个元素进行对比，即可得到这个元素所在的区间，不断缩小区间，就可以得到这个元素的所在位置。所以第一步应该是对现有的数组进行升序排列。我们可以使用冒泡排序的方法，将数组的元素按顺序两两对比，符合升序的位置不变，不符合升序的位置交换。比如当我们初始化一个数组int arr[9] = {5,78,43,2,3,5,7,9,156};第一个循环是i从0开始依次对比arr[i]和arr[i+1]的大小，当条件if (arr[i] >= arr[i + 1])成立时，交换位置，在交换的过程中，使用中间变量来暂存；经过一轮对比，我们得到156这个最大值的正确位置。最大值156确定后，排除这个数，将剩下的值依次找到最大值，所以这是一个嵌套循环，在代码撰写的过程中，记住检查各个变量的值，注意不要溢出。如下图所示我们可以看到，现在的数组arr[]已经被升序排列，接下来让我们继续实现二分查找。 初始化：设定两个指针，分别指向数组的首部和尾部（left = 0，right = length of array - 1）。循环：当 left <= right 时，执行循环：返回结果：如果循环结束仍未找到目标值，说明目标值不存在于数组中，返回 -1 或其他标记值表示未找到。我们的任务是利用二分查找的方法找到数组中的元素43。如下图所示，我们成功地找出了元素43的数组下标是6。我们把排序和查找的代码联合起来如下所示，这样我们就可以实现一个数组的排序与元素查找啦！ \\n                    Mr.Cssust: \\n                    内容丰富图文并茂，思路清晰细节满满，认真看完收获很大，支持大佬优质好文。\\n                \\n                    Mr.Cssust: \\n                    内容丰富图文并茂，思路清晰细节满满，认真看完收获很大，支持大佬优质好文。\\n                \\n                    林采采学编程+: \\n                    我只是初学者哈哈，多请您指教！\\n                \\n                    Mr.Cssust: \\n                    文章写得专业、深入、详细，收藏啦！同时也欢迎来我博客指导我一番！\\n                \\n                    Mr.Cssust: \\n                    文章写得专业、深入、详细，收藏啦！同时也欢迎来我博客指导我一番！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者林采采学编程+你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "在Java中，数组是一种特殊的对象，用于存储固定大小的相同类型的元素。数组可以存储基本数据类型（如int、char、boolean等）或对象引用。​我们可以想一个问题，如果现在让你存储100个学生的数学成绩，你该怎么存储呢？难道要定义100个变量，每个变量代表一个学生的成绩吗？如果是存储1000个、10000个、乃至更多学生的成绩怎么办？如果是定义一个个变量进行存储，就太麻烦了，而且这也不符合项目开发时对复用性、可读性等方面的要求。所以我们肯定不能这么编程。那么现在解决的办法，就是可以使用”数组“来进行实现。‍给大家举个栗子，下图的这个东西你见过吗？这是存储这些鸡蛋的”容器“--鸡蛋托！一个鸡蛋托有多个存储格子，每个格子只能存储一个鸡蛋，并且这些格子只能用来存储鸡蛋，不能存储其他的东西。一个鸡蛋托可以存储的鸡蛋数量是有限的，不能无限存储。其实Java里的数组就类似于是”鸡蛋托“，数组中存储的数据元素就是一个个的”鸡蛋“。一个数组占据了内存中的一片连续空间，只能存储相同类型的数据，数组有一定的存储空间。我们在创建数组时，需要先声明数组的类型，之后该数组中只能存储指定类型的数据。‍在 Java 中，要使用数组，首先需要声明和初始化它。声明一个数组只是告诉编译器你将要使用一个数组，但并不分配内存空间。初始化数组是为数组分配实际的内存，并为数组的元素赋初值。要声明一个数组，你需要指定数组的类型，后面跟着数组名字和一对方括号 []​，例如：以上代码声明了一个名为“numbers”的整数数组‍可以在声明时为数组分配内存，例如：‍初始化数组是为数组分配内存并赋予初始值。Java 中有几种初始化数组的方式。‍你可以在声明数组的同时为数组分配内存并赋值，例如：‍示例：你也可以使用循环来初始化数组，例如：‍访问数组元素是指通过数组的索引来获取数组中的值。在 Java 中，数组的索引从 0 开始，因此第一个元素的索引是 0，第二个元素的索引是 1，以此类推。例如，要访问上面示例中的 numbers​ 数组的第一个元素，可以使用以下代码：‍要获取数组的长度（即数组中元素的个数），可以使用数组的 length​ 属性，例如：‍‍遍历数组是指逐个访问数组中的所有元素，通常使用循环来实现。在 Java 中，常用的循环有 for​​ 循环和 foreach​​ 循环使用 for​ 循环可以遍历数组的所有元素，例如：‍Java 5 引入了 foreach 循环，可以更简洁地遍历数组，例如：foreach​ 循环适用于遍历整个数组，但不能改变数组元素的值。‍‍除了声明、初始化和遍历数组，数组还支持许多常见的操作，如添加元素、删除元素、查找元素等。以下是一些常见的数组操作：要向数组添加元素，需要先创建一个新的数组，然后将原数组的元素复制到新数组中，并在新数组中添加新元素。Java 中的数组大小是固定的，所以添加元素通常需要创建一个新数组。‍删除数组中的元素通常也需要创建一个新数组，将原数组中不需要删除的元素复制到新数组中。要删除元素，通过找到要删除的元素的索引，然后将其跳过。以下是一个删除数组元素的示例：‍要在数组中查找元素，可以使用循环遍历数组，逐个比较每个元素的值，找到匹配的元素后返回索引或值。以下是一个查找元素的示例：‍冒泡排序是一种简单的排序算法，它重复地遍历要排序的数组，依次比较相邻的两个元素，并将它们按照要求交换位置，直到整个数组有序为止。这个过程就像气泡在水中逐渐上升一样，故称为冒泡排序。冒泡排序的基本思路是，每一轮比较相邻的两个元素，如果它们的顺序不符合要求，则交换它们的位置，直到所有元素都排好序为止。示例‍​在Java中，java.util.Arrays​是一个工具类，提供了各种用于操作数组的静态方法。这个工具类包含了许多有用的方法，例如对数组进行排序、搜索、比较以及填充等操作。下面简要介绍一些java.util.Arrays​类中常用的方法：这些方法提供了方便且高效的方式来操作数组，避免了手动编写很多重复的代码。使用java.util.Arrays​类可以简化对数组的处理，提高代码的可读性和可维护性。不过需要注意的是，java.util.Arrays​类中的方法都是针对对象数组的，对于基本数据类型的数组，需要使用对应的装箱类型（如Integer[]​代替int[]​）来调用这些方法。‍返回一个包含数组元素的字符串表示形式。运行后显示​将指定值填充到数组中的每一个元素运行后显示：​运行后显示：​通过equals方法比较数组中元素值是否相等。运行后显示：​通过binarySearch方法能对排序好的数组进行二分查找法操作。运行后显示：​",
            "indexOf()方法返回在数组中可以找到一个给定元素的第一个索引，如果不存在，则返回-1。遇到了一个特别的：第一个数组中去除第二个数组中的所有元素。 更简洁的方法使用filter\\n        \\n    \\n                    wavyhair_: \\n                    你放到node_modules的echarts里面？\\n                \\n                    sjt6662333: \\n                    引用「<script>function repeat(arr) {            for (var」\\n这种方法只能去除一个重复的元素，如果数组重复元素过多无法全部清除\\n                \\n                    技术和卫生纸一样白: \\n                    感谢博主，终于解决了\\n                \\n                    qq_44741558: \\n                    好文，有用\\n                \\n                    我是土豆926: \\n                    老哥 有解决吗  我现在也这个问题  \\n卸载重装多次都无果\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者陌~上花开你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、C币套餐、付费专栏及课程。"
        ]
    },
    {
        "prompt": "有错误吗\n```TypeScript\n\"use strict\";\nimport { Context, Schema } from 'koishi'\n\nexport const name = 'promise'\nexport interface Config {\n  text: string\n  // 添加 toString 方法\n  toString(): string\n}\n\nexport const Config: Schema<Config, Config> = Schema.object({\n  text: Schema.string().default('啊?').description('发送的话。'),\n}).description('配置标题')\n\n  export async function apply(ctx: Context, config: Config) {\n    ctx.command('promise', '允诺', { authority: 1, })\n    ctx.middleware((session,next)=>{\n        // 实现 toString 方法\n      Config.prototype.toString = function (): string {\n        return `text: ${this.text}`\n    }\n    )   \n}\n```",
        "doc": [
            "快速上手 手册 手册（进阶） 手册（v2）\\n 如何书写声明文件 JavaScript\\n 工程配置 Wiki 新增功能 Breaking Changes \\n      ←\\n      \\n        NPM 包的类型\\n       \\n        配置 Watch\\n      \\n      →\\n    ",
            "https://code.visualstudio.com/安装VS Code插件：安装与当前VS Code(1.52.1)使得Node.js版本(Help->About)，方便后续VS Code插件开发：Node.js: 12.14.1 下载npm设置为淘宝镜像：查看是否设置成功：npm更新到最新版本：npm更新到指定版本:npm全局安装TypeScript:查看TypeScript是否安装成功：新建TypeScript工程hello:直接右键单击选中main.ts，执行Run Code即可在OUTPUT界面(快捷键:Ctrl+`打开OUTPUT界面)看到输出结果。 package.json描述了npm项目依赖那些包，指明项目依赖的版本，让你的构建更好的与其他人共享。 生成package.json文件，在根目录执行:参考链接：如果一个目录下存在一个tsconfig.json文件，那么它意味着这个目录是TypeScript项目的根目录。tsconfig.json文件中指定了用来编译这个项目的根文件和编译选项。 在根目录自动生成tsconfig.json文件:调试需要设置\"sourceMap\": true,outDir配置js文件的生成目录。菜单栏Terminal->Configure Tasks...分别选中\"tsc: watch - tsconfig.json\",则在工程根目录生成/.vscode/tasks.json,当ts文件保存后自动编译生成js文件：菜单栏Run->Add Configuration...生成调试配置文件/.vscode/launch.json：其中\"program\": \"${workspaceFolder}\\\\\\\\main.ts\"是调试的ts文件生成的js文件。 另外，在launch.json增加preLaunchTask可以跳过5.2.3 配置自动编译：参考链接：同5.2.2菜单栏Run->Add Configuration...生成调试配置文件/.vscode/launch.json，添加-r ts-node/register到Node的执行参数(runtimeArgs) ,program添加到参数列表(args)：注意: 当TypeScript,ts-node采用全局安装(npm install -g ts-node)时，ts-node/register应使用绝对路径：同5.2.5 在ts文件设置断点，执行调试参考链接：\\n        \\n    \\n                    CSDN-Ada助手: \\n                    IDEA的布局方式也在和VSCode学，你觉的这说明了什么？简洁的力量？\\n                \\n                    slimzhao: \\n                    gcc -ftime-trace   这里写错了， clang 才支持 (从9.0版本开始 ) -ftime-trace,  gcc 不支持这个选项.\\n\\n-ftime-trace 比 -ftime-report 对开发者有用多了， 其生成的json 文件可以用 chrome 或 speedscope来分析性能火焰图\\n                \\n                    CSDN-Ada助手: \\n                    哇, 你的文章质量真不错，值得学习！不过这么高质量的文章, 还值得进一步提升, 以下的改进点你可以参考下: (1)使用标准目录；(2)增加除了各种控件外，文章正文的字数；(3)文章不宜太短。\\n                \\n                    flzxsqc2018: \\n                    请问有OAI、Open5GS、Free5GC的对比分析吗？\\n                \\n                    xlxt: \\n                    5GC 那些网元接口使用TIPC?\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "这个配置的意思是，编译的时候是否需要去掉注释，也就是，如果TS中存在注释代码那么编译完成后，注释内容会被主动清除，放开后该行注释执行一下编译命令：tsc ./app.ts编译成功后，它会在当前目录下生成一个js文件，名字为：app.js，打开编译后的js文件：// 这是一个测试文件var app = “这是一个测试文件”;很明显，配置并没有生效，是不是很奇怪，但确实是的，当我们直接使用tsc 某个文件时，配置文件并不会生效，只要当只执行命令：tsc只有执行这个命令，后面不跟随具体的文件名字，那么此时的编译会根据配置文件去生成对应的js文件；那么第一个问题来了，TS怎么知道去编译哪个文件，实际上TS不是去知道编译哪个文件，而是，如果我们在tsconfig.json没有设定编译范围，那么TS会去编译所有的.ts后缀的文件，将其生成一份js文件；​编译范围==============================================================在TS中一共有三个字段代表编译范围，直接看例子：{“compilerOptions”: {// …},“include”: [“src/**/*”],“exclude”: [“node_modules”,“**/*.spec.ts”],“files”: [“core.ts”,“sys.ts”,“types.ts”,“scanner.ts”,“parser.ts”,“utilities.ts”,“binder.ts”,“checker.ts”,“emitter.ts”,“program.ts”,“commandLineParser.ts”,“tsc.ts”,“diagnosticInformationMap.generated.ts”]}通过例子可知，分别是：“include”，“exclude”，“files”​files配置项files配置项，它代表有哪些ts文件需要被编译，它的值类型为数组，里面存储的都是相对路径或绝对路径，它不支持匹配模式，具体示例如下：{“files”: [“./core.ts”,“…/sys.ts”,“types.ts”,]}​include配置项include配置项，它的用法和files有点类似，主要也是用来描述有哪些ts文件需要被编译，区别是，它支持glob匹配模式，先看个具体的例子：“include”: [“src/**/*”],然后，我们再来看一下glob匹配模式，根据官网的说明，一共有以下三种：? 匹配一个任意字符（不包括目录分隔符）**/ 递归匹配任意子目录简单的说，就是_代表的是任意文件，代表的是任意文件夹，拿例子中的\"src//_\"说明，就是src目录下任意文件夹下的任意.ts文件，再加上它是include，那么就是代表这个路径下的所有.ts文件都需要被编译；如果还是不大明白，那么可以直接去官网查看，官网对应的地址为：tsconfig.json​​​exclude配置项include配置项，它和Include的用法正好相反，它代表着，在其内的文件是排除在外，不被编译，除此之外的所有ts文件都会被编译，先看个例子：“exclude”: [“node_modules”,“**/*.spec.ts”],用法和include一摸一样，具体可以参照include这一节，到这里，可能有的小伙伴会问，如果exclude和include以及files一起写，会怎么样，总结下来，大概就这么几条：“include”: [“src/**/*”],“exclude”: [“src/**/*”],等于啥都没干，因为include的文件被exclude给排除掉了；​{“files”: [“./core.ts”,“…/sys.ts”,“types.ts”,]，“exclude”: [“./core.ts”,“…/sys.ts”,“types.ts”,],}那么这几个文件还是会被编译，并不会因为exclude就将这几个排除在外；​另外exclude存在默认值，node_modules，bower_components，jspm_packages和目录，这几个目录如果没有特殊指定，会被默认排除在外；​​compilerOptions配置项============================================================================compilerOptions，也就是配置项，这个对象中存储着所有TypeScript编译时的规则选项，对应在tsconfig.json中就是这么个样子：{“compilerOptions”: {/* Basic Options */// “incremental”: true, /* Enable incremental compilation */“target”: “es5” /* Specify ECMAScript target version: ‘ES3’ (default), ‘ES5’, ‘ES2015’, ‘ES2016’, ‘ES2017’, ‘ES2018’, ‘ES2019’ or ‘ESNEXT’. */,“module”: “commonjs” /* Specify module code generation: ‘none’, ‘commonjs’, ‘amd’, ‘system’, ‘umd’, ‘es2015’, or ‘ESNext’. */,// “lib”: [], /* Specify library files to be included in the compilation. */// “allowJs”: true, /* Allow javascript files to be compiled. */// “checkJs”: true, /* Report errors in .js files. */// “jsx”: “preserve”, /* Specify JSX code generation: ‘preserve’, ‘react-native’, or ‘react’. */// “declaration”: true, /* Generates corresponding ‘.d.ts’ file. */// “declarationMap”: true, /* Generates a sourcemap for each corresponding ‘.d.ts’ file. */// “sourceMap”: true, /* Generates corresponding ‘.map’ file. */// “outFile”: “./”, /* Concatenate and emit output to single file. */// “outDir”: “./”, /* Redirect output structure to the directory. */// “rootDir”: “./”, /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */// “composite”: true, /* Enable project compilation */// “tsBuildInfoFile”: “./”, /* Specify file to store incremental compilation information */“removeComments”: true /* Do not emit comments to output. */,// “noEmit”: true, /* Do not emit outputs. */// “importHelpers”: true, /* Import emit helpers from ‘tslib’. */// “downlevelIteration”: true, /* Provide full support for iterables in ‘for-of’, spread, and destructuring when targeting ‘ES5’ or ‘ES3’. */// “isolatedModules”: true, /* Transpile each file as a separate module (similar to ‘ts.transpileModule’). *//* Strict Type-Checking Options */“strict”: true /* Enable all strict type-checking options. */,// “noImplicitAny”: true, /* Raise error on expressions and declarations with an implied ‘any’ type. */// “strictNullChecks”: true, /* Enable strict null checks. */// “strictFunctionTypes”: true, /* Enable strict checking of function types. */// “strictBindCallApply”: true, /* Enable strict ‘bind’, ‘call’, and ‘apply’ methods on functions. */// “strictPropertyInitialization”: true, /* Enable strict checking of property initialization in classes. */// “noImplicitThis”: true, /* Raise error on ‘this’ expressions with an implied ‘any’ type. */// “alwaysStrict”: true, /* Parse in strict mode and emit “use strict” for each source file. *//* Additional Checks */// “noUnusedLocals”: true, /* Report errors on unused locals. */// “noUnusedParameters”: true, /* Report errors on unused parameters. */// “noImplicitReturns”: true, /* Report error when not all code paths in function return a value. */// “noFallthroughCasesInSwitch”: true, /* Report errors for fallthrough cases in switch statement. *//* Module Resolution Options */// “moduleResolution”: “node”, /* Specify module resolution strategy: ‘node’ (Node.js) or ‘classic’ (TypeScript pre-1.6). */// “baseUrl”: “./”, /* Base directory to resolve non-absolute module names. */// “paths”: {}, /* A series of entries which re-map imports to lookup locations relative to the ‘baseUrl’. */// “rootDirs”: [], /* List of root folders whose combined content represents the structure of the project at runtime. */// “typeRoots”: [], /* List of folders to include type definitions from. */// “types”: [], /* Type declaration files to be included in compilation. */// “allowSyntheticDefaultImports”: true, /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */“esModuleInterop”: true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies ‘allowSyntheticDefaultImports’. */// “preserveSymlinks”: true, /* Do not resolve the real path of symlinks. */// “allowUmdGlobalAccess”: true, /* Allow accessing UMD globals from modules. *//* Source Map Options */// “sourceRoot”: “”, /* Specify the location where debugger should locate TypeScript files instead of source locations. */// “mapRoot”: “”, /* Specify the location where debugger should locate map files instead of generated locations. */// “inlineSourceMap”: true, /* Emit a single file with source maps instead of having a separate file. */// “inlineSources”: true, /* Emit the source alongside the sourcemaps within a single file; requires ‘–inlineSourceMap’ or ‘–sourceMap’ to be set. *//* Experimental Options */// “experimentalDecorators”: true, /* Enables experimental support for ES7 decorators. */// “emitDecoratorMetadata”: true, /* Enables experimental support for emitting type metadata for decorators. */}}这是初始化时候的原文，但是这东西理解起来还是有难度的，博主挑一些常用的解释一下​target编译后的目标版本，我们知道JavaScript有很多版本，而不同的浏览器，不同的版本所支持JS版本也是不同的，比如：ES5，ES6什么的，最终打包的时候，我们肯定是期望是打包完的代码能最终运行到绝大多数浏览器上的（又想吐槽一句，他瞄的IE走开），那么这里我们可以填：“compilerOptions”: {// …// 这里可以填很多，比如：‘ES3’ (default)，‘ES2015’, ‘ES2016’, ‘ES2017’, ‘ES2018’, ‘ES2019’ or ‘ESNEXT’// “target”: “ES5”,// …}module编译后代码遵循的规范，众所周知，自从有了NodeJS之后，js代码不仅仅是在前端使用了，各种地方，各种环境都可以用到，那么不同的环境JS代码遵循的规范也是不一样的，比如，常见的规范有ES规范有：es规范，commonjs规范“compilerOptions”: {// …// 这里可以填很多，比如：‘none’, ‘commonjs’, ‘amd’, ‘system’, ‘umd’, ‘es2015’, or ‘ESNext’// “module”: “es2015”,// …}在这里设置了生成代码的规范后，打包完成的代码将遵循该规范进行编译；​removeComments“removeComments”: true /* Do not emit comments to output. */,注释清空，默认为false，当值为true的时候，编译时会自动删除注释说明strict“strict”: true // 可以理解成书写规范的总开关,// “noImplicitAny”: true, /* 是否必须写any类型， */// “strictNullChecks”: true, /* 不强制验证null类型 */// “strictFunctionTypes”: true, /* 不强制验证函数类型 */// “strictBindCallApply”: true, /* Enable strict ‘bind’, ‘call’, and ‘apply’ methods on functions. */// “strictPropertyInitialization”: true, /* Enable strict checking of property initialization in classes. */// “noImplicitThis”: true, /* Raise error on ‘this’ expressions with an implied ‘any’ type. */// “alwaysStrict”: true, /* Parse in strict mode and emit “use strict” for each source file. */严格书写规范，这一块区域的内容代表Typescript的书写规范，其中，如果strict的值为true，那么代表所有的都为true，最显著的区别就是，如下const getName = name => {return name + “oliver”;};这段代表，如果strict的值为true，会报错，因为name的类型没有定义，如果是任意类型，那么也应该定一个any类型，可以如果将strict的值改为false，那么就代表上面这个例子中的写法是允许的，其实就相当于在写JavaScript了，这个属性建议不要改，还是开启好，否则TS就没有意义了，JS不香吗；​​rootDir入口文件，这个其实和编译范围的用法很接近，都是告诉TypeScript，从哪里开始编译，差不多就是编译范围的意思，假设，目录结构├── src│ ├── index1.ts│ ├── index2.ts│ ├── index3.ts├── tsconfig.json如果tsconfig.json中的rootDir如下所写“compilerOptions”: {// …// “rootDir”: “./src”,自我介绍一下，小编13年上海交大毕业，曾经在小公司待过，也去过华为、OPPO等大厂，18年进入阿里一直到现在。深知大多数前端工程师，想要提升技能，往往是自己摸索成长或者是报班学习，但对于培训机构动则几千的学费，着实压力不小。自己不成体系的自学效果低效又漫长，而且极易碰到天花板技术停滞不前！因此收集整理了一份《2024年Web前端开发全套学习资料》，初衷也很简单，就是希望能够帮助到想自学提升又不知道该从何学起的朋友，同时减轻大家的负担。      既有适合小白学习的零基础资料，也有适合3年以上经验的小伙伴深入学习提升的进阶课程，基本涵盖了95%以上前端开发知识点，真正体系化！由于文件比较大，这里只是将部分目录大纲截图出来，每个节点里面都包含大厂面经、学习笔记、源码讲义、实战项目、讲解视频，并且后续会持续更新如果你觉得这些内容对你有帮助，可以添加V获取：vip1024c （备注前端） 大厂面试问深度，小厂面试问广度，如果有同学想进大厂深造一定要有一个方向精通的惊艳到面试官，还要平时遇到问题后思考一下问题的本质，找方法解决是一个方面，看到问题本质是另一个方面。还有大家一定要有目标，我在很久之前就想着以后一定要去大厂，然后默默努力，每天看一些大佬们的文章，总是觉得只有再学深入一点才有机会，所以才有恒心一直学下去。一个人可以走的很快，但一群人才能走的更远。如果你从事以下工作或对以下感兴趣，欢迎戳这里加入程序员的圈子，让我们一起学习成长！AI人工智能、Android移动开发、AIGC大模型、C C#、Go语言、Java、Linux运维、云计算、MySQL、PMP、网络安全、Python爬虫、UE5、UI设计、Unity3D、Web前端开发、产品经理、车载开发、大数据、鸿蒙、计算机网络、嵌入式物联网、软件测试、数据结构与算法、音视频开发、Flutter、IOS开发、PHP开发、.NET、安卓逆向、云计算…(img-oa6SxmZP-1712206522217)]大厂面试问深度，小厂面试问广度，如果有同学想进大厂深造一定要有一个方向精通的惊艳到面试官，还要平时遇到问题后思考一下问题的本质，找方法解决是一个方面，看到问题本质是另一个方面。还有大家一定要有目标，我在很久之前就想着以后一定要去大厂，然后默默努力，每天看一些大佬们的文章，总是觉得只有再学深入一点才有机会，所以才有恒心一直学下去。一个人可以走的很快，但一群人才能走的更远。如果你从事以下工作或对以下感兴趣，欢迎戳这里加入程序员的圈子，让我们一起学习成长！AI人工智能、Android移动开发、AIGC大模型、C C#、Go语言、Java、Linux运维、云计算、MySQL、PMP、网络安全、Python爬虫、UE5、UI设计、Unity3D、Web前端开发、产品经理、车载开发、大数据、鸿蒙、计算机网络、嵌入式物联网、软件测试、数据结构与算法、音视频开发、Flutter、IOS开发、PHP开发、.NET、安卓逆向、云计算\\n                    CSDN-Ada助手: \\n                    非常棒的博客！通过深入学习Flutter基本组件-Image，不仅可以提升自己的技术水平，还能在面试中展现自己的实力。除了学习基础知识外，也可以尝试深入了解Flutter中的状态管理、动画效果等内容，这些也是成为优秀开发者的重要技能之一。希望你能继续分享更多有价值的内容，加油！\\n\\n如何写出更高质量的博客，请看该博主的分享：https://blog.csdn.net/lmy_520/article/details/128686434?utm_source=csdn_ai_ada_blog_reply2\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写下了第三篇博客，“InceptionV3，年薪60W必备”！这篇博文肯定会对许多人有所帮助，特别是对于那些追求高薪职位的读者来说。希望您能继续保持写作的热情和动力，不断分享您的知识和经验。或许下一步可以探讨一些实际案例，或者分享一些个人心得体会，这样会更加丰富和深入地展现您的专业知识。期待您未来更多精彩的作品！\\n\\nCSDN 正在通过评论红包奖励优秀博客，请看红包流：https://bbs.csdn.net/?type=4&header=0&utm_source=csdn_ai_ada_blog_reply3\\n                \\n                    CSDN-Ada助手: \\n                    恭喜用户撰写第四篇博客，标题十分吸引人！看到你总结复习的努力，以及从草根到百万年薪程序员的十年心路历程，让我深感敬佩。希望你能继续坚持创作，分享更多宝贵的经验和心得。或许下一步可以结合具体案例或项目经验，来为读者提供更加实用的知识和启发。期待你的下一篇博客，加油！\\n\\n如何快速涨粉，请看该博主的分享：https://hope-wisdom.blog.csdn.net/article/details/130544967?utm_source=csdn_ai_ada_blog_reply5\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写出了第5篇博客，“OpenCV-Python实战（3），层层深入”！您的持续创作让读者们受益匪浅，希望您能继续保持热情，不断深入学习和探索。下一步，或许可以考虑分享一些实际应用案例，让读者更好地理解OpenCV-Python在实际项目中的应用。期待您的下一篇博客！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您成功发布了第6篇博客！看到您在Java基础和面试经验方面的分享，感觉收获颇丰。希望您能继续保持创作热情，不断提升自己的写作水平和专业知识。建议您在未来的创作中，可以深入探讨一些实际项目经验或者解决问题的思路，这样更能吸引读者的关注。期待您更多精彩的分享！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "快速上手 手册 手册（进阶） 手册（v2）\\n 如何书写声明文件 JavaScript\\n 工程配置 Wiki 新增功能 Breaking Changes TypeScript 2.6 引入了新的类型检查选项， --strictFunctionTypes 。 --strictFunctionTypes  选项是 --strict  系列选项之一，也就是说  --strict  模式下它默认是启用的。你可以通过在命令行或 tsconfig.json 中设置 --strictFunctionTypes false  来单独禁用它。--strictFunctionTypes  启用时，函数类型参数的检查是 * 抗变（contravariantly）而非双变（bivariantly）* 的。关于变体 (variance) 对于函数类型意义的相关背景，请查看协变（covariance）和抗变（contravariance）是什么？  (opens new window)。这一更严格的检查应用于除方法或构造函数声明以外的所有函数类型。方法被专门排除在外是为了确保带泛型的类和接口（如 Array<T> ）总体上仍然保持协变。考虑下面这个 Animal 是 Dog 和 Cat 的父类型的例子：第一个赋值语句在默认的类型检查模式中是允许的，但是在严格函数类型模式下会被标记错误。 通俗地讲，默认模式允许这么赋值，因为它可能是合理的，而严格函数类型模式将它标记为错误，因为它不能被证明合理。 任何一种模式中，第三个赋值都是错误的，因为它永远不合理。用另一种方式来描述这个例子则是，默认类型检查模式中 T  在类型 (x: T) => void  是双变的（也即协变或抗变），但在严格函数类型模式中 T  是抗变的。现在第一个赋值是错误的。更明确地说， Comparer<T>  中的 T  因为仅在函数类型参数的位置被使用，是抗变的。另外，注意尽管有的语言（比如 C# 和 Scala）要求变体标注（variance annotations）（ out / in  或  + / - ），而由于 TypeScript 的结构化类型系统，它的变体是由泛型中的类型参数的实际使用自然得出的。启用 --strictFunctionTypes  时，如果 compare  被声明为方法，则第一个赋值依然是被允许的。 更明确的说， Comparer<T>  中的 T  因为仅在方法参数的位置被使用所以是双变的。TypeScript 2.6 还改进了与抗变位置相关的类型推导：这上面所有 T  的推断都来自抗变的位置，由此我们得出 T  的最普遍子类型。 这与从协变位置推导出的结果恰恰相反，从协变位置我们得出的是最普遍超类型。TypeScript 2.6 修复了标签字符串模板的输出，以更好地遵循 ECMAScript 标准。 根据 ECMAScript 标准  (opens new window)，每一次获取模板标签的值时，应该将同一个模板字符串数组对象 (同一个  TemplateStringArray ) 作为第一个参数传递。 在 TypeScript 2.6 之前，每一次生成的都是全新的模板对象。 虽然字符串的内容是一样的，这样的输出会影响通过识别字符串来实现缓存失效的库，比如 lit-html  (opens new window)。编译后的代码：注意：这一改变引入了新的工具函数， __makeTemplateObject ; 如果你在搭配使用 --importHelpers  和tslib   (opens new window)，需要更新到 1.8 或更高版本。TypeScript 2.6 npm 包加入了 13 种语言的诊断消息本地化版本。 命令行中本地化消息会在使用 --locale  选项时显示。俄语显示的错误消息：中文显示的帮助信息：TypeScript 2.6 支持在.ts 文件中通过在报错一行上方使用 // @ts-ignore  来忽略错误。// @ts-ignore  注释会忽略下一行中产生的所有错误。 建议实践中在 @ts-ignore  之后添加相关提示，解释忽略了什么错误。请注意，这个注释仅会隐藏报错，并且我们建议你极少使用这一注释。TypeScript 2.6 带来了更快的 --watch  实现。 新版本优化了使用 ES 模块的代码的生成和检查。 在一个模块文件中检测到的改变只会使改变的模块，以及依赖它的文件被重新生成，而不再是整个项目。 有大量文件的项目应该从这一改变中获益最多。这一新的实现也为 tsserver 中的监听带来了性能提升。 监听逻辑被完全重写以更快响应改变事件。TypeScript 2.6 加入了修正的 --noUnusedLocals  和 --noUnusedParameters  编译选项  (opens new window)实现。 只被写但从没有被读的声明现在会被标记未使用。下面 n  和 m  都会被标记为未使用，因为它们的值从未被读取。之前 TypeScript 只会检查它们的值是否被引用。另外仅被自己内部调用的函数也会被认为是未使用的。\\n      ←\\n      \\n        TypeScript 2.7\\n       \\n        TypeScript 2.5\\n      \\n      →\\n    "
        ]
    },
    {
        "prompt": "给我一段代码，利用py2neo连接一个名为globle-cti-KG-V2的数据库",
        "doc": [
            "参考自：neo4j的python.py2neo操作入门 官方文档：The Py2neo Handbook — py2neo 2021.1 安装：pip install py2neo -i https://pypi.tuna.tsinghua.edu.cn/simple节点(Node)和关系(relationship)是构成图的基础，节点和关系都可以有多个属性（property），并且均可以作为实体重点：前置安装可以看：#cmd窗口下 neo4j.bat console 浏览器访问 http://localhost:7474/基本语法：Node（*labels，**properties）基本语法：Relationship（(start_node, type, end_node, **properties)）基本语法：Path(*entities) 注：entities是实体节点和关系的任意集合，它也是 Node、Relationship 和 Path 的基类 基本语法：Subgraph(nodes, relationships) 空子图表示为None，使用bool（）可以测试是否为空，且参数要按数组输入（1）GraphService：基于图服务的工作流。 （2）Graph：基于图数据库的工作流（前文所述的基本上都是如此）。 （3）Transaction：基于事务的工作流 在一个事务里，进行多种操作，只有操作全部完成，工作流才算完成，如： 一个Transaction分两个任务：① 增加一个新节点 ② 将该节点与已有节点创建新关系 两个任务只要有一个没完成，整个工作流就不会生效 通常，该种方式通过Graph.begain(readonly=False)构造函数构造，参数readonly表示只读，无参数默认可写为了使用更复杂查询，将图数据库扩充如下：① NodeMatcher：定位满足特定条件的节点 基本语法：NodeMatcher.match(*labels, **properties)② NodeMatch 基本用法：NodeMatch(graph, labels=frozenset({}), predicates=(), order_by=(), skip=None, limit=None)③ RelationshipMatcher：用于选择满足一组特定标准的关系的匹配器 基础语法：relation = RelationshipMatcher(graph)④ RelationshipMatch 基本语法：RelationshipMatch(graph, nodes=None, r_type=None, predicates=(), order_by=(), skip=None, limit=None) 用法类同，不再赘述\\n        \\n    \\n                    m0_61437511: \\n                    您好，请问一下您的neo4j是哪个版本呢，我的总是显示链接不上\\n                \\n                    电信の铁沸物: \\n                    谢谢你，machine man\\n                \\n                    NostalgiaJ: \\n                    btn btn-danger是不是写错了，多写了一个btn\\n                \\n                    qq_45969446: \\n                    up主求吴恩达新版pdf\\n                \\n                    m0_49967478: \\n                    超过16位的小数要怎么解决呢\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "本文中会用到多种数据类型，在此一并引用<import numpy as np\\nimport pandas as pd\\nfrom py2neo import Node,Relationship,Graph,Path,Subgraph\\nfrom py2neo import NodeMatcher,RelationshipMatcher配置Neo4j数据库的访问地址、用户名和密码：在此时间段之前访问数据库的方式为：graph = Graph(neo4j_url, username=user, password=pwd)在此时间段之后的版本访问数据库的方式为（就是这么不兼容）：以下图为例：查看节点的类型用graph.schema.node_labels，查看关系的类型用graph.schema.relationship_types，它们的返回值类型都是frozenset，是不能增删元素的集合。首先创建一个NodeMatcher对象，用match来指明要匹配哪种label的节点，用where来表示筛选条件（有两种方法）。需要注意的是，匹配成功返回的是NodeMatcher的对象，要转化成Node对象，可以用first取出符合条件的第一个节点，或者转化成节点的list。where条件有两种写法，一种是把要匹配的属性和值写成key=value的形式，例如上面的where(age=20)，这种写法只能按照值是否完全一致来匹配，不能按照值的大小来筛选，如果写成下面这样是会报错的：node = node_matcher.match(\\\"Person\\\").where(age>20).first() # 错误\\n想要按照值的大小筛选或者做一些字符串的模糊匹配，可以把条件表达式写成一个字符串，整体放在where语句中，在这个字符串中，可以用 _ 来代指匹配到的节点。下面两个例子，第一个是匹配work属性为“月亮XX”模式的Person节点，另一个是匹配age大于20的Person节点。将NodeMatcher返回的结果转化为Node数据类型或者Node的list之后，访问其中的属性也就十分简单了，如上面最后一例的结果，访问其中第一个节点的name属性：RelationshipMatcher的match方法有三个及以上参数：match方法的返回值是RelationshipMatcher类型，需要通过first转化成Relationship数据结构，或者转化为list。举例说明：列1：比如想要查询“李李”节点的所有关系。先查询出节点，再查询节点的关系，r_type=None表示任意类型的关系均可。返回的关系包括到访、同事。例2：查询“李李”和“张张”的关系，两个节点的顺序表示了要匹配的关系的方向。所以在整个图中“李李”和“张张”节点之间的同事关系是双向的，但是查询结果只给出了从“张张”节点到“李李”节点的一条关系。例3：询图中某一类关系，第一个参数为None，第二个参数r_type指定关系类型，这里查询了图中所有的同事关系。例4: 在查询关系时按照属性的值筛选，可以将该属性写为key=value的形式作为match方法的第三个参数。这里，查询图中的到访关系，并且stay_hours属性为1。虽然Py2neo的手册上没有写，但其实RelationshipMatcher也可以接上where方法，按照属性的值筛选关系。上面这个例子也可以写作下面这种形式，效果是一样的。relationship = list(relationship_matcher.match(None, r_type='到访').where(stay_hours=1))\\n同样，在where方法中也可以写一个字符串表达式，实现按值大小来筛选关系。例如要筛选出所有到访关系，且stay_hours>=1的关系时，可以这样写：如何访问返回的结果中的各个属性呢，Relationship其实是包含了一对起止节点：start_node和end_node，包含了关系的类型，而关系的属性是以字典形式存在的，可以用get方法来获取属性的值。\\n获取关系的起止节点：获取关系的类型的文本字符串获取关系中的属性和值NodeMatcher和RelationshipMatcher能够表达的匹配条件相对简单，更加复杂的查询还是需要用Cypher语句来表达。Py2neo本身支持执行Cypher语句的执行，可以将复杂的查询写成Cypher语句，通过graph.run方法查询，返回的结果可以转化为pandas.DataFrame或者pandas.Series对象，从而和其他数据分析工具无缝衔接。例如：要查询Person节点，并满足work属性为“我们”。Cypher语句中可以使用WHERE接条件表达式，使用AS将返回的属性改名，返回多个属性时，用xxx AS x, yyy AS y。graph.run方法之后再接to_data_frame()可以将返回的数据变成pandas的DataFrame对象，并且用AS改过的属性名即为DataFrame中的列名。例2：查询一个已知节点和其他哪些节点有关系，有什么样的关系。Cypher语言查询关系时用 < 或者 > 表示方向，这里需要返回type(r)，直接返回r的话结果里是空值。例3：Cypher语言还可以查询路径，因为不确定返回的路径数量，所以最好先将结果转化为pandas.Series，再遍历访问其中每条路径的节点和关系。\\n这里查询的是“赵赵”节点和“王王”节点之间的关系路径，关系指定为同事或邻居，关系不超过4层。这里查询到的关系路径数量仅有1条。从上图的结果中也可以看出来，Path是一个比较复杂的结构，Path中的节点和关系分别用nodes和relationships表示，并且是按照路径上节点和关系的顺序分别存放的。这里给出一段示例代码，对每一个路径都做了直接打印path数据结构和自己组织路径文本。运行这段代码得的结果如下所示，上面一行是直接打印路径的结果，下面一行是自己组织文本得到的结果。使用Py2neo查询Neo4j中的节点、关系和路径时，条件简单的查询可以通NodeMatcher和RelationshipMatcher来实现。而较为复杂的查询，可以写成Cypher语句来查询，查询结果可以转化为pandas的DataFrame或者Series数据类型，与其他数据分析工具结合以上就是python使用py2neo查询Neo4j的节点、关系及路径的详细内容，更多关于python py2neo的资料请关注我们其它相关文章！目录 描述 返回值 实例 备注 总结 描述 Python time time()返回当前时间的时间戳(1970纪元后经过的浮点秒数). 突然想看时间了,打开cmd发现脑中空荡,Java和Python的Time类全忘了,我留下了无助的眼泪o(╥﹏╥)o. 语法 time()方法语法: time.time() 返回值 返回当前时间的时间戳(1970纪元后经过的浮点秒数). 实例 以下实例展示了 time() 函数的使用方法: #!/usr/bin/python import time print \"目录 一.场景说明 二.token处理思路 三.JsonPath基本用法 1.JsonPath介绍 2.JsonPath语法 3.JsonPath源码 4.JsonPath实战 四.token依赖实例 ⑤接下来编写函数,获取登录接口返回值并提取token和token_type进行拼接 .这里要使用jsonpath模块提取返回的token和token_type. ⑥最后定义类,将token作为类属性,整体代码如下: ⑦充值接口携带token请求. 总结: 一.场景说明 在面试接口自动化时,经常会问代码展示 import random import json import time import os     def zhuce():     print(\"*********************正在注册*********************\")     try:         users = readfile()     except:         fa = open(r'test.json', \"w\",encoding=\"utf-8&本文实例讲述了Python使用py2neo操作图数据库neo4j的方法.分享给大家供大家参考,具体如下: 1.概念 图:数据结构中的图由节点和其之间的边组成.节点表示一个实体,边表示实体之间的联系. 图数据库:以图的结构存储管理数据的数据库.其中一些数据库将原生的图结构经过优化后直接存储,即原生图存储.还有一些图数据库将图数据序列化后保存到关系型或其他数据库中. 之所以使用图数据库存储数据是因为它在处理实体之间存在复杂关系的数据具有很大的优势.使用传统的关系型数据库在处理数据之间的关系时其实很不目录 一.安装Py2neo 二.连接Neo4j数据库 1. 使用graph.run执行Cypher语句创建节点 2. 使用Node数据结构创建节点 3. 使用Node.Relationship和Subgraph数据结构创建节点和关系 三.性能对比 一.安装Py2neo 使用pip安装Py2neo,执行: pip install py2neo 查看已安装的Py2neo是什么版本的: pip show py2neo 二.连接Neo4j数据库 本文中会用到多种数据类型,在此一并引用 import nu目录 如何用Python搞到小姐姐私房照 目标站点 开发环境 效果预览 正式教程 一.第三方库安装 二.爬虫的基本套路 分析目标站点 请求网站获取数据 解析数据 保存数据 写在最后 如何用Python搞到小姐姐私房照 本文纯技术角度出发,教你如何用Python爬虫获取百度图库海量照片--技术无罪. 学会获取小姐姐私房照同理可得也能获取其他的照片,技术原理是一致的. 目标站点 百度图片使用关键字搜索 小姐姐私房照 https://image.baidu.com/ 开发环境 系统:Windows10模仿学习同事的代码来写的,主要是搞懂python中如何来组织包,如何调用包,如何读取配置文件,连接数据库,设置路由,路由分组.(注:使用的是python3.6) 整体目录设计如下: 根据调用层级从上往下来说: 首先项目根目录下的main.py是整个程序的入口,主要作用启动http服务器,调用分组路由. main.py import bottle from confg.conf import CONF from api.user import User db_url = CONF.db.url d一.连接Neo4j数据库 本文中会用到多种数据类型,在此一并引用 <import numpy as np import pandas as pd from py2neo import Node,Relationship,Graph,Path,Subgraph from py2neo import NodeMatcher,RelationshipMatcher 配置Neo4j数据库的访问地址.用户名和密码: neo4j_url = '访问地址' user = '用户名' pwd = '密码' 在此1.核心代码 使用py2neo连接neo4j的方法: from py2neo import Graph graph = Graph(\"http://localhost:7474\", auth=(\"neo4j\", \"neo4j\")) graph.delete_all()  # 删除已有的所有内容 根据dict创建Node: from py2neo import Node node = Node(**{\"key\":\"va需求:查询出满足3人及3案有关系的集合 # -*- coding: utf-8 -*- from py2neo import Graph import psycopg2 # 二维数组查找 def find(target, array): for i, val in enumerate(array): for j, temp in enumerate(val): if temp == target: return True; return False graph = Graph(host=\"192问题 创建一个二叉树 二叉树有限多个节点的集合,这个集合可能是: 空集 由一个根节点,和两棵互不相交的,分别称作左子树和右子树的二叉树组成 创建二叉树: 创建节点 再创建节点之间的关系 Python代码示例 # !/usr/bin/env python # -*-encoding: utf-8-*- # author:LiYanwei # version:0.1 class TreeNode(object): def __init__ (self, data, left = None, righ本文实例讲述了python通过socket查询whois的方法.分享给大家供大家参考.具体实现方法如下: import socket s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect(('whois.networksolutions.com', 43)) s.send('sina.com.cn \\\\r\\\\n') while 1: v = s.recv(1024) if v == '' or v == None: break本文实例分析了Javascript的节点关系.分享给大家供大家参考.具体如下: <html xmlns=\"http://www.w3.org/1999/xhtml\"> <head> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /> <title>节点关系</title> <script typ前言 服务器的相关知识曾经让我非常困惑.我相信还有很多的Python开发者和我有着类似的遭遇.本文主要介绍了python下如何查询CS反恐精英的服务器信息,有需要的可以参考学习. CS反恐精英1.5版本示例代码 #!/bin/env python import urllib2, base64, sys, getopt import re import socket def Usage (): print \"Usage: hlds.py -h 127.0.0.1 -p 27015\" sy本文实例讲述了Python获取SQLite查询结果表列名的方法.分享给大家供大家参考,具体如下: 获得查询结果表的列名: db = sqlite.connect('data.db') cur = db.cursor() cur.execute(\"select * from table\") col_name_list = [tuple[0] for tuple in cur.description] print col_name_list 获得所有列名: cur.execute(&quo© 2024 张生荣",
            "Neo4django 是一个强大的Python库，它为Django框架提供了对Neo4j图形数据库的支持。通过使用Neo4django，你可以轻松地在Django应用中利用图形数据库的强大功能。Neo4django允许你在Django模型上构建图形数据模型，并提供了一组易于使用的API来查询和操作Neo4j数据库。以下是Neo4django的一些主要特性：Neo4django适用于那些需要处理复杂关系的数据建模场景。以下是一些建议使用Neo4django的情况：要开始使用Neo4django，请按照以下步骤操作：详细教程和示例代码可以在Neo4django的GitHub仓库中找到：https://gitcode.com/scholrly/neo4djangoNeo4django是一个出色的Python库，为Django开发者提供了一个简单易用的方式来访问和操作Neo4j图形数据库。如果你正在寻找一种方法来利用图形数据库的强大功能来改进你的Django应用，那么Neo4django值得尝试。为了了解更多关于Neo4django的信息，请访问项目的GitCode页面：https://gitcode.com/scholrly/neo4django?utm_source=artical_gitcode请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者gitblog_00072你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            ""
        ]
    },
    {
        "prompt": "for (int i = 0; i < V.rows(); i++) {\n\t\tstd::set<int> sample_verteices;\n\t\tfor (Eigen::SparseMatrix<int>::InnerIterator iter(samples_mat, i); iter; iter++) {\n\t\t\tsample_verteices.insert(iter.row());\n\t\t}\n\n\t\tEigen::MatrixXd P(sample_verteices.size(), 3);\n\t\tint p_row_idx = 0;\n\t\tfor (int index : sample_verteices) {\n\t\t\tP.row(p_row_idx) = V.row(index) - V.row(i);\n\t\t\tp_row_idx++;\n\t\t}",
        "doc": [
            "优点:缺点:2. 增强for循环 (for(Place item : places))优点:缺点:\\n                    极乐丶醉卧沙场: \\n                    什么意思\\n                \\n                    weixin_41487770: \\n                    很棒解决了 我华硕台式电脑 开机一直进入 bios 页面的问题。牛牛牛 ！ \\n                \\n                    2301_79338265: \\n                    i了i了\\n                \\n                    极乐丶醉卧沙场: \\n                    大佬光临寒舍，小弟蓬荜生辉！\\n                \\n                    WolfWong: \\n                    虽然看不懂，但是感觉很强的亚子，加油，大神指日可待\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "排序后双指针，暴力都行位置0只能通过位置1来减，必须把值减到0位置0的值变成0后，相当于把位置0去掉同理减前n-2个，只要减的位置的值>=0  并且  执行完操作后每个数都是0  即可pie删中间的 i map删中间的 amapie 删中间的 p，且优先级最高简单dp，从 i-1 转移到 i重点是算每行最少的cost下面的d加了1位置 i 从 [max(0,i-d),i-1] 区间的最小值转移而来，就是维护一个最小栈直接二分结果会炸先找最大区间的值域[CL,CR]，记分裂后 最大区间 的 最小值d 双指针，找最后一个 r 满足 b[l]+c[r]<CR更新CL,CR还有d注意b[l]+c[r-1]切分后的d可能比b[l]+c[r]的d更小，不能直接让b的 l++显然b[l]+c[r]<=CL时，l++用个map<int,set<int>>记 每种颜色的地铁线 包含 哪些点bfs，枚举当前点的所有边，枚举边上的color包含的点每种color显然只用搜一次，用个map记一下",
            "版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。                          原文链接：https://blog.csdn.net/lfod1997/article/details/100998904Eigen 3 是一个以纯泛型编写的 C++ 矩阵运算库，它的授权是 MPL2，以源代码的形式提供给用户，所以只要把它的代码 include 进自己的程序就可以使用，不需要链接 DLL，也没有任何除 iostream 以外的依赖项。下面是一个比较全面的示例，我写了较多的注释来澄清一些上手时容易误会的问题，旨在帮助你在一个小时内学会 Eigen 的常用操作并开始工作，也补足了被 AsciiQuickReference.txt 忽视的一些要点。 请编译运行这个程序，并对照运行结果理解代码。\\n        \\n    \\n                    yantuguiguziPGJ: \\n                    reg delete \"HKEY_CURRENT_USER\\\\Software\\\\Scooter Software\\\\Beyond Compare 4\" /v CacheID /f\\n                \\n                    入门工作者: \\n                    测试后，发现必须用release版本来发布，debug版本总会报缺失依赖，可能release和debug后台调用机制不同\\n                \\n                    yantuguiguziPGJ: \\n                    客气啦，我也是抄别人的，确实有用的\\n                \\n                    在撒哈拉卖雨伞: \\n                    这么好的文章，偏偏不能一下看见。感谢作者解决了我的问题\\n                \\n                    小疯子青: \\n                    这个小工具一用就卡死\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "非常经典的DP拆式子转移题面.从后往前DP,令dp_i表示插到i位置后最小需要的代价,则有.令suf_i表示[i, n]的b之和.dp_i \\\\leftarrow \\\\min(dp_j - suf_j) + suf_{i+1} + a_i,所以我们只需要用一个变量维护一下\\\\min(dp_j - suf_j)即可.直觉告诉我最多只需要一次操作.首先我们判断下二分能否成功,可以答案就是0.\\n否则答案是1,我们可以记录最初我们二分时访问过的位置,可以发现如果这些位置一个都不变那么结果也不会变,所以需要操作的一定时访问过的位置,只有O(\\\\log{n})个,所以只需要枚举O(n\\\\log{n})种情况,每种情况都二分一次判断即可,总时间复杂度为O(n\\\\log^2{n}).我们可以枚举取了k = 1 \\\\sim n个元素,然后用两个std::set维护所有元素,把较大的k个元素放在一个std::set里,这样就很容易快速查询最小值了.首先我们可以分析一下打到过粥的人在排队的人一定按照以下规则排序的.所以我们可以拿一个std::set维护已经出过队的人.对于没出过队的人,我们只需要维护一个k的后缀最大值,然后和当前std::set里优先级最高的人比较,如果优先级大于等于std::set里优先级最高的人,那么我们就把队头打粥,否则就是std::set里优先级最高的人打粥,最后只需要判断是否初始队列所有人都打到过粥即可.其实就是个模拟.首先最优一定是第一组选两个数,因为数字多了\\\\gcd肯定不会增大,剩下的数的与值肯定不会减小.假设所有数字与起来的值为t,如果我们第一组中的数把某位全是0的数都选走了,t才可能增大,而这要求这一位最多只能有2个数字这一位为0.所以相关的数字最多只有2\\\\log{\\\\max a_i}个,我们可以全部枚举出来.可以发现如果我们用的数字不在这个集合里面,那么最终的与值肯定是t.所以我们只需要找两个\\\\gcd最大的数即可.这个可以用倍数枚举找到.如果我们用的数字有一个在这个集合里,我们可以枚举是哪个数字,然后枚举另一个数字,可以发现可能性只有O(n\\\\log{\\\\max a_i})种,然后判断也是O(\\\\log{\\\\max a_i})的.总复杂度为O(n\\\\log^2{\\\\max a_i})本文使用 Zhihu On VSCode 创作并发布"
        ]
    },
    {
        "prompt": "bmi标准陀螺姿态如何旋转到ned坐标系下，请帮我用c++代码实现陀螺旋转",
        "doc": [
            "        相信大家和我一样，刚入门惯导就接触到各种惯导相关的术语和概念：各种坐标系，坐标系转换，坐标转换，姿态矩阵，姿态更新，欧拉角、方向余弦矩阵、四元数等等，各种概念看了个遍，好像懂了，稍微一结合串起来具体理解姿态解算过程就是各种感觉绕，各种感觉懵。        好不容易绕出来一点点，给大家介绍一下一些关于姿态解算原理尤其是对于欧拉角、方向余弦矩阵、四元数在姿态转换表达中的作用的比较浅显的个人理解，不一定都正确，欢迎参考指正。        姿态解算的整体流程主要包括获取惯性传感器数据、姿态估计(更新)、姿态提取、姿态控制。        获取惯性传感器数据：在运载体上，我们将惯性器件（陀螺仪和加速度计等）与之固连，在运载体的运动过程中，惯性器件会对运载体三轴（x，y，z）的角速度和加速度信息进行测量，这也就是我们获得的最原始的惯导数据，我们通过这些数据去进行姿态估计，求取姿态矩阵。        姿态估计（更新）：分析数据时我们发现，惯性传感器测量得到的原始的惯导数据是载体坐标系（b系）下的，而我们需要解算的运载体姿态信息是导航/地理坐标系（n/g系）下的，（在求解惯性导航参数过程中，导航坐标系通常选用地理坐标系），这就需要我们从b系下变换到g系，坐标变换计算过程中就会涉及到从b系到g系的坐标变换矩阵C，也称为姿态（矩）阵，在b系下利用坐标表示的一个三维矢量左乘坐标变换矩阵C即可得到其在g系下的坐标表示。        而姿态矩阵的表示通常有三种方式：欧拉角、方向余弦矩阵以及四元数，这也就对应着我们传统的三种姿态更新算法；        1）欧拉角        欧拉角是三个一组的角参数广义坐标，十分适用于人的理解。根据坐标轴绕其轴旋转顺序的不同，共计12种定义方式（欧拉角定义并不要求必须绕每个轴都旋转一次）。描述运载体姿态的一组欧拉角我们称之为姿态角，包括航向角（yaw）、俯仰角（pitch）、横滚角（row）。        我们将绕一根轴的旋转称为基本旋转，两坐标系任何复杂的角关系都可以看做有限次基本旋转的复合，那么两坐标系的姿态变换矩阵就是按顺序排列的基本旋转矩阵的连续左乘。我们利用欧拉角来描述基本旋转矩阵，由此可以利用欧拉角进一步描述姿态矩阵。        2）方向余弦矩阵        对于两个坐标系（如b系和i系）的转换，我们分别选取b系和i系的标准正交基，将b系中各个方向的单位向量分解成i系中各个方向的单位向量的线性组合，将其改写为矩阵形式：                        P即为i系到b系的坐标系变换矩阵，P中的每一个元素均表示两套坐标系相应坐标轴之间夹角的余弦值，即称之为方向余弦矩阵。        姿态变换矩阵和方向余弦矩阵之间有什么关系？方向余弦矩阵是姿态变换矩阵的一种描述方式，当我们采取计算不同坐标系标准正交基之间的关系这种研究方式时，得到的方向余弦矩阵就是姿态变换矩阵。        3）四元数        三维空间中的任意旋转，除了可以分解为有限次基础旋转的叠加外，还可以等效于绕三维空间中某个轴旋转某个角度，那么全部的旋转信息就全部浓缩在旋转轴和旋转角度中。        这里我们指出单位四元数的三角函数形式表达式：                                                        其中u为单位长度的三维矢量；        这种形式很好的囊括了旋转轴和旋转角度信息，我们可以利用其来方便的表达等效旋转。        在罗德里格旋转公式中，同样描述了这样一种基于等效旋转轴和旋转角度的旋转前后的矢量关系：                                                                        其中D即为转动前后的两个矢量所需要左乘的姿态变换矩阵，将四元数Q拆分为实数部分和虚数部分，即可建立四元数与姿态变换矩阵的关系。             姿态提取：姿态解算的最终目的是获取实时的运载体姿态信息，这就需要我们实时进行姿态更新，也就是通过惯性器件的输出对姿态矩阵进行实时的计算，从姿态矩阵中即可提取出我们所需的运载体姿态信息（姿态角）。        姿态控制：根据运载体姿态信息，利用姿态控制系统按要求调整运载体姿态，这里不做过多赘述。          最后补充一些惯导坐标系转换变来变去的一些疑问和理解：        地心惯性坐标系以地球质心为圆心，以地球的自转轴和恒星确定坐标轴方向，不随地球转动，这里所说的以恒星确定坐标轴方向即为ox轴指向春分点，说白了就是这个点不在地球上，所以这个坐标轴不会随着地球转动，在这个坐标系下才建立的位置、速度、加速度等之间的数学关系。而另一个叫做地球坐标系也叫地心地固坐标系的坐标系它的ox轴指向本初子午线，而这条线在地球上，会随着地球自转转动，因此这个坐标系也是随着地球转动的。        将坐标转换后的姿态、速度信息通过积分等操作得到导航（地理）坐标系下位置变化信息，地理坐标系相对于地球（地心地固）坐标系的关系可用运载体的地理坐标表示，即经纬度和椭球高度。也就是说把载体系下的惯导数据转换到导航（地理）系，积一下就是简陋版的经纬啦，这也可以算是整个导航的简化流程。参考：惯性导航-秦永元           捷联惯导算法与组合导航原理-严恭敏           姿态解算基础：欧拉角、方向余弦、四元数_四元素姿态矩阵-CSDN博客    写太好啦，感谢感谢，绕不清楚了再看总能绕出来点，但过会又绕进去了哈哈哈.\\n                    CSDN-Ada助手: \\n                    非常棒的博文！看到标题就被吸引了，摘要内容更是让人期待不已。希望您能继续分享更多关于惯性导航姿态解算原理流程的知识。除了欧拉角、方向余弦矩阵和四元数，您还可以深入探讨航空航天领域中常用的卡尔曼滤波算法，以及姿态稳定控制中的PID控制器等相关内容。期待您更多的精彩分享！\\n\\n如何写出更高质量的博客，请看该博主的分享：https://blog.csdn.net/lmy_520/article/details/128686434?utm_source=csdn_ai_ada_blog_reply2\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第一篇博客！标题看起来很吸引人。对于Python-matplotlib绘制双(多)y轴图像，您的博客给出了很好的指导。我希望您能在博客中更详细地介绍如何使用matplotlib绘制这样的图像，并且可以提供一些实际应用的例子。同时，也希望您能在未来的创作中考虑添加一些其他绘图工具的比较和使用经验，这样读者可以有更多选择。期待您的下一篇博客！\\n\\n推荐【每天值得看】：https://bbs.csdn.net/forums/csdnnews?typeId=21804&utm_source=csdn_ai_ada_blog_reply1\\n                \\n                    CSDN-Ada助手: \\n                    恭喜你这篇博客进入【CSDN每天最佳新人】榜单，全部的排名请看 https://bbs.csdn.net/topics/617597884。 \\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "     运动动作捕捉正面临着惯性传感技术带来的一些新的可能性，这些技术不会像基于视觉的解决方案那样受到遮挡或大范围记录的影响。然而，由于记录的信号稀疏且噪音很大，因此在线性能和全局翻译估计成为两个关键困难。在本文中，我们介绍了 TransPose，这是一种基于 DNN 的方法，仅从 6 个（芯米科技的QBD013 CM013陀螺仪模块惯性测量单元） （IMU） 以超过 90 fps 的速度执行完整的动作捕捉（具有全局平移和身体姿势）。对于身体姿态估计，我们提出了一个多阶段网络，该网络估计叶片到完全关节位置作为中间结果。这种设计使姿态估计变得更加容易，从而实现了更好的精度和更低的计算成本。对于全局翻译估计，我们提出了一种基于支撑脚的方法和一种基于RNN的方法，利用基于置信度的融合技术对全局翻译进行鲁棒求解。定量和定性比较表明，我们的方法优于最先进的基于学习和优化的方法，在准确性和效率方面都有很大的优势。作为一种纯粹基于惯性传感器的方法，我们的方法不受环境设置（例如固定相机）的限制，使捕获不受大范围运动空间和强遮挡等常见困难的影响。   人体动作捕捉（mocap）旨在重建3D人体动作，在游戏、体育、医学、VR/AR、电影制作等各种应用中发挥着重要作用。到目前为止，基于视觉的动作捕捉解决方案在该主题中占据了大部分。一类需要在人体上附加光学标记，并利用多个摄像头来跟踪标记以进行动作捕捉。基于标记的系统（如Vicon1）被广泛应用，并被认为足够精确，可用于工业用途。然而，这种方法需要昂贵的基础设施和侵入性设备，这使得它们不适合消费者级使用。最近，另一个类别侧重于使用一些 RGB 或 RGB-D 相机进行姿态估计 [Chen 等人，2020 年;Habibie 等人，2019 年;Mehta 等人，2020 年;Tome 等人，2018 年;Trumble 等人，2016 年;Xiang 等人，2019 年]。尽管这些方法更加轻量级，但它们对人类的外观很敏感，因为需要从图像中提取可区分的特征。因此，这些方法通常不适用于无纹理的衣服或具有挑战性的环境照明。此外，所有基于视觉的方法都存在遮挡问题。这样的问题有时可以通过设置密集的相机来解决（这进一步使系统变得沉重和昂贵），但在某些应用中通常是不切实际的。例如，在装满家具或物品的公共房间里布置摄像头是非常困难的，这可能会从任何方向遮挡拍摄对象。  另一个基于视觉的方法的局限性在于表演者通常被限制在固定的空间体积中。对于大范围步行和跑步等日常活动，需要精心控制的移动摄像头来记录足够的运动信息，这是很难实现的[Xu et al. 2016]。这些缺点对于许多应用来说是致命的缺陷，因此导致基于视觉的解决方案的可用性有限。与基于视觉的系统相比，使用随身携带传感器的运动捕捉与环境无关且不受遮挡影响。它不需要复杂的设施设置，也不限制运动范围。这些特性使其更适合客户级使用。因此，近年来，使用惯性传感器进行动作捕捉越来越受到关注。大多数相关作品都利用惯性测量单元 （IMU） 来记录运动惯性，这些惯性经济、轻便、可靠，并且通常用于手表、腕带和眼镜等快速增长的可穿戴设备。商用惯性动作捕捉系统 Xsens2 使用 17 个 芯米科技的QBD013 CM013陀螺仪模块来估计关节旋转。虽然准确，但IMU的密集放置既不方便又具有侵入性，使表演者无法自由移动。另一方面，这种系统的设施要求仍然超出了普通客户的接受范围。SIP 的工作 [Marcard 等人，2017 年] 表明，仅从 6 个 IMU 重建人体运动是可行的。但是，作为一种基于优化的方法，它需要访问整个序列，并且需要很长时间来处理。以下最先进的工作 DIP [Huang 等人，2018 年]通过利用双向 RNN 实现实时性能和更好的质量，也使用 6 个 IMU。然而，它在具有挑战性的姿势上仍然失败，30 fps 的帧速率不足以捕捉快速运动，这在实际应用中非常常见。更重要的是，它只估计身体姿势，而没有全局运动，这在VR和AR等许多应用中也很重要。IMU 本身无法直接测量距离。以前的一些工作 [Liu et al. 2011;Vlasic 等人，2007 年]使用额外的超声波传感器来测量全局平移，这既昂贵又容易被遮挡。其他可能的解决方案使用 GPS 定位，这不够准确，仅适用于户外捕获。因此，从稀疏磨损的传感器对身体姿势和全局平移进行超实时估计仍然是一个悬而未决的问题。为此，我们介绍了我们的方法 TransPose，它以前所未有的 90 fps 和最先进的精度从仅 6 个 IMU 芯米科技的QBD013 CM013陀螺仪模块中估计全局平移和身体姿势。从稀疏的 IMU 执行动作捕捉极具挑战性，因为该问题严重不足。我们建议制定姿势求解关节从位置旋转，即逆运动学 （IK） 问题。对于基于融合的全局平移估计，我们结合了以下两种方法：1）脚-地接触估计从叶节位置和IMU测量值估计双脚-地面接触概率，并在假设接触概率较大的脚不移动的情况下计算根平移;2）根速度回归器从所有关节位置和IMU信号回归根在自己的坐标系中的局部速度。在姿态估计中使用单独步骤的设计是基于我们的观察，即估计关节位置作为中间表示比直接回归旋转更容易。与位置公式相比，我们将其归因于旋转表示的非线性。另一方面，以前的工作已经很好地研究了使用神经网络执行 IK 任务 然而，这些作品忽略了运动史的重要性。由于IK问题不合理，因此经常出现运动模糊，只能根据运动历史来消除。在这里，在每个阶段，我们都会结合一个双向递归神经网络 （biRNN） [Schuster 和 Paliwal 1997] 来维护运动历史。这与 类似，但由于我们的 3 级设计，我们的网络明显更小，精度更高。至于全局平移估计，背后的直觉是预测哪只脚接触地面并固定接触的脚，以从估计的姿势中推断出根部运动。此外，为了应对没有脚踏实地的情况，我们进一步使用RNN来回归根翻译作为补充。最后，我们的方法合并了这两个估计值，以使用由脚-地接触概率确定的融合权重来预测最终平移。灵感来自[Shimada et al. 2020;Zou et al. 2020]，利用脚地接触约束来减少基于视觉的动作捕捉中的脚滑伪影，但我们有不同的目的，即解决估计姿势的转换问题。如实验所示，这种方法可以处理大多数动作，如步行、跑步和具有挑战性的跳跃。我们在公共数据集上评估了我们的方法，在各种指标（包括位置和旋转误差、时间平滑度、运行时间等）上，我们在定性和定量上都大大优于以前的工作 DIP 和 SIP。我们还提供现场演示，捕捉各种具有挑战性的动作，表演者可以自由行动，不受遮挡或范围的影响。这些实验证明了我们比以前的工作具有显着的优越性。总之，我们的贡献是： • 一种非常快速和准确的实时动作捕捉方法，• 一种用于执行姿态估计的新结构，将关节位置明确估计为中间子任务，从而实现更高的精度和更少的运行时间。• 第一种仅从稀疏的 6 个 IMU 中明确估计全局转换的方法。",
            "在许多姿态估计和导航应用中，陀螺仪和加速度计是两个常用的传感器。然而，单独使用它们可能会受到各种噪声和误差的影响。为了获得更准确和稳定的姿态信息，通常会将两者的数据进行融合。前面一篇文章《史上最经典状态估计算法-卡尔曼滤波用于陀螺仪加速度计数据融合》，我们已经介绍了如何使用互补滤波算法来实现IMU倾斜角度的测量。这篇文章，我们将使用史上最经典状态估计算法，也就是卡尔曼滤波来来解决相同的问题，我们将从原理、系统模型到C代码实现全过程讲解，让你一篇文章就搞懂如何实战卡尔曼滤波算法。当我们想要通过传感器的测量获取物体的状态（比如位置、速度或者角度）时，常常会遇到各种问题，比如传感器的误差、噪声等。这些问题会导致我们得到的数据不够准确或者不稳定。卡尔曼滤波的思想很简单，它不只是单纯地采用传感器提供的数据，还结合了我们对物体运动规律的认识或者经验。比如，如果我们知道物体的在做匀速运动，那么即使传感器提供的速度数据有问题，但是我们任然也可以通过这个运动规律来修正它。让我们来想象一个常见的情景：假设你正在开车匀速直线行驶，我们可以通过车上的GPS系统来获取车的位置。但是由于GPS系统不够准确，你可能会得到一些不太可信的位置信息。这时候，你就可以使用卡尔曼滤波来纠正这些位置估计的错误。卡尔曼滤波会首先根据你的车速和方向，预测你在下一个时刻的位置。然后，当GPS系统提供新的位置信息时，卡尔曼滤波会将这个观测值与预测值进行比较。如果观测值与预测值相符，那么卡尔曼滤波就会相信GPS系统提供的位置信息；但如果观测值与预测值有很大的偏差，那么卡尔曼滤波就会调整你的位置估计，使之更接近实际情况。通过不断地重复这个过程，卡尔曼滤波可以逐渐提高对你的位置的准确度，即使GPS系统偶尔出错。这样，你就能更可靠地了解自己的位置，从而更安全地行驶。卡尔曼滤波通过两个重要的步骤来实现：预测和更新，这个实现步骤和算法思想是息息相关的。2. 协方差预测：在预测步骤中，我们根据系统模型（由状态转移矩阵 F 和控制输入矩阵 B 描述）来预测下一个状态的值，并且根据过程噪声的协方差矩阵 Q 来估计预测的不确定性。3. 计算卡尔曼增益：4. 更新状态估计：5. 更新协方差：在更新步骤中，我们将预测的状态值与实际观测值进行比较，根据观测噪声的协方差矩阵 R 来估计观测值的不确定性，并计算出一个卡尔曼增益，用来权衡预测值和观测值。最后，我们使用卡尔曼增益来更新状态的估计值和协方差矩阵，以获得更准确的状态估计值。总的来说，卡尔曼滤波通过动态地结合系统模型和观测值，以及它们的不确定性信息，来得到对系统状态更准确的估计。这使得卡尔曼滤波在处理带有噪声的测量数据时能够提供更可靠的估计结果。总结一下，首先利用系统的模型，基于上一次的最优结果来预测当前状态值，然后结合观测数据来进一步修正当前状态值，从而得到这一次最优结果值。矩阵 Q 表示系统模型的误差的协方差，即在预测步骤中，我们对状态的预测有多不确定。一般来说，Q 的值越小，表示我们对系统模型的信任度越高，即我们认为系统的动态规律是比较可靠的，预测的结果也就更加可信。如果系统的动态变化比较缓慢，那么 Q 的值可以设置得比较小；如果系统的动态变化很快，那么 Q 的值可能需要设置得比较大，以反映出系统的不确定性。通常情况下，Q 的取值是根据经验或者系统特性进行调整的。矩阵 R 表示观测误差的协方差，即在更新步骤中，我们对观测值的信任程度。R 的取值大小取决于传感器的精度和环境噪声等因素。一般来说，R 的值越小，表示我们对观测值的信任度越高，即我们认为传感器的测量结果是比较可靠的，更新的结果也就更加可信。如果传感器的精度很高，环境噪声很小，那么 R 的值可以设置得比较小；如果传感器存在较大的测量误差，或者环境噪声比较大，那么 R 的值可能需要设置得比较大，以反映出观测值的不确定性。同样，R 的取值通常是需要根据实际情况进行调整的。要得到平衡车的倾斜角度，其实就是传感器绕着平行于轮轴的轴旋转的角度。这里我们以此陀螺仪旋转轴的角速度newGyro输出作为系统输入u，我们知道对角度积分能得到角度值，利用这个先验模型来预测更新系统状态。然后把加速度计估计重力加速度在物体局部坐标系下的投影反正切计算得到角度值作为观测值。这样我们就可以利用卡尔曼算法来得到更准确的角度估计。下面我们就按照上面讲到的算法步骤按部就班来实现：1.预测当前角度我们知道，对角速度积分是旋转角度，于是有：其中angle为绕轴旋转角度，bias表示角速度偏差值。newGyro是陀螺仪旋转轴的角速度值，这里作为系统输入。dt为传感器采样时间，比如0.01秒。定义系统状态向量为：那么系统的状态模型可以写成如下矩阵形式：我们可以通过 上面公式来预测当前角度。2.预测协方差矩阵由协方差方程其中由上面系统模型可知，定义系统过程协方差噪声注意，前面讲到，Q_angle和Q_bias是常数，表征角度值和角速度值的误差方差不确定性，具体可以有经验整定出来。将Q和F代入公式有：展开公式有：3.测量方程系统测量方差:Zk是实际测量值，我们这里是加速度计算出来的角度值。H是测量系数矩阵，表示测量值与状态量xk的转换关系的，Vk是测量噪声。其中H=[1 0] .因为测量值是角度，与角速度偏差bias无关，所以H第二项是0。设加速度计角度计算值为newAngle，那么Zk=newAngle。4.计算卡尔曼增益K根据上面，定义R=R_measure，为常数，表示角速度计角度的测量方差。因为观测只有一个数据，所以R是1*1矩阵。所以代入R,P,H矩阵，可以得到：K为2*1列向量，k0为第一项，k2为第二项。5.更新状态估计由更新状态估计公式可得：展开矩阵：6.更新协方差矩阵根据上面公式，可得：展开矩阵可得：下面我们把上述过程转成C代码实现：通过调节超参数取值到Q_angle = 0.00005,Q_bias = 0.00015,R_measure = 0.5时，滤波效果比较不错。如下图:我们将小车静置桌面下测得的实际效果数据。图中白色线是陀螺仪先验估计角度，黄色线是加速度计测量计算得到角度数据，而红色线是卡尔曼滤波融合之后的数据，红色线完美抑制了白线的漂移，同时滤掉了黄色加速度数据的毛刺，效果非常完美！后续持续更新系列高质量文章，码字不易，觉得写的不错欢迎关注、点赞、收藏以及提问！",
            "IMU测量的是本体系在惯性系下的角速度在本体系下的分量，其测量的是绝对角速度 \\n     \\n      \\n       \\n       \\n         ω \\n        \\n       \\n      \\n        \\\\omega \\n       \\n      \\n    ω。测量原理[[陀螺仪测量角速度原理|详见]]。首先回答不等于。先给出否定的例子： 我们仅用陀螺仪测量的角速度积分作为姿态角度，第一张图，本体系处于水平，此时三轴姿态角为0°，第一次旋转，绕俯仰轴旋转45度，此时姿态角为：俯仰角45° 滚转角0° 偏航角0°；第二次旋转，绕偏航轴旋转90度，此时姿态角为：俯仰角0° 滚转角45° 偏航角90°；显然，上述过程，如果用陀螺仪测得的角速度作为积分计算姿态，则得到，俯仰角45° 滚转角0° 偏航角90°；而实际上，旋转过后，俯仰角0° 滚转角45° 偏航角90°，与实际情况不符。原因在于，角速度积分不等于姿态角，而欧拉角速度积分才等于姿态角，角速度、欧拉角、欧拉角速度三者之间存在一定的关系，即欧拉运动学方程下面给出欧拉角运动学方程的推导过程。欧拉角的定义 我们把坐标系旋转中的“3-2-1”旋转（Z-Y-X旋转）中的三个角度定义为偏航角 \\n      \\n       \\n        \\n        \\n          ϕ \\n         \\n        \\n       \\n         \\\\phi \\n        \\n       \\n     ϕ、俯仰角 \\n      \\n       \\n        \\n        \\n          θ \\n         \\n        \\n       \\n         \\\\theta \\n        \\n       \\n     θ和滚转角 \\n      \\n       \\n        \\n        \\n          ψ \\n         \\n        \\n       \\n         \\\\psi \\n        \\n       \\n     ψ。 对应的旋转矩阵分别为：  \\n       \\n        \\n         \\n          \\n          \\n            R \\n           \\n          \\n            3 \\n           \\n          \\n         \\n           ( \\n          \\n         \\n           ϕ \\n          \\n         \\n           ) \\n          \\n         \\n           = \\n          \\n          \\n          \\n            [ \\n           \\n           \\n            \\n             \\n              \\n               \\n               \\n                 cos \\n                \\n               \\n                 ⁡ \\n                \\n               \\n                 ϕ \\n                \\n               \\n              \\n             \\n             \\n              \\n               \\n               \\n                 sin \\n                \\n               \\n                 ⁡ \\n                \\n               \\n                 ϕ \\n                \\n               \\n              \\n             \\n             \\n              \\n              \\n                0 \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n               \\n               \\n                 − \\n                \\n               \\n                 sin \\n                \\n               \\n                 ⁡ \\n                \\n               \\n                 ϕ \\n                \\n               \\n              \\n             \\n             \\n              \\n               \\n               \\n                 cos \\n                \\n               \\n                 ⁡ \\n                \\n               \\n                 ϕ \\n                \\n               \\n              \\n             \\n             \\n              \\n              \\n                0 \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                0 \\n               \\n              \\n             \\n             \\n              \\n              \\n                0 \\n               \\n              \\n             \\n             \\n              \\n              \\n                1 \\n               \\n              \\n             \\n            \\n           \\n          \\n            ] \\n           \\n          \\n         \\n           , \\n          \\n          \\n          \\n            R \\n           \\n          \\n            2 \\n           \\n          \\n         \\n           ( \\n          \\n         \\n           θ \\n          \\n         \\n           ) \\n          \\n         \\n           = \\n          \\n          \\n          \\n            [ \\n           \\n           \\n            \\n             \\n              \\n               \\n               \\n                 cos \\n                \\n               \\n                 ⁡ \\n                \\n               \\n                 θ \\n                \\n               \\n              \\n             \\n             \\n              \\n              \\n                0 \\n               \\n              \\n             \\n             \\n              \\n               \\n               \\n                 − \\n                \\n               \\n                 sin \\n                \\n               \\n                 ⁡ \\n                \\n               \\n                 θ \\n                \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                0 \\n               \\n              \\n             \\n             \\n              \\n              \\n                1 \\n               \\n              \\n             \\n             \\n              \\n              \\n                0 \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n               \\n               \\n                 s \\n                \\n               \\n                 i \\n                \\n               \\n                 n \\n                \\n               \\n                 θ \\n                \\n               \\n              \\n             \\n             \\n              \\n              \\n                0 \\n               \\n              \\n             \\n             \\n              \\n               \\n               \\n                 cos \\n                \\n               \\n                 ⁡ \\n                \\n               \\n                 θ \\n                \\n               \\n              \\n             \\n            \\n           \\n          \\n            ] \\n           \\n          \\n         \\n           , \\n          \\n          \\n          \\n            R \\n           \\n          \\n            1 \\n           \\n          \\n         \\n           ( \\n          \\n         \\n           ψ \\n          \\n         \\n           ) \\n          \\n         \\n           = \\n          \\n          \\n          \\n            [ \\n           \\n           \\n            \\n             \\n              \\n              \\n                1 \\n               \\n              \\n             \\n             \\n              \\n              \\n                0 \\n               \\n              \\n             \\n             \\n              \\n              \\n                0 \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                0 \\n               \\n              \\n             \\n             \\n              \\n               \\n               \\n                 c \\n                \\n               \\n                 o \\n                \\n               \\n                 s \\n                \\n               \\n                 ψ \\n                \\n               \\n              \\n             \\n             \\n              \\n               \\n               \\n                 sin \\n                \\n               \\n                 ⁡ \\n                \\n               \\n                 ψ \\n                \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                0 \\n               \\n              \\n             \\n             \\n              \\n               \\n               \\n                 − \\n                \\n               \\n                 sin \\n                \\n               \\n                 ⁡ \\n                \\n               \\n                 ψ \\n                \\n               \\n              \\n             \\n             \\n              \\n               \\n               \\n                 cos \\n                \\n               \\n                 ⁡ \\n                \\n               \\n                 ψ \\n                \\n               \\n              \\n             \\n            \\n           \\n          \\n            ] \\n           \\n          \\n         \\n        \\n          R_{3}(\\\\phi)=\\\\begin{bmatrix} \\\\cos\\\\phi&\\\\sin\\\\phi&0\\\\\\\\ -\\\\sin\\\\phi&\\\\cos\\\\phi&0\\\\\\\\ 0&0&1 \\\\end{bmatrix}, R_{2}(\\\\theta)=\\\\begin{bmatrix} \\\\cos\\\\theta&0&-\\\\sin\\\\theta\\\\\\\\ 0&1&0\\\\\\\\ sin\\\\theta&0&\\\\cos\\\\theta \\\\end{bmatrix}, R_{1}(\\\\psi)=\\\\begin{bmatrix} 1&0&0\\\\\\\\ 0&cos\\\\psi&\\\\sin\\\\psi\\\\\\\\ 0&-\\\\sin\\\\psi&\\\\cos\\\\psi\\\\\\\\ \\\\end{bmatrix} \\n         \\n        \\n      R3​(ϕ)= \\n                \\n                 \\n               ​cosϕ−sinϕ0​sinϕcosϕ0​001​ \\n                \\n                 \\n               ​,R2​(θ)= \\n                \\n                 \\n               ​cosθ0sinθ​010​−sinθ0cosθ​ \\n                \\n                 \\n               ​,R1​(ψ)= \\n                \\n                 \\n               ​100​0cosψ−sinψ​0sinψcosψ​ \\n                \\n                 \\n               ​ 旋转方向为从惯性系到本体系的旋转即：  \\n       \\n        \\n         \\n          \\n          \\n            [ \\n           \\n           \\n            \\n             \\n              \\n              \\n                x \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                y \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                z \\n               \\n              \\n             \\n            \\n           \\n          \\n            ] \\n           \\n          \\n         \\n           = \\n          \\n          \\n          \\n            R \\n           \\n          \\n            1 \\n           \\n          \\n         \\n           ( \\n          \\n         \\n           ψ \\n          \\n         \\n           ) \\n          \\n          \\n          \\n            R \\n           \\n          \\n            2 \\n           \\n          \\n         \\n           ( \\n          \\n         \\n           θ \\n          \\n         \\n           ) \\n          \\n          \\n          \\n            R \\n           \\n          \\n            3 \\n           \\n          \\n         \\n           ( \\n          \\n         \\n           ϕ \\n          \\n         \\n           ) \\n          \\n          \\n          \\n            [ \\n           \\n           \\n            \\n             \\n              \\n              \\n                X \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                Y \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                Z \\n               \\n              \\n             \\n            \\n           \\n          \\n            ] \\n           \\n          \\n         \\n        \\n          \\\\begin{bmatrix} x\\\\\\\\ y\\\\\\\\ z \\\\end{bmatrix}= R_1(\\\\psi)R_2(\\\\theta)R_3(\\\\phi) \\\\begin{bmatrix} X\\\\\\\\Y\\\\\\\\Z \\\\end{bmatrix} \\n         \\n        \\n       \\n                \\n                 \\n               ​xyz​ \\n                \\n                 \\n               ​=R1​(ψ)R2​(θ)R3​(ϕ) \\n                \\n                 \\n               ​XYZ​ \\n                \\n                 \\n               ​我们最后要得出的是 \\n     \\n      \\n       \\n       \\n         [ \\n        \\n        \\n        \\n          ω \\n         \\n        \\n          x \\n         \\n        \\n       \\n         , \\n        \\n        \\n        \\n          ω \\n         \\n        \\n          y \\n         \\n        \\n       \\n         , \\n        \\n        \\n        \\n          ω \\n         \\n        \\n          z \\n         \\n        \\n        \\n        \\n          ] \\n         \\n        \\n          ′ \\n         \\n        \\n       \\n      \\n        [\\\\omega_x,\\\\omega_y,\\\\omega_z]' \\n       \\n      \\n    [ωx​,ωy​,ωz​]′与 \\n     \\n      \\n       \\n       \\n         [ \\n        \\n        \\n        \\n          ϕ \\n         \\n        \\n          ˙ \\n         \\n        \\n       \\n         , \\n        \\n        \\n        \\n          θ \\n         \\n        \\n          ˙ \\n         \\n        \\n       \\n         , \\n        \\n        \\n        \\n          ψ \\n         \\n        \\n          ˙ \\n         \\n        \\n        \\n        \\n          ] \\n         \\n        \\n          ′ \\n         \\n        \\n       \\n      \\n        [\\\\dot{\\\\phi},\\\\dot{\\\\theta},\\\\dot{\\\\psi}]' \\n       \\n      \\n    [ϕ˙​,θ˙,ψ˙​]′,之间的关系，由于 \\n     \\n      \\n       \\n       \\n         ω \\n        \\n       \\n      \\n        \\\\omega \\n       \\n      \\n    ω通常是陀螺仪测得的，其在本体系下分解，因此将其全部转换至本体系，  \\n      \\n       \\n        \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n              \\n              \\n                ω \\n               \\n              \\n                x \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                ω \\n               \\n              \\n                y \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                ω \\n               \\n              \\n                z \\n               \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n        \\n          = \\n         \\n        \\n          A \\n         \\n         \\n         \\n           i \\n          \\n         \\n           ⃗ \\n          \\n         \\n        \\n          + \\n         \\n        \\n          B \\n         \\n         \\n         \\n           j \\n          \\n         \\n           ⃗ \\n          \\n         \\n        \\n          + \\n         \\n        \\n          C \\n         \\n         \\n         \\n           k \\n          \\n         \\n           ⃗ \\n          \\n         \\n        \\n       \\n         \\\\begin{bmatrix} \\\\omega_x\\\\\\\\\\\\omega_y\\\\\\\\\\\\omega_z \\\\end{bmatrix}= A\\\\vec{i}+B\\\\vec{j}+C\\\\vec{k} \\n        \\n       \\n      \\n               \\n                \\n              ​ωx​ωy​ωz​​ \\n               \\n                \\n              ​=Ai \\n              \\n               \\n             +Bj \\n              \\n               \\n             ​+Ck \\n              \\n               \\n             因此，将每一步旋转过程中出现的欧拉角速度向量，都要转化为最终在本体系下的分量。假设，惯性系为 \\n     \\n      \\n       \\n       \\n         ( \\n        \\n        \\n        \\n          I \\n         \\n        \\n          ⃗ \\n         \\n        \\n       \\n         , \\n        \\n        \\n        \\n          J \\n         \\n        \\n          ⃗ \\n         \\n        \\n       \\n         , \\n        \\n        \\n        \\n          K \\n         \\n        \\n          ⃗ \\n         \\n        \\n       \\n         ) \\n        \\n       \\n      \\n        (\\\\vec{I},\\\\vec{J},\\\\vec{K}) \\n       \\n      \\n    (I \\n             \\n              \\n            ,J \\n             \\n              \\n            ,K \\n             \\n              \\n            )，第一次旋转产生的新坐标系为 \\n     \\n      \\n       \\n       \\n         ( \\n        \\n        \\n         \\n         \\n           I \\n          \\n         \\n           ⃗ \\n          \\n         \\n        \\n          ′ \\n         \\n        \\n       \\n         , \\n        \\n        \\n         \\n         \\n           J \\n          \\n         \\n           ⃗ \\n          \\n         \\n        \\n          ′ \\n         \\n        \\n       \\n         , \\n        \\n        \\n         \\n         \\n           K \\n          \\n         \\n           ⃗ \\n          \\n         \\n        \\n          ′ \\n         \\n        \\n       \\n         ) \\n        \\n       \\n      \\n        (\\\\vec{I}',\\\\vec{J}',\\\\vec{K}') \\n       \\n      \\n    (I \\n              \\n               \\n             ′,J \\n              \\n               \\n             ′,K \\n              \\n               \\n             ′)，第二次旋转产生的新坐标系为 \\n     \\n      \\n       \\n       \\n         ( \\n        \\n        \\n         \\n         \\n           I \\n          \\n         \\n           ⃗ \\n          \\n         \\n         \\n         \\n           ′ \\n          \\n         \\n           ′ \\n          \\n         \\n        \\n       \\n         , \\n        \\n        \\n         \\n         \\n           J \\n          \\n         \\n           ⃗ \\n          \\n         \\n         \\n         \\n           ′ \\n          \\n         \\n           ′ \\n          \\n         \\n        \\n       \\n         , \\n        \\n        \\n         \\n         \\n           K \\n          \\n         \\n           ⃗ \\n          \\n         \\n         \\n         \\n           ′ \\n          \\n         \\n           ′ \\n          \\n         \\n        \\n       \\n         ) \\n        \\n       \\n      \\n        (\\\\vec{I}'',\\\\vec{J}'',\\\\vec{K}'') \\n       \\n      \\n    (I \\n              \\n               \\n             ′′,J \\n              \\n               \\n             ′′,K \\n              \\n               \\n             ′′)，第三次旋转产生的新坐标系为 \\n     \\n      \\n       \\n       \\n         ( \\n        \\n        \\n        \\n          i \\n         \\n        \\n          ⃗ \\n         \\n        \\n       \\n         , \\n        \\n        \\n        \\n          j \\n         \\n        \\n          ⃗ \\n         \\n        \\n       \\n         , \\n        \\n        \\n        \\n          k \\n         \\n        \\n          ⃗ \\n         \\n        \\n       \\n         ) \\n        \\n       \\n      \\n        (\\\\vec{i},\\\\vec{j},\\\\vec{k}) \\n       \\n      \\n    (i \\n             \\n              \\n            ,j \\n             \\n              \\n            ​,k \\n             \\n              \\n            )。从第三次旋转开始看，第三次旋转了 \\n     \\n      \\n       \\n       \\n         ψ \\n        \\n       \\n      \\n        \\\\psi \\n       \\n      \\n    ψ角度，产生的角速度向量为  \\n      \\n       \\n        \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n              \\n              \\n                i \\n               \\n              \\n                ⃗ \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                j \\n               \\n              \\n                ⃗ \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                k \\n               \\n              \\n                ⃗ \\n               \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n              \\n              \\n                ψ \\n               \\n              \\n                ˙ \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n        \\n       \\n         \\\\begin{bmatrix} \\\\vec{i}& \\\\vec{j}& \\\\vec{k} \\\\end{bmatrix} \\\\begin{bmatrix} \\\\dot{\\\\psi}\\\\\\\\0\\\\\\\\0 \\\\end{bmatrix} \\n        \\n       \\n     [i \\n                       \\n                        \\n                      ​j \\n                       \\n                        \\n                      ​​k \\n                       \\n                        \\n                      ​] \\n               \\n                \\n              ​ψ˙​00​ \\n               \\n                \\n              ​第二次旋转了 \\n     \\n      \\n       \\n       \\n         θ \\n        \\n       \\n      \\n        \\\\theta \\n       \\n      \\n    θ角度，产生的角速度向量为  \\n      \\n       \\n        \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n              \\n               \\n               \\n                 I \\n                \\n               \\n                 ⃗ \\n                \\n               \\n               \\n               \\n                 ′ \\n                \\n               \\n                 ′ \\n                \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n               \\n               \\n                 J \\n                \\n               \\n                 ⃗ \\n                \\n               \\n               \\n               \\n                 ′ \\n                \\n               \\n                 ′ \\n                \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n               \\n               \\n                 K \\n                \\n               \\n                 ⃗ \\n                \\n               \\n               \\n               \\n                 ′ \\n                \\n               \\n                 ′ \\n                \\n               \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                θ \\n               \\n              \\n                ˙ \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n        \\n          = \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n              \\n              \\n                i \\n               \\n              \\n                ⃗ \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                j \\n               \\n              \\n                ⃗ \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                k \\n               \\n              \\n                ⃗ \\n               \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n         \\n         \\n           R \\n          \\n         \\n           1 \\n          \\n         \\n        \\n          ( \\n         \\n        \\n          ψ \\n         \\n        \\n          ) \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                θ \\n               \\n              \\n                ˙ \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n        \\n       \\n         \\\\begin{bmatrix} \\\\vec{I}''&\\\\vec{J}''&\\\\vec{K}'' \\\\end{bmatrix} \\\\begin{bmatrix} 0\\\\\\\\ \\\\dot{\\\\theta}\\\\\\\\ 0\\\\\\\\ \\\\end{bmatrix}= \\\\begin{bmatrix} \\\\vec{i}& \\\\vec{j}& \\\\vec{k} \\\\end{bmatrix} R_1(\\\\psi) \\\\begin{bmatrix} 0\\\\\\\\ \\\\dot{\\\\theta}\\\\\\\\ 0\\\\\\\\ \\\\end{bmatrix} \\n        \\n       \\n     [I \\n                        \\n                         \\n                       ′′​J \\n                        \\n                         \\n                       ′′​K \\n                        \\n                         \\n                       ′′​] \\n               \\n                \\n              ​0θ˙0​ \\n               \\n                \\n              ​=[i \\n                       \\n                        \\n                      ​j \\n                       \\n                        \\n                      ​​k \\n                       \\n                        \\n                      ​]R1​(ψ) \\n               \\n                \\n              ​0θ˙0​ \\n               \\n                \\n              ​第一次旋转了 \\n     \\n      \\n       \\n       \\n         ϕ \\n        \\n       \\n      \\n        \\\\phi \\n       \\n      \\n    ϕ角度，产生的角速度向量为  \\n      \\n       \\n        \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n              \\n               \\n               \\n                 I \\n                \\n               \\n                 ⃗ \\n                \\n               \\n              \\n                ′ \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n               \\n               \\n                 J \\n                \\n               \\n                 ⃗ \\n                \\n               \\n              \\n                ′ \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n               \\n               \\n                 K \\n                \\n               \\n                 ⃗ \\n                \\n               \\n              \\n                ′ \\n               \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                ϕ \\n               \\n              \\n                ˙ \\n               \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n        \\n          = \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n              \\n              \\n                i \\n               \\n              \\n                ⃗ \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                j \\n               \\n              \\n                ⃗ \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                k \\n               \\n              \\n                ⃗ \\n               \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n         \\n         \\n           R \\n          \\n         \\n           1 \\n          \\n         \\n        \\n          ( \\n         \\n        \\n          ψ \\n         \\n        \\n          ) \\n         \\n         \\n         \\n           R \\n          \\n         \\n           2 \\n          \\n         \\n        \\n          ( \\n         \\n        \\n          θ \\n         \\n        \\n          ) \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                ϕ \\n               \\n              \\n                ˙ \\n               \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n        \\n       \\n         \\\\begin{bmatrix} \\\\vec{I}'&\\\\vec{J}'&\\\\vec{K}' \\\\end{bmatrix} \\\\begin{bmatrix} 0\\\\\\\\0\\\\\\\\\\\\dot{\\\\phi} \\\\end{bmatrix} =\\\\begin{bmatrix} \\\\vec{i}& \\\\vec{j}& \\\\vec{k} \\\\end{bmatrix} R_1(\\\\psi)R_2(\\\\theta) \\\\begin{bmatrix} 0\\\\\\\\0\\\\\\\\\\\\dot{\\\\phi} \\\\end{bmatrix} \\n        \\n       \\n     [I \\n                        \\n                         \\n                       ′​J \\n                        \\n                         \\n                       ′​K \\n                        \\n                         \\n                       ′​] \\n               \\n                \\n              ​00ϕ˙​​ \\n               \\n                \\n              ​=[i \\n                       \\n                        \\n                      ​j \\n                       \\n                        \\n                      ​​k \\n                       \\n                        \\n                      ​]R1​(ψ)R2​(θ) \\n               \\n                \\n              ​00ϕ˙​​ \\n               \\n                \\n              ​把上述三个式子相加，可得到  \\n      \\n       \\n        \\n         \\n          \\n          \\n            [ \\n           \\n           \\n            \\n             \\n              \\n               \\n               \\n                 ω \\n                \\n               \\n                 x \\n                \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n               \\n               \\n                 ω \\n                \\n               \\n                 y \\n                \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n               \\n               \\n                 ω \\n                \\n               \\n                 z \\n                \\n               \\n              \\n             \\n            \\n           \\n          \\n            ] \\n           \\n          \\n          \\n          \\n            在 \\n           \\n          \\n            i \\n           \\n          \\n            j \\n           \\n          \\n            k \\n           \\n          \\n            中表示 \\n           \\n          \\n         \\n        \\n          = \\n         \\n         \\n         \\n           R \\n          \\n         \\n           1 \\n          \\n         \\n        \\n          ( \\n         \\n        \\n          ψ \\n         \\n        \\n          ) \\n         \\n         \\n         \\n           R \\n          \\n         \\n           2 \\n          \\n         \\n        \\n          ( \\n         \\n        \\n          θ \\n         \\n        \\n          ) \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                ϕ \\n               \\n              \\n                ˙ \\n               \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n        \\n          + \\n         \\n         \\n         \\n           R \\n          \\n         \\n           1 \\n          \\n         \\n        \\n          ( \\n         \\n        \\n          ψ \\n         \\n        \\n          ) \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                θ \\n               \\n              \\n                ˙ \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n        \\n          + \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n              \\n              \\n                ψ \\n               \\n              \\n                ˙ \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n        \\n       \\n         \\\\begin{bmatrix} \\\\omega_x\\\\\\\\\\\\omega_y\\\\\\\\\\\\omega_z \\\\end{bmatrix}_{在ijk中表示}= R_1(\\\\psi)R_2(\\\\theta) \\\\begin{bmatrix} 0\\\\\\\\0\\\\\\\\\\\\dot{\\\\phi} \\\\end{bmatrix}+ R_1(\\\\psi) \\\\begin{bmatrix} 0\\\\\\\\ \\\\dot{\\\\theta}\\\\\\\\ 0\\\\\\\\ \\\\end{bmatrix}+ \\\\begin{bmatrix} \\\\dot{\\\\psi}\\\\\\\\ 0\\\\\\\\ 0\\\\\\\\ \\\\end{bmatrix} \\n        \\n       \\n      \\n                \\n                 \\n               ​ωx​ωy​ωz​​ \\n                \\n                 \\n               ​在ijk中表示​=R1​(ψ)R2​(θ) \\n               \\n                \\n              ​00ϕ˙​​ \\n               \\n                \\n              ​+R1​(ψ) \\n               \\n                \\n              ​0θ˙0​ \\n               \\n                \\n              ​+ \\n               \\n                \\n              ​ψ˙​00​ \\n               \\n                \\n              ​ 展开后，可得：  \\n      \\n       \\n        \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n              \\n              \\n                ω \\n               \\n              \\n                x \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                ω \\n               \\n              \\n                y \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                ω \\n               \\n              \\n                z \\n               \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n        \\n          = \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n             \\n               1 \\n              \\n             \\n            \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                c \\n               \\n              \\n                o \\n               \\n              \\n                s \\n               \\n              \\n                ψ \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                sin \\n               \\n              \\n                ⁡ \\n               \\n              \\n                ψ \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                − \\n               \\n              \\n                sin \\n               \\n              \\n                ⁡ \\n               \\n              \\n                ψ \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                cos \\n               \\n              \\n                ⁡ \\n               \\n              \\n                ψ \\n               \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n              \\n              \\n                cos \\n               \\n              \\n                ⁡ \\n               \\n              \\n                θ \\n               \\n              \\n             \\n            \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                − \\n               \\n              \\n                sin \\n               \\n              \\n                ⁡ \\n               \\n              \\n                θ \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n            \\n             \\n             \\n               1 \\n              \\n             \\n            \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                s \\n               \\n              \\n                i \\n               \\n              \\n                n \\n               \\n              \\n                θ \\n               \\n              \\n             \\n            \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                cos \\n               \\n              \\n                ⁡ \\n               \\n              \\n                θ \\n               \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                ϕ \\n               \\n              \\n                ˙ \\n               \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n        \\n          + \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n             \\n               1 \\n              \\n             \\n            \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                c \\n               \\n              \\n                o \\n               \\n              \\n                s \\n               \\n              \\n                ψ \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                sin \\n               \\n              \\n                ⁡ \\n               \\n              \\n                ψ \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                − \\n               \\n              \\n                sin \\n               \\n              \\n                ⁡ \\n               \\n              \\n                ψ \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                cos \\n               \\n              \\n                ⁡ \\n               \\n              \\n                ψ \\n               \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                θ \\n               \\n              \\n                ˙ \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n        \\n          + \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n             \\n               1 \\n              \\n             \\n            \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n            \\n             \\n             \\n               1 \\n              \\n             \\n            \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n            \\n             \\n             \\n               1 \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n              \\n              \\n                ψ \\n               \\n              \\n                ˙ \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n        \\n       \\n         \\\\begin{bmatrix} \\\\omega_x\\\\\\\\\\\\omega_y\\\\\\\\\\\\omega_z \\\\end{bmatrix}= \\\\begin{bmatrix} 1&0&0\\\\\\\\ 0&cos\\\\psi&\\\\sin\\\\psi\\\\\\\\ 0&-\\\\sin\\\\psi&\\\\cos\\\\psi\\\\\\\\ \\\\end{bmatrix} \\\\begin{bmatrix} \\\\cos\\\\theta&0&-\\\\sin\\\\theta\\\\\\\\ 0&1&0\\\\\\\\ sin\\\\theta&0&\\\\cos\\\\theta \\\\end{bmatrix} \\\\begin{bmatrix} 0\\\\\\\\ 0\\\\\\\\ \\\\dot{\\\\phi}\\\\\\\\ \\\\end{bmatrix}+ \\\\begin{bmatrix} 1&0&0\\\\\\\\ 0&cos\\\\psi&\\\\sin\\\\psi\\\\\\\\ 0&-\\\\sin\\\\psi&\\\\cos\\\\psi\\\\\\\\ \\\\end{bmatrix} \\\\begin{bmatrix} 0\\\\\\\\ \\\\dot{\\\\theta}\\\\\\\\ 0\\\\\\\\ \\\\end{bmatrix}+ \\\\begin{bmatrix} 1&0&0\\\\\\\\ 0&1&0\\\\\\\\ 0&0&1 \\\\end{bmatrix} \\\\begin{bmatrix} \\\\dot{\\\\psi}\\\\\\\\ 0\\\\\\\\ 0\\\\\\\\ \\\\end{bmatrix} \\n        \\n       \\n      \\n               \\n                \\n              ​ωx​ωy​ωz​​ \\n               \\n                \\n              ​= \\n               \\n                \\n              ​100​0cosψ−sinψ​0sinψcosψ​ \\n               \\n                \\n              ​ \\n               \\n                \\n              ​cosθ0sinθ​010​−sinθ0cosθ​ \\n               \\n                \\n              ​ \\n               \\n                \\n              ​00ϕ˙​​ \\n               \\n                \\n              ​+ \\n               \\n                \\n              ​100​0cosψ−sinψ​0sinψcosψ​ \\n               \\n                \\n              ​ \\n               \\n                \\n              ​0θ˙0​ \\n               \\n                \\n              ​+ \\n               \\n                \\n              ​100​010​001​ \\n               \\n                \\n              ​ \\n               \\n                \\n              ​ψ˙​00​ \\n               \\n                \\n              ​最终得到  \\n      \\n       \\n        \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n              \\n              \\n                ω \\n               \\n              \\n                x \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                ω \\n               \\n              \\n                y \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                ω \\n               \\n              \\n                z \\n               \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n        \\n          = \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n             \\n               1 \\n              \\n             \\n            \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                − \\n               \\n              \\n                sin \\n               \\n              \\n                ⁡ \\n               \\n              \\n                θ \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                c \\n               \\n              \\n                o \\n               \\n              \\n                s \\n               \\n              \\n                ψ \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                cos \\n               \\n              \\n                ⁡ \\n               \\n              \\n                θ \\n               \\n              \\n                sin \\n               \\n              \\n                ⁡ \\n               \\n              \\n                ψ \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                − \\n               \\n              \\n                sin \\n               \\n              \\n                ⁡ \\n               \\n              \\n                ψ \\n               \\n              \\n             \\n            \\n            \\n             \\n              \\n              \\n                cos \\n               \\n              \\n                ⁡ \\n               \\n              \\n                θ \\n               \\n              \\n                cos \\n               \\n              \\n                ⁡ \\n               \\n              \\n                ψ \\n               \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n              \\n              \\n                ψ \\n               \\n              \\n                ˙ \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                θ \\n               \\n              \\n                ˙ \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                ϕ \\n               \\n              \\n                ˙ \\n               \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n        \\n       \\n         \\\\begin{bmatrix} \\\\omega_x\\\\\\\\\\\\omega_y\\\\\\\\\\\\omega_z \\\\end{bmatrix}= \\\\begin{bmatrix} 1&0&-\\\\sin\\\\theta\\\\\\\\ 0&cos\\\\psi&\\\\cos\\\\theta\\\\sin\\\\psi\\\\\\\\ 0&-\\\\sin\\\\psi&\\\\cos\\\\theta\\\\cos\\\\psi\\\\\\\\ \\\\end{bmatrix} \\\\begin{bmatrix} \\\\dot{\\\\psi}\\\\\\\\\\\\dot{\\\\theta}\\\\\\\\\\\\dot{\\\\phi} \\\\end{bmatrix} \\n        \\n       \\n      \\n               \\n                \\n              ​ωx​ωy​ωz​​ \\n               \\n                \\n              ​= \\n               \\n                \\n              ​100​0cosψ−sinψ​−sinθcosθsinψcosθcosψ​ \\n               \\n                \\n              ​ \\n               \\n                \\n              ​ψ˙​θ˙ϕ˙​​ \\n               \\n                \\n              ​姿态角，可以从上式解出，值得注意的是，小角度下，上式可以进一步简化为：  \\n      \\n       \\n        \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n              \\n              \\n                ω \\n               \\n              \\n                x \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                ω \\n               \\n              \\n                y \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                ω \\n               \\n              \\n                z \\n               \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n        \\n          = \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n             \\n               1 \\n              \\n             \\n            \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n            \\n             \\n             \\n               1 \\n              \\n             \\n            \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n            \\n             \\n             \\n               0 \\n              \\n             \\n            \\n            \\n             \\n             \\n               1 \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n         \\n         \\n           [ \\n          \\n          \\n           \\n            \\n             \\n              \\n              \\n                ψ \\n               \\n              \\n                ˙ \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                θ \\n               \\n              \\n                ˙ \\n               \\n              \\n             \\n            \\n           \\n           \\n            \\n             \\n              \\n              \\n                ϕ \\n               \\n              \\n                ˙ \\n               \\n              \\n             \\n            \\n           \\n          \\n         \\n           ] \\n          \\n         \\n        \\n       \\n         \\\\begin{bmatrix} \\\\omega_x\\\\\\\\\\\\omega_y\\\\\\\\\\\\omega_z \\\\end{bmatrix}= \\\\begin{bmatrix} 1&0&0\\\\\\\\ 0&1&0\\\\\\\\ 0&0&1\\\\\\\\ \\\\end{bmatrix} \\\\begin{bmatrix} \\\\dot{\\\\psi}\\\\\\\\\\\\dot{\\\\theta}\\\\\\\\\\\\dot{\\\\phi} \\\\end{bmatrix} \\n        \\n       \\n      \\n               \\n                \\n              ​ωx​ωy​ωz​​ \\n               \\n                \\n              ​= \\n               \\n                \\n              ​100​010​001​ \\n               \\n                \\n              ​ \\n               \\n                \\n              ​ψ˙​θ˙ϕ˙​​ \\n               \\n                \\n              ​ 此时角速度积分近似等于欧拉角速度积分等于欧拉角。上式解方程过于困难，因此后续引入了四元数运动学方程来进行姿态解算。无伤理解欧拉角中的“万向死锁”现象_哔哩哔哩_bilibili把一个问题想清楚并讲清楚不容易，感谢各位看官点赞！\\n                    CSDN-Ada助手: \\n                    恭喜用户写下第6篇博客，“加速度计到底测了个啥？”这个标题很吸引人，让我对博文内容产生了浓厚的兴趣。希望你能继续坚持写作，分享更多有趣的内容给读者。或许下一步你可以探讨一下其他传感器的应用，比如陀螺仪或者磁力计，让我们对这些技术有更深入的了解。期待你的下一篇作品！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您发布了第7篇博客《OpenCV安装（Ubuntu)》，内容详实且实用！希望您能继续坚持创作，分享更多关于OpenCV的知识和经验。或许接下来可以考虑写一些实际应用案例或者优化技巧，让读者更好地理解和运用OpenCV。期待您的下一篇作品！\\n                \\n                    熬夜冠军决定不再熬夜: \\n                    “在广义的卡尔曼滤波中，卡尔曼增益值应被如下定义：”\\n这里分母应该为两项相加\\n                \\n                    libera_sun: \\n                    引用「满足正态分布 P ( ω ) ∼ ( 0 , Q ) P(\\\\omega)\\\\sim(0,Q) P(ω)」\\n这个方差Q，协方差矩阵Q是一个东西吗？\\n                \\n                    libera_sun: \\n                    引用「[x1​˙​x2​˙​​][z1​z2​​]​=[0−mk​​1−mB​​][x1​x2​​]+[0」\\n“可以得到矩阵形式为：” 那个k位置写错了吧 k/m 应该是1/m,1/m应该是k/m 吧？\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。"
        ]
    },
    {
        "prompt": "更正错误\n```undefined\n :root{\r\n        --suiji:(Math.random()*100)\r\n       }\r\n       .container {\r\n           position: absolute;\r\n           top: var(--suiji);\r\n           left: 150px;\r\n           width: 100px;\r\n           height: 100px;\r\n           background: #fff;\r\n       }\n```",
        "doc": [
            "",
            "",
            "\\n        \\n    \\n                    养-乐多: \\n                    不知道为何连不上……\\n                \\n                    jackleeonlyone: \\n                    create user 'test'@'%' identified with mysql_native_password by '123456';\\ngrant all privileges on *.* to 'test'@'%';\\n-- 刷新mysql用户权限\\nflush privileges ;\\n                \\n                    Guy-Hu: \\n                    小白一枚，存储设备中盘控分离和盘控一体连接方式有什么区别，级联有什么特殊效果吗？\\n                \\n                    我要你原形毕露: \\n                    高端操作！\\n                \\n                    壮丽的雨: \\n                    感谢楼主，实测可用。\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者冰河家园你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "こんにちは！ライターのナナミです。CSS書いてますかー！WEBサイトのデザインは自由自在、でも単純に実装できないものとかもありますよね。例えば画像の上に「NEW」ってアイコンを出したり…\\n他の要素と重ねて配置してみたり…今回は、そんなレイアウトを実現できるposition:absolute;についてまとめました！この記事ではを紹介していきます。position:absolute;を理解すれば、WEBサイトのレイアウトは自由自在！ しっかり覚えていきましょう。positionは、指定した要素の配置方法を決められるプロパティです。その中で指定できる値はいくつかあり、その中の一つがabsoluteです。absoluteは絶対配置を指定する値です。絶対配置とは、数学の絶対値と同じです。今いる場所にかかわらず、原点からどれだけ離れた距離に配置されているのかを示します。つまり起点からどれだけ離れているかを指定できるようになります。デフォルトの起点はページ全体です。つまり、そのページの一番上から一番下、一番左から一番右までを基準にします。ここからどれだけ離れているかを指定することで、位置を決めることができます。ボックスを並べるよりも自由に配置できるので、レイアウトの幅が広がるのは明白ですね。指定方法はとても簡単、自由に配置したい要素にposition:absolute;を指定するだけです。HTMLCSSposition:absolute;をつけただけでは、具体的な位置の指定はできていません。位置の指定は、top、bottom、left、rightで行ないます。\\n\\n\\n\\n\\ttop要素が起点の上からどれだけ離れているかを示します\\n\\n\\n\\tbottom要素が起点の下からどれだけ離れているかを示します\\n\\n\\n\\tleft要素が起点の左からどれだけ離れているかを示します\\n\\n\\n\\tright要素が起点の右からどれだけ離れているかを示します\\n\\n\\n\\n例えば、画面の右上から50px離して配置する場合は…HTMLCSSこのように指定します。bottomやleftも同じように指定することで、自由な位置に要素を配置できます。各プロパティのリファレンスはこちら\\nleft：http://www.htmq.com/style/left.shtml\\nright：http://www.htmq.com/style/right.shtml\\ntop：http://www.htmq.com/style/top.shtml\\nbottom：http://www.htmq.com/style/bottom.shtmlpositionはabsoluteの他に、下記のような指定をすることができます。\\n\\n\\n\\n\\trelative相対配置になる値です。\\n現在配置される位置からどれだけ離れているかを指定して配置します。\\nつまり、本来配置される場所を起点として配置することができるようになります。\\n\\n\\n\\tfixed画面の絶対配置になる値です。\\nページではなく画面に表示されている領域を起点として配置できるようになります。\\n\\n\\n\\tstaticpositionを指定していない時と同じ、普通に配置するようになります\\n\\n\\n\\npositionのリファレンスはこちら\\nhttp://www.htmq.com/style/position.shtmlabsoluteの起点は、何も指定していなければページ全体になります。しかし、親要素に指定を加えることで、親要素を起点にすることができます。absoluteを指定する要素の親要素にrelativeかfixedをつけることで、親要素を起点に配置することができます。HTMLCSSサムネイルにアイコンをつけたりするときは、こちらの方がわかりやすいですね。absoluteはレイアウトを自由にできますが、その分レイアウトの崩れを招きやすい諸刃のプロパティです。特にデフォルトではページ全体を起点にしてるので、パソコンの画面サイズによってはとんでもない場所に配置されてしまう危険もあります。しかし、起点を決めておけば怖がることはありません。使う時は親要素にrelativeをつけるなど、起点をきちんと指定するようにしましょう。absoluteを使えるようになると、本当に色々なレイアウトが実現できるようになります。例をいくつか紹介しますので、参考にしてみてください。HTMLCSS画像部分にrelativeをつけて起点にし、配置しました。画像の下に文字があるよりもスッキリおしゃれな感じになりますね。HTMLCSSメインビジュアルとかで、背景を指定しつつロゴを真ん中に配置したい時ってありますよね。そんな時はこの方法、いい感じに真ん中に配置されていますね。このように位置調整のプロパティを0で指定し、margin: auto;を指定すると、親要素の中央に配置されます。この時、absoluteにする要素には幅と高さを指定する必要があるので、注意してくださいね。HTMLCSSちょっとおしゃれな枠なんかも、absoluteを使うといい感じにできちゃいます。詳細はぜひこちらの記事をご覧ください。 \\n                \\n                \\n                    \\n                    \\n                    \\n                    \\n                    【超簡単】もう悩まない！CSSのみで二重線をつける方法\\n                    更新日：2024年3月29日\\n                    \\n                \\n                \\n            \\n            とても便利なabsoluteですが、使い方にはちょっとコツがいります。ポイントを抑えておけば難しいことではないので、しっかり理解しておきましょう。absoluteを使う上で一番気をつけなければならないのは、どこを起点にどのくらいの位置に配置しているのかです。ここを意識していないと、要素があらぬ所に配置されてしまったり、WEBサイトの崩れの原因になってしまったりしてしまいます。というように、どこが起点となっているかは意識して実装するようにしましょう。absoluteは自由に配置ができて確かに便利です。でもそのレイアウト、本当にabsoluteを使うべきところでしょうか？例えば、PC版では写真、文字の順で並んでいたのを、スマホ版では上下を入れ替えたい場合。位置の調整ならば、確かにabsoluteを使って実装することは可能です。しかしこの実装では、スマホの画面幅が小さくなった時…文字と写真が被ってしまいましたね。このように、便利だからといってabsoluteを多用してしまうと、レイアウトが崩れる大きな原因となってしまいます。プロパティは適材適所、absoluteはabsoluteが向いているレイアウトの時に使うようにしましょう。WEBサイトの見栄えを整えるCSSですが、CSSだけでは好条件の案件を獲得することが難しいのが現状です。CSSと合わせてJavaScriptやPHPといったプログラミング言語も学ぶことで、更にできる事が広がりあなたの市場価値を高めることができます。もちろんCSSを学ぶことで出来ることは広がりますが、仕事獲得という面で考えるとCSSだけでは厳しい面もあります。なぜなら案件自体は多いのですが、3〜5万ほどの低単価帯が多いのです。しかし、先ほどお伝えしたJavaScriptやPHPなども扱えるとなると、仕事獲得のしやすさや単価もグッと上がります。だからこそ今CSSを学んでいる方で、更にその先に仕事獲得まで考えているのであれば、是非合わせてスキルを身に付けることをオススメ致します。でもどの言語を学べばいいんだろう……。いざプログラミング言語を選ぶとなるとこのような悩みが出てきますよね。そこで作りたいものから必要なプログラミング言語や簡易的な学習プランが分かるプログラミング診断アプリを用意しました。あなたの作りたいものにあった学習プランと必要なスキルが分かります。ぜひご利用ください。CSSに合わせて他のプログラミング言語を身に付けることをオススメしましたが、ここから他にも学ぶのは大変だし挫折しそう……。と思ってしまう方もいることでしょう。確かにCSSの習得だけでも学ぶべきことは多く大変です。そこに加えて他の言語を身に付けると考えると、難しく感じてしまいますよね。そんなあなたは弊社「侍エンジニア」を利用してみてはいかがでしょうか？弊社では、あなたの目的に合わせて専用のオーダーメイドカリキュラムを作成し、現役エンジニアの講師が専属であなたの学習をサポートします。そのため、つまづくことなく学習をすすめることができますよ。いきなり入会する必要はありません。まずは無料カウンセリングを利用して頂ければ、効率的な学習方法や今後のキャリアプランなどをご提案致します。下記ボタンより予約が可能となっているので、まずはお気軽にご相談ください。無料体験はオンラインでも受け付けております。無料体験を予約するいかがでしたか？ちょっとクセのある指定方法ですが、使いこなせるとWEBサイトのクオリティがぐんと上がります。ぜひ色々試して、素敵なサイトを作ってください！\\n\\t\\t\\t\\t\\t【プロフィール】\\r\\nDX認定取得事業者に選定されている株式会社SAMURAIのマーケティング・コミュニケーション部が運営。「質の高いIT教育を、すべての人に」をミッションに、IT・プログラミングを学び始めた初学者の方に向け記事を執筆。\\r\\n累計指導者数4万5,000名以上のプログラミングスクール「侍エンジニア」、累計登録者数1万8,000人以上のオンライン学習サービス「侍テラコヤ」で扱う教材開発のノウハウ、2013年の創業から運営で得た知見に基づき、記事の執筆だけでなく編集・監修も担当しています。\\r\\n【専門分野】\\r\\nIT/Web開発/AI・ロボット開発/インフラ開発/ゲーム開発/AI/Webデザイン\\t\\t\\t\\t未経験でも挫折しないプログラミングスクール日本最大級のサブスク型オンラインITスクール「一人で稼げる」スキルを身につける\\n\\t\\t\\t\\t©\\n\\t\\t\\t\\t2023 SAMURAI, Inc. All Rights Reserved.\\t\\t\\t"
        ]
    },
    {
        "prompt": "Composer is operating significantly slower than normal because you do not have the PHP curl extension enabled.\nLoading composer repositories with package information\n",
        "doc": [
            "最近有很多网友反映在登录chatGPT时遇到了报错：Oops! You do not have an account because it has been deleted or deactivated 如下图所示根据笔者的经验出现这个问题基本可以认定是两个方面的问题1. 账号真的被封了一种可能性就是账号被封掉了。最近出现这个被封的很多都是开通了GPT4.0的会员账号，笔者认为这可能跟你平时试用时登录的IP地址有关系，有些ip被滥用了，注册或登录人数过多，而被牵连，另一种可能性是升级所使用的信用卡可能被openAI发觉不是正常实体卡，而导致的封号，这两种可能性都是笔者根据经验的猜测。2.ip问题导致的报错使用被滥用的ip地址可能也会出现这个报错提示，其实账号并不是真正被封了。ip问题同样可能会出现这个报错提示，需要更换高质量的ip地址，这里笔者推荐GPT 专线： usip.top 这是US原生IP地址可以有效避免因IP问题导致的报错。如何判断账号是真被封还是ip问题？可以看你的账号邮箱，如果你的账号邮箱收到了这份邮件的话，就是账号被封了！账号被封了怎么办？不要相信也不要指望真的可以通过写申述信，恢复账号。如果你这样去做了就像针掉进了大海根本没用，只能重新注册或者购买（usip.top）,然后就是在之后的使用过程中要注册，尤其是一定要使用高质量的ip地址，这样可以一定程序防止账号再次被封停。以上是一些个人经验，希望可以帮助到您！",
            "  前言：最近项目中要调用第三方接口，看到网上很多都使用curl，但刚开始，php很多的知识都不是很熟悉。为了使用curl_init()等函数，从安装php的扩展curl开始踩了很多坑。对于环境安装真的是比较头疼的事情，往往可能因为一些小问题而不成功，而且按照网上乱七八糟的博客说的做，真的一点用都没有，特此记录一下，提醒一下其他人，也希望以后的编程生涯中尽量少犯这种错误。 首先给出环境： php version：7.2.27 os：windows10 服务器：Apache2.4php的配置文件为php.ini，往往就在安装目录下。在php.ini中，将注释符号“;”去掉，这里的php_curl.dll位于extension_dir定义的目录下，且该目录可以自己修改。  然后就是网上各种乱七八糟的教程了，比如要将libeay32.dll 和 ssleay32.dll,libssh2.dll（php7中根本没有）复制到Apache的bin目录下的，或是复制libcrypto-1_1-x64.dll和libssl-1_1-x64.dll，又或是需要在httpd.conf中加入LoadFile等语句的，这样胡乱弄下来，废了几个小时，而且还不成功，心态差点崩了。（我怎么这么菜，入门到放弃） 然后回到最初搭建php的欢迎界面，因为这个界面可以看到当前php目前支持哪些扩展 然后猛然发现居然没有载入配置文件，原因：最初在Apache中配置php（httpd.conf）时，路径写成了这样，导致你无论怎么修改php安装路径下的php.ini文件都没什么用。  于是，修改后重启Apache，然后配置文件成功载入了，就可以正常使用php的curl扩展了。  最后总结：\\n        \\n    \\n                    weixin_54146196: \\n                    我也是，请问你现在解决了吗\\n                \\n                    WTcrazy _: \\n                    博主真是流弊啊，如果试了还不行的小伙伴可以重启pycharm试试\\n                \\n                    回家修理地球: \\n                    牛！！感谢大佬的指点！\\n                \\n                    weixin_48248372: \\n                    我也遇到了这个问题，使用了博主的方法后，pycharm仍然报错\\n                \\n                    开飞机的鹅: \\n                    终于解决了,感谢博主。顺便,在Run > Edit Configurations > templates > Python > Environment Variables中改 可以一劳永逸解决所有脚本的这个问题。\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "前言本文给大家详细介绍了解决php-fpm.service not found问题的相关内容，文中介绍的非常详细，下面来一起看看详细的介绍：环境介绍环境：ubuntu 16.04 64php 版本：php-7.1.4发现问题正常编译安装 php 按照以前流程，把 init.d.php-fpm 往 /etc/init.d/php-fpm 拷贝然后准备执行 service php-fpm start 时出错了错误如下提示 php-fpm.service not found一开始以为是 php 编译安装的问题，所以直接去 php 目录下执行 php-fpm ，一切正常但是就是用 service 管理不了直接查看 php-fpm 管理脚本，尝试调试，最后发现执行 service 命令时，根本没有执行到这个脚本基本排除 php 的问题解决方法最后找了一下 service 命令资料，找到解决办法在 ubuntu 16.04 中，添加服务除了需要把文件copy 到 /etc/init.d/ 目录下之外，还需要使用以下命令解决之后，发现之前单独运行了 php-fpm 现在 service 运行出现问题提示我们已经有一个 php-fpm 在运行了，由于我是用 sock 方式运行的，没有找到 pid 看了一下 php-fpm 管理脚本的代码，找到解决办法直接执行总结以上就是这篇文章的全部内容了，希望本文的内容对大家的学习或者工作能带来一定的帮助，如果有疑问大家可以留言交流，谢谢大家对我们的支持。本文通过举例,由浅入深的讲解了解决js函数闭包内存泄露问题的办法,分享给大家供大家参考,具体内容如下 原始代码: function Cars(){ this.name = \"Benz\"; this.color = [\"white\",\"black\"]; } Cars.prototype.sayColor = function(){ var outer = this; return function(){ return outer.color };目录 写在前面 STEP1:首先检查自己的pytorch版本 STEP2:下载四个小部件 STEP3:如果直接pipinstall四个文件名,会报错说找不到文件,就像这样 STEP4:开始安装 总结 写在前面 1 不能简单的直接pip install torch_geometric或者 conda install torch_geometric 2 直接安装,到后面调用的时候还是会报错.需要先安装四个小部件再安装torch_geometric STEP 1 : 首先检查自己的pytorch版本前言 本文给大家详细介绍了解决php-fpm.service not found问题的相关内容,文中介绍的非常详细,下面来一起看看详细的介绍: 环境介绍 环境:ubuntu 16.04 64 php 版本:php-7.1.4 发现问题 正常编译安装 php 按照以前流程,把 init.d.php-fpm 往 /etc/init.d/php-fpm 拷贝 然后准备执行 service php-fpm start 时出错了 错误如下 Failed to start php-fpm.service:springboot static调用service为null @PostConstruct注解好多人以为是Spring提供的.其实是Java自己的注解. Java中该注解的说明: @PostConstruct该注解被用来修饰一个非静态的void()方法.被@PostConstruct修饰的方法会在服务器加载Servlet的时候运行,并且只会被服务器执行一次.PostConstruct在构造函数之后执行,init()方法之前执行. 通常我们会是在Spring框架中使用到@PostConstruc最近网站刷新后经常出现503 Service Temporarily Unavailable错误,有时有可以,联想到最近在nginx.conf里做了单ip访问次数限制,(limit_req_zone $binary_remote_addr zone=allips:20m rate=20r/s;) 把这个数量放大后在刷新发现问题解决.(还顺便把这个改大了 limit_req zone=allips burst=50 nodelay;   )为了证实该问题,反复改动该数量测试发现问题确实在这.这个数目录 @FeignClient注入service失败 Feign注入失败之坑 错误信息 加上之后,问题解决 @FeignClient注入service失败 在入口类上方加入注解 @EnableFeignClients(basePackages = {\"com.ritoinfo.framework.evo.sp.sys.api\",\"com.yqjr.sp.eco.member\"}) 由于使用pom引入service jar包,如果不加basePackage,会找不到包最近做项目遇到一个问题,就是Vue滚动不固定,网上找了一些资料,说下 vue 固定滚动位置的处理办法. 问题描述: 通常见于 列表页List -> 详情页Detail 的情况, 从列表的某一项x 进入到详情页, 再返回的时候, 希望列表的位置固定在x, 而不是回到顶部了. vue-router 里面是有一个 scrollBehavior 的, 但是这个玩意只能在 history 模式下面使用, 而我用的 hash 模式. 所以我们要自己实现嘛, 思路简单:List 里面监听滚动, 记录滚动位置在开发web应用时,很多情况都需要进行前后台的数据交互,有时候我们可能需要把前台的中文数据通过URL的方式传递到后台,但此时有个令人头疼的问题,因为Java中网络传输使用的标准字符集是ISO-8859-1,所以在后台用request.getParameter(\"message\");获取前台传过来的中文时,得到的还是ISO-8859-1字符集,中文就会出现乱码现象,好多人的解决办法是在前台传递中文之前进行decode,后台再decode一下进行转换,这样感觉很是麻烦,难道就没其他的方式解每次开机,都会弹出一个空白记事本(但是运行msconfig启动项,又没的提示加载记事本).虽然没多大影响,但感觉肯定是有问题.我的移动硬盘(或优盘)插到USB口时,点击盘符进入时,也会弹出空白记事本.随后,瑞星注册表监控程序显示将修改为\"HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\ShellNoRoam\\\\MUICache\"里面的 \"C:\\\\windows\\\\system32\\\\wincfgs.exe\". 会在每个磁盘根目录下面ie6可以自动完成表单而升级ie7后却发现不能自动完成的兄弟可以用下面的方法解决问题(见正文后效果图): 方法1:1.打开注册表2.找到HKEY_CURRENT_USER\\\\Software\\\\Policies\\\\Microsoft\\\\Internet Explorer新建项Main3.在Main中新建字符串\"Use FormSuggest\"(不含引号)并赋值\"yes\".如果以后想关闭自动完成,或想在IE中自由设置是否启用自动完成表单功能的参见板凳. 方法2:1.打开组策略© 2024 张生荣",
            "\\n            \\n                Enjoy 2 months of free hosting with an annual WordPress plan. 30-day money-back guarantee.            \\n        PHP is one of the most-used server-side programming languages, powering about 76% of active websites. Every year, we release our in-depth performance benchmarks for various PHP frameworks to see how different PHP versions stack up against each other.In December 2023, we benchmarked PHP 8.1, 8.2, and 8.3 across 11 content management systems (CMSs) and frameworks: WordPress, WooCommerce, Drupal (versions 7 and 10), Joomla, Laravel, Symfony, CodeIgniter, Craft CMS, Typo3, Opencart, and Statamic. We also benchmarked WordPress and WooCommerce on PHP 7.4 since so many sites still run on this version.As a best practice, we recommend always using the latest PHP version for optimized performance and security.To evaluate how a CMS or framework performs against recent PHP versions, we ran benchmark tests. For consistency, we used the same machine and parameters for every tested CMS or framework.The benchmark tests in this article were performed in the following environments:PHP is well known for its extensive library of frameworks and CMSs. We considered a few aspects in choosing which to test, including:For example, WordPress keeps shining, representing 62% of the entire CMS market, with over 34 million live websites and a steep increase in usage over time.On the other hand, while Statamic has a smaller footprint on the web, with some 10,000 live sites, its steep growth and increasing popularity have drawn our attention.We also included Symfony. Although it’s been dropping in popularity over the past years compared to its previous spike, Symfony still has many active sites and a large monthly search volume.The other CMSs and frameworks we chose to benchmark met the same standards.All the CMSs and frameworks were tested with their default installation settings.Let’s take a look at the results.WordPress is an open-source CMS that makes it easy to manage important aspects of your website without knowing anything about programming. WordPress is beginner-friendly, and you don’t need to know how to code to install and maintain it, making it very attractive for anyone who’s not a programmer to start their website, blog, or web store.WordPress is behind over 42% of all live websites. Looked at another way, that’s 62% of all well-known CMSs.The open-source WordPress ecosystem is a boon to experienced programmers who want to build their applications based on a robust, flexible, and reliable platform.WordPress is also widely used as a headless backend CMS for applications built with modern frontend frameworks like React, Vue.js, and others. You can use WordPress content management capabilities with static site generators like Gatsby, Hugo, VuePress, and Next.js.And you can create a static version of your entire WordPress site to increase security and enhance performance. These contemporary approaches begin with a reliable platform for dynamic, stylish, and shiny web apps to stand out and attract visitors.WordPress 6.4.2 and 6.2.2 performance on PHP 7.4, 8.1, 8.2, and 8.3 (in requests/second).WordPress performs better with newer PHP versions. And the newer, the better. Upgrading to PHP 8.3 is a must for anyone concerned about the security and performance of their WordPress site.As an update, we benchmarked WordPress 6.4.2 as well. It outperforms its older sibling in all PHP versions. Likely 6.2.2, the results show that it performs better with newer PHP versions. The speed gain from PHP 8.2 to 8.3 is about 7%, similar to what we obtained with WordPress 6.2.2.To get the most out of WordPress, learn how to speed up your website. WordPress is well-known for its need for a good server to perform well. With Kinsta, you have the best hosting service, speed, and security and can easily manage your WordPress websites.WooCommerce is the most-used online selling platform. It helps merchants and developers build successful businesses for the long term. Holding nearly 20% of the ecommerce sites on the Internet, it is customizable, open-source, and built on WordPress. With WooCommerce, you have a safe, mature, and reliable infrastructure to sell online. Plus, you can leverage WordPress’s plugins, WP-CLI, hooks, filters, and REST API endpoints to manage your store.WooCommerce 7.9.0 performance on WordPress 6.2.2, on PHP 7.4, 8.1, 8.2, and 8.3 (in requests/second).If your WooCommerce website runs on an older version of PHP, consider upgrading as soon as possible to gain a performance boost with PHP 8.3.Laravel is an open-source PHP framework that provides web developers with tools and resources for building modern PHP web applications. Built-in features, such as a command-line interface (Artisan), native authentication, and a model-view-controller (MVC) architecture pattern, make Laravel versatile and easy to use, contributing to its increasing popularity.Laravel 10.16.1 performance on PHP 8.1, 8.2, and 8.3 (in requests/second).Laravel delivers a considerable performance increase when upgrading from PHP 8.1 to 8.2. With PHP 8.3, you gain another 38% over 8.2. Upgrading to 8.3 is a no-brainer.Drupal is a powerful and scalable CMS with great standard features, like easy content authoring, reliable performance, excellent security, flexibility, and modularity, which is one of its core principles. Its tools help you build the versatile, structured content that dynamic web experiences require.It’s a great choice for creating integrated digital frameworks, as you can extend it with many add-ons. Drupal is more of a CMS development platform than an out-of-the-box website.Drupal 7, released in 2011, persists as its most used version, so we benchmarked it along with Drupal 10, its latest and most-improved version.Drupal 7 had its end-of-life scheduled for December 2023, but that was extended until January 2025 to give users more time to migrate.Drupal 7.98 and Drupal 10.1.1 performance on PHP 8.1, 8.2, and 8.3 (in requests/second).If you are still using an older Drupal version, consider updating it for performance and security reasons beyond leveraging all the new features and any upcoming improvements. Updates between Drupal 8, 9, and 10 are considered seamless for the majority of its community. It’s worth upgrading from 7 to 8 to prepare for Drupal 10 and get it up and running quickly.From the benchmark results, it’s clear that upgrading from Drupal 7 to 10 significantly improves performance. Using PHP 8.3 with Drupal 10 gives you an extreme speed boost to satisfy your visitors and keep them engaged, making the upgrade the smartest move.Joomla is a popular open-source CMS built on a model–view–controller web application framework that can be used independently of the CMS to build online applications. It features a flexible system that is easy to extend and customize due to its large extension library. Joomla has built-in search optimization features and a great reputation for quickly releasing security patches before exploits spread.Joomla 4.3.3 performance on PHP 8.1, 8.2, and 8.3 (in requests/second).In our tests, PHP 8.1 and 8.2 benchmarks for Joomla didn’t vary significantly. On the other hand, with PHP 8.3, we saw an uplift of nearly 30%, making 8.3 the smartest choice for running your site.Symfony is a rich, flexible backend framework for complex applications. Its MVC architecture provides tools and features specifically designed for building systematic and scalable PHP web applications, including support for multiple environments and a robust caching system.It’s popular among the open-source community and is well-supplied with a large library of components and bundles. For long-term business goals and vast audience-capturing websites, Symfony is a great choice.Symfony 6.3.0 performance on PHP 8.1, 8.2, and 8.3 (in requests/second).Symfony is fast by nature. In our tests, PHP 8.1 and 8.2 performed similarly, but 8.3 shone above all of them.CodeIgniter is a PHP framework built for developers who need a simple toolkit to create full-featured web applications. It takes the MVC approach to nurture simplicity. With a minimal footprint for a core system that requires only a few small libraries, its default landing page outperforms all platforms and frameworks we tested. You can start small and incredibly fast and build up as you need.CodeIgniter 4.3.6 performance on PHP 8.1, 8.2, and 8.3 (in requests/second).CodeIgniter, in its default installation, is fast — very fast. PHP benchmark results for 8.1 and 8.2 were similar, with 8.2 slightly quicker than 8.1. PHP 8.3 comes in full force with a 42% performance increase, making the upgrade another no-brainer.Craft CMS is an open-source platform designed for creating marketing and e-commerce websites. The Craft philosophy is to model the CMS around your content, not the opposite. With an intuitive user interface and a completely customizable backend, Craft leverages content creation so you can spend more time producing content and less time building your site.Craft CMS 4.4.16.1 performance on PHP 8.1, 8.2, and 8.3 (in requests/second).Running on PHP 8.1 and 8.2, Craft performs similarly, but PHP 8.3 comes in again to boost your site performance by about 25%.OpenCart is an open-source e-commerce management platform that can handle one or multiple online stores from a single backend. With a user-friendly interface, OpenCart makes navigation easier for site administrators and end-users. The idea is that you can get an online store up and running with minimal effort and then customize it using available extensions.OpenCart 4.0.2.2 performance on PHP 8.1, 8.2, and 8.3 (in requests/second).OpenCart runs smoothly on PHP 8.1, slightly faster on 8.2, and 8.3 gives it a considerable push, inviting you to upgrade.Statamic is an open-source CMS built on top of Laravel. It’s a highly flexible framework that can store its content, templates, assets, and settings in files instead of a database, making version control a breeze. It adapts to your needs, allowing you to build up as you go. You can connect it to a database if that’s where your content is. You can export to a static site and simply do away with Laravel and PHP on the frontend.Statamic 4.13.2 performance on PHP 8.1, 8.2, and 8.3 (in requests/second).Statamic’s performance increases with each PHP minor version upgrade. With PHP 8.2, you gain about 10% in speed over 8.1. Upgrading to 8.3 gives you a boost of about 12%.Note that we installed and tested Statamic with its default configurations, and those include developer mode active. If you run it in production mode, you may expect increased performance.Typo3 is an open-source CMS built in a multi-layered system that provides an API to access information recorded in a database, such as content, user permissions and access, content editing, and file management. Typo3 can be extended with plugins, backend modules, skins, and third-party apps. It’s a robust and reliable system that can support even large sites.Typo3 12.4.4 performance on PHP 8.1, 8.2, and 8.3 (in requests/second).Typo3 performed slightly better with PHP 8.1 than with 8.2 in our tests, which was surprising. But upgrading to 8.3 is your best bet, considering outstanding performance and increased security.Created in 1994 by Rasmus Lerdorf and released to the public in 1995, PHP gained popularity for its ability to communicate with databases. Since then, PHP has gradually adopted object-oriented programming patterns, evolving into a mature, flexible, and robust modular language focused on reusability and maintainability.PHP’s extensive ecosystem of libraries and frameworks has contributed to its popularity and ease of development. The result is enhanced security and additional functionality, making PHP a reliable choice for building intelligent, dynamic, and complex web applications.PHP 7, released in December 2015, introduced significant performance improvements, resulting in the fastest and most efficient PHP major version until then. On top of that, PHP 8.0, 8.1, and 8.2 brought many new features and optimizations, as well as further improvements to consistency and performance.PHP 8.3, released in November of 2023, introduced new functions, improvements to readonly classes, additions to the recently added Randomizer class, stack overflow detection, increased performance, and much more.PHP remains the predominant programming language for web applications. It’s behind more than 76% of sites that use server-side scripting:Distribution of server-side powered web apps (W3Techs).If we look at the market positions among server-side programming languages, we see that JavaScript is popular among developers of high-traffic applications, while PHP appears on a greater number of sites.Market positions among server-side programming languages. (W3Techs)Many robust and high-traffic websites use PHP, including:For its robust construction, consistency, maintenance, and flexibility, PHP has sustained its leadership position over the years:Programming languages usage through time (W3Techs)Although PHP’s developers regularly push updates and improvements, users are sometimes apprehensive about upgrading to the latest version. That can be a mistake. The latest stable version of any application is the richest and safest to use.When PHP 8.0 was released, many in the community were uneasy about upgrading, fearing incompatibilities with its previous sibling, 7.4. In addition, many web-hosting providers simply haven’t made the effort to get their customers on board with newer releases.PHP 7.4 remains the most-adopted subversion, found behind 40% of PHP-powered sites.PHP subversion usageIf you are using an older PHP release, consider upgrading progressively, from minor-to-minor versions, and making the necessary adjustments in between. This process is less prone to errors. For instance, don’t try to upgrade from 7.4 directly to 8.3. Upgrade to 8.0 first, and make your adjustments and tests. Then, upgrade to 8.1, adjust, and test. Then, upgrade to 8.2 and, finally, to 8.3.Upgrading all the software you use regularly contributes to a faster and safer Internet.In a nutshell, most of the CMSs and frameworks tested perform better with newer PHP versions. Whenever possible, opt to run your app in the latest versions of the tech stack you use.Performance of all tested CMSs and frameworks on PHP 7.4, 8.1, 8.2, and 8.3 (in requests/second).PHP 8.3 delivers outstanding results. Besides the new features and updates, 8.3 was proven the fastest tested version in our tests, providing up to 52.20% performance boost to the tested CMSs and frameworks.Performance increase of PHP 8.3 over PHP 8.2 (%).Learn how to migrate from PHP 8.2 to 8.3 in the official migration guide.When it comes to website and application performance, everything starts with good hosting. It doesn’t matter if you invest heavily in application optimizations if your server is your bottleneck.It’s not worth paying for cheap hosting if it cannot handle big traffic spikes when you need it the most. It’s not worth having a beautiful website if it’s frequently unavailable.With Kinsta, you can host and manage all your projects on one reliable and scalable platform:Kinsta deploys your projects on infrastructure built on Google Cloud Platform’s Premium Tier Network and fastest machines. We are SOC 2 compliant. We take your security seriously with isolated container technology, two strong firewalls, and advanced Cloudflare DDoS protection. What’s more, you can integrate apps or automate workflows with the Kinsta API.What are you waiting for? Join us now!Save time and costs, plus maximize site performance, with $290+ worth of enterprise-level integrations included in every Managed WordPress plan. This includes a high-performance CDN, DDoS protection, malware and hack mitigation, edge caching, and Google’s fastest CPU machines. Get started with no long-term contracts, assisted migrations, and a 30-day money-back guarantee.Check out our plans or talk to sales to find the plan that’s right for you.I'm the Editorial Team Lead at Kinsta. I'm a open source enthusiast and I love coding. With more than 7 years of technical writing and editing for the tech industry, I love collaborating with people to create clear and concise pieces of content and improve workflows.Fast and secure WordPress, CDN & edge caching, 37 data centers, and enterprise-level features included in all plans. Not happy with your current host?Great article. Based on this data is it correct to assume that WordPress can handle requests much faster than the other content management system (not frameworks)?Well written. It helped us speed up wordpress by alot! Thanks..Thank you for the post. You’ll add also Prestashop?We will consider it for the next round!And we’ve considered it this time around. It’s live now :)Hi\\nFantastic work, what stress-testing tool do you guys use at Kinsta? (what is your recommendation)Hello Oah, I am unable to comment on internal tools, but I’ve heard Kernl is pretty popular for load testing WP sites.This is great.  Just curious if you’re going to update it now that other tools (like Drupal, etc) have had a chance to release patches.Yes, Drupal 9.1.x dropping soon in our next benchmarks.Hi there, php 8 comes now and waiting for update :)We’ve benchmarked many PHP platforms with PHP 8.0 already. Compiling all the results data as I write this. Expect the post to drop soon :)Absolutely love your data-driven blog posts! I was one of the early adopters of 8.0 on Kinsta ;) Only one issue so far with Shortpixel but they are working on a fix!Thank you for testing Kirby! May I ask why you did not include it in the final graph when it’s handling most page requests per second in your benchmarks?Great article. Is it possible to make a benchmark of all of these frameworks/tools for a single PHP version to compare their req/sec capacity?Great blog! Much better than your competitors’ blogs which rarely contain meaningful data, only “fluffy words.” Keep up the good work.Hi.\\nMaybe a little update. Joomla 3.10.2 and NEW Joomla 4.0.3 who hew a little optimization :)\\nThank you.\\nGreat test as always.Craft CMS does support php 8 since version 3.6, available over a year now. Craft CMS is currently at version 3.7.Thank you Diederik, we are working on an updated version of this benchmark post.Greetings from Sunny Australia! Unfortunately, these test results misrepresent the performance of October CMS because it is in development mode by default. For example, during the test, the entire Bootstrap framework is compiled using LESS for each page load!Please get in touch with the October CMS team via email, we would love to point you in the right direction for collecting an accurate result and a copy of October v2.0 with PHP 8.0 support.Hi Sam, thanks for stopping by and letting us know. We will start the new benchmark tests soon and we will reach out to the team.Hi, any plans to add PHP 8.1 benchmarks?Hi Oleg, we are working on this and we will publish the results by the end of the month. Make sure you follow us on this social media channels or subscribe to the newsletter to get notified. Cheers, TomHi! Thanks for publishing this benchmark.Please update the Symfony benchmark to use instead the “Welcome Page” shown after installing it (the same that you do for Laravel, CakePHP, etc.) Benchmarking the “Symfony Demo” application is confusing and unnecessary (and unfair compared to other frameworks).Thanks!Hi Javier, as noted in the article, this isn’t a framework vs framework comparison, but rather how any framework or CMS performs on various PHP versions. PHP versions are under contention here. P.S. Kudos to the Symfony team for having an easy way to set up a Demo app. We wish all the other frameworks also had such demos.The Craft CMS benchmark data below the (apparently) correct image is wrong. The image shows PHP 7.x benchmarks just above 200 req/s while the text reads below 100 req/s.Also, is it 7.3 or 7.4 that is quicker? The image and text do not agree.Great article. I just updated my sites to php 8.1. one comment: I was a little surprised to see all these CMS’s (some of them fairly obscure) but not to see ProcessWire. It’s a PHP CMS with a very active and supportive community. It’s more popular than people might think if they haven’t heard of it before.Thanks for all the benchmark testing! Very nice!I also love CodeIgniter framework. It’s a very good and an unappreciated PHP framework IMO. It’s very fast and yet very powerful.Fantastic  article thanks! Any data on how small business WordPress site speed might improve from 7.x to 8.1? Ie for metrics like Google Page Speed? I’m wondering if requests per second would really be a bottleneck for sites with perhaps 2 or 3 concurrent visitors? (at most), Love to share your quotes but felt the amazing results eg “47% faster on 8.1”  might give unrealistic expectations for our clients…Hi Nick, switching from an old 7.x version to the 8.x and seeing 30-50% improvement is not unrealistic, we have seen this many many times among our customers. Obviously, it depends on your setup, and code base but gaining a performance boost after the upgrade is almost guaranteed.Please add Silverstripe CM/S to you tests.an update with newer PHP versions? Especially 8.3?Would love to see CakePHP in there as well.Please add Vvveb CMS to your tests with page cache enabled.Hello Kinsta, great blogpost ! Please add benchmark CMS :\\n– Kirby CMS\\n– Andromede CMS\\n– PrestashopWhat is the Size param mean?Wondering why you don’t include Kirby anymore which in past years in your comparison was far ahead of all other systems in terms of PHP performance?It’s not good to delete comments.\\nCorrect the error in the graphs Symphony => SymfonyCommentName Email By submitting this form: You agree to the processing of the submitted personal data in accordance with Kinsta's Privacy Policy, including the transfer of data to the United States.You also agree to receive information from Kinsta related to our services, events, and promotions. You may unsubscribe at any time by following the instructions in the communications received. \\n\\n\\n    © 2013 - 2024 Kinsta Inc. All rights reserved.\\n    Kinsta® and WordPress® are registered trademarks.\\n    Legal information.\\n"
        ]
    },
    {
        "prompt": "分析这段代码\n```undefined\nbool MoveBase::makePlan(const geometry_msgs::PoseStamped& goal, std::vector<geometry_msgs::PoseStamped>& plan){\n    boost::unique_lock<costmap_2d::Costmap2D::mutex_t> lock(*(planner_costmap_ros_->getCostmap()->getMutex()));\n\n    //make sure to set the plan to be empty initially\n    plan.clear();\n\n    //since this gets called on handle activate\n    if(planner_costmap_ros_ == NULL) {\n      ROS_ERROR(\"Planner costmap ROS is NULL, unable to create global plan\");\n      return false;\n    }\n\n    //get the starting pose of the robot\n    geometry_msgs::PoseStamped global_pose;\n    if(!getRobotPose(global_pose, planner_costmap_ros_)) {\n      ROS_WARN(\"Unable to get starting pose of robot, unable to create global plan\");\n      return false;\n    }\n\n    const geometry_msgs::PoseStamped& start = global_pose;\n\n    //if the planner fails or returns a zero length plan, planning failed\n    if(!planner_->makePlan(start, goal, plan) || plan.empty()){\n      ROS_DEBUG_NAMED(\"move_base\",\"Failed to find a  plan to point (%.2f, %.2f)\", goal.pose.position.x, goal.pose.position.y);\n      return false;\n    }\n\n    return true;\n  }\n```",
        "doc": [
            "MoveBase的全局规划线程通过调用配置的实际全局规划器的makePlan方法来计算全局路径规划。基类是class BaseGlobalPlanner（navigation-kinetic\\\\nav_core\\\\include\\\\nav_core\\\\ base_global_planner.h）， 具体的全局规划器需要继承此基类。 例如，GlobalPlanner就继承此基类，并实现相应的方法。class GlobalPlanner : public nav_core::BaseGlobalPlanner(navigation-kinetic\\\\global_planner\\\\include\\\\global_planner\\\\planner_core.h)ROS可用的全局规划器有navfn/NavfnROS，global_planner/GlobalPlanner 和carrot_planner。类图如下图所示：这里主要分析GlobalPlanner全局规划器。在4.2.0节中已经介绍了创建和初始化global planner的过程。它是在MoveBase的构造函数中创建和初始化。如下:      boost::shared_ptr<nav_core::BaseGlobalPlanner> planner_;      planner_ = bgp_loader_.createInstance(global_planner);                                             //使用的planner为 global_planner/GlobalPlanner      planner_->initialize(bgp_loader_.getName(global_planner), planner_costmap_ros_);                                            //加载和初始化相应的动态库/opt/ros/kinetic/lib/libglobal_planner.so4.2.3.1 GlobalPlanner initialize过程实现是在void GlobalPlanner::initialize(std::string name, costmap_2d::Costmap2DROS* costmap_ros) 函数中完成，需要costmap作为入参。initialize(name, costmap_ros->getCostmap(), costmap_ros->getGlobalFrameID());    1）保存costmap对象的指针和frameid        costmap_ = costmap;        frame_id_ = frame_id;   2）获取costmap的CellsX, CellsY即地图的长和宽      unsigned int cx = costmap->getSizeInCellsX(),                          cy = costmap->getSizeInCellsY();    3） 根据old_navfn_behavior的值设定convert_offset_                   如果old_navfn_behavior为true，convert_offset_ = 0.0                   如果old_navfn_behavior为false，convert_offset_ = 0.5          我们这里设置为false，所以convert_offset_的值为0.5    4） 根据use_quadratic的值分配计算器              PotentialCalculator* p_calc_；           我们设置为true，所以p_calc_ = new QuadraticCalculator(cx, cy);               5） 根据use_dijkstra设置最短路径算法。           如果为true，则使用地杰斯特拉算法，否则使用A Star算法           Expander* planner_;                 6）  根据use_grid_path设置路径生成器             若为true，使用网格边界，否则，使用梯度下降法。             我们设置为false，所以使用梯度下降法。              Traceback* path_maker_;                    7）发布topic和service           //发布topic /move_base/GlobalPlanner/plan           plan_pub_ = private_nh.advertise<nav_msgs::Path>(\"plan\", 1);           //发布topic /move_base/GlobalPlanner/potential           potential_pub_ = private_nh.advertise<nav_msgs::OccupancyGrid>(\"potential\", 1);           //发布service /move_base/GlobalPlanner/make_plan           make_plan_srv_ = private_nh.advertiseService(\"make_plan\", &GlobalPlanner::makePlanService, this);      4.2.3.2 makeplan的过程Global planner线程收到action server的请求后，会调用makePlan()函数做全局路径规划。最终调用的函数为：GlobalPlanner::makePlan(const geometry_msgs::PoseStamped& start, const geometry_msgs::PoseStamped& goal,                                           double tolerance, std::vector<geometry_msgs::PoseStamped>& plan)具体的工作流程为：     1)  将起点坐标和终点坐标从世界坐标系转到地图坐标系。           这里的世界坐标指的是坐标使用米为单位           地图坐标指的是将米转换为数组的下标。           怎么理解呢？           实际存储地图时，使用的是二维数组。根据地图的长和宽以及分辨率计算出二维数据的大小。           举例：地图的大小为3.0X4.0米，分辨率为0.1米/像素。则实际存储地图的二维数组大小为                      30X40. 如果一个点的世界坐标为（1.0, 2.0）, 在实际二维数组中的下标就为（10, 20）            这一步就是做这个转换工作。            costmap_->worldToMap(wx, wy, start_x_i, start_y_i)             worldToMap(wx, wy, start_x, start_y)             costmap_->worldToMap(wx, wy, goal_x_i, goal_y_i)              worldToMap(wx, wy, goal_x, goal_y)      2)   将起始点的costmap标为空闲。因为机器人就在起始点，所以此点肯定没有障碍物。            clearRobotCell(start_pose, start_x_i, start_y_i);      3）重新设置相关数组的size          //make sure to resize the underlying array that Navfn uses           p_calc_->setSize(nx, ny);           planner_->setSize(nx, ny);            path_maker_->setSize(nx, ny);            potential_array_ = new float[nx * ny];     4）将costmap的所有点都标为有障碍物            outlineMap(costmap_->getCharMap(), nx, ny, costmap_2d::LETHAL_OBSTACLE);     5)   计算可用路径         bool found_legal = planner_->calculatePotentials(costmap_->getCharMap(), start_x, start_y,                                                                                        goal_x, goal_y, nx * ny * 2, potential_array_);     6)   生成路径规划          getPlanFromPotential(start_x, start_y, goal_x, goal_y, goal, plan)\\n        \\n    \\n                    一码天黑: \\n                    把不同setup.bash写进环境变量，然后删除build之类再编译\\n                \\n                    qq_39219617: \\n                    不管用那种数据库，上层都会用无远平台开发应用层，因为速度太快了\\n                \\n                    xustarhi: \\n                    感谢感谢，帮助很大\\n                \\n                    Bloomess: \\n                    博主请问，influx2.* 版本可以用这个库么\\n                \\n                    weixin_46027762: \\n                    博主请问一下，为什么我cmake运行后会报错CMake Error at CMakeLists.txt:18 (project):\\n  Running\\n\\n   'nmake' '-?'\\n\\n  failed with:\\n\\n   系统找不到指定的文件。\\n\\n\\nCMake Error: CMAKE_CXX_COMPILER not set, after EnableLanguage\\n-- Configuring incomplete, errors occurred!\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "在planService中计算导航路径用到makePlan函数，但planner_是boost::shared_ptr<nav_core::BaseGlobalPlanner>，也就是抽象类，实际调用的函数是派生类的override函数bool GlobalPlanner::makePlan(start, goal, plan)，内容相当复杂。实际调用是重载函数makePlan(start, goal, default_tolerance_, plan);, 参数defaulttolerance在GlobalPlanner::initialize中由参数服务器的参数default_tolerance决定. 但是GlobalPlanner::makePlan实际没有处理default_tolerance参数，是Navfn::makePlan处理了。也就是说终点不合适时，GlobalPlanner不会改变全局路径终点GlobalPlanner::makePlan 重载函数如下:1234567boost::mutex::scoped_lock lock(mutex_);if (!initialized_) {    ROS_ERROR(  \"This planner has not been initialized yet, but it is being used,         please call initialize() before use\");    return false;}plan.clear();initialized_在GlobalPlanner::initialize赋值true, frame_id_实际是GlobalPlanner::initialize函数中的costmap_ros->getGlobalFrameID()计算所有的可行点123bool found_legal = planner_->calculatePotentials(costmap_->getCharMap(),       start_x, start_y, goal_x, goal_y,       nx*ny*2, potential_array_ );实现方法显然是DijkstraExpansion::calculatePotentials 和 QuadraticCalculator::calculatePotentialgetPlanFromPotential涉及到Traceback::virtual bool getPath，这是一个纯虚函数，实现有两种: class GradientPath : public Traceback(梯度路径),   class GridPath : public Traceback(栅格路径)GradientPath::getPath       // 从可行点中计算路径path核心是processPath函数，可以理解为给生成的 path 顺毛，因为A*算法规划的path只能保证路线的连续性，还要保证拐弯的角度别变得太快。  但是setMode设定模式只有在GlobalPlanner::reconfigureCB里使用参考：为ROS navigation功能包添加自定义的全局路径规划器官方wiki教程-使用自己的路径规划算法ROS插件机制",
            "Movebase使用的全局规划器默认为NavFn，默认使用Dijkstra算法，在地图上的起始点和目标点间规划出一条最优路径，供局部规划器具体导航使用。在理解这部分的过程中也参考了很多博客，NavFn的源码中实际上是有A*规划算法的函数的，但关于为什么不在NavFn中使用A*，ROS Wiki上对提问者的回答是，早期NavFn包中的A*有bug，没有处理，后来发布了global_planner，修改好了A*的部分。global_planner封装性更强，它和NavFn都是用于全局路径规划的包。 navfn_ros.cpp中定义了NavfnROS类，navfn.cpp中定义了NavFn类，ROS Navigation整个包的一个命名规则是，带有ROS后缀的类完成的是该子过程与整体和其他过程的衔接框架和数据流通，不带ROS后缀的类中完成该部分的实际工作，并作为带有ROS后缀的类的成员。本篇记录对navfn_ros.cpp中定义的NavfnROS类的阅读和理解。 这里主要对参数进行初始化，在MoveBase中首先被调用。这里先用参数传入的costmap对地图进行初始化。并对成员类NavFn初始化，这个类将完成全局规划实际计算。makePlan是在Movebase中对全局规划器调用的函数，它是NavfnROS类的重点函数，负责调用包括Navfn类成员在内的函数完成实际计算，控制着全局规划的整个流程。它的输入中最重要的是当前和目标的位置。准备工作：规划前先清理plan，等待tf，存储当前起点位置并转换到地图坐标系，并将全局costmap上起点的cell设置为FREE_SPACE。planner指向的是NavFn类，这里调用它的setNavArr函数，主要作用是给定地图的大小，创建NavFn类中使用的costarr数组（记录全局costmap信息）、potarr数组（储存各cell的Potential值）、以及x和y向的梯度数组（用于生成路径），这三个数组构成NavFn类用Dijkstra计算的主干，在NavFn类中详述。 调用setCostmap函数给全局costmap赋值。这里和上边有两部分用于保存不同格式的地图，与主体关系不大。接下来将设置NavFn类的起点和目标位置，并调用该类的calcNavFnDijkstra函数，这个函数可以完成全局路径的计算。接下来，在目标位置附近2*tolerance的矩形范围内，寻找与目标位置最近的、且不是障碍物的cell，作为全局路径实际的终点，这里调用了类内getPointPotential函数，目的是获取单点Potential值，与DBL_MAX比较，确定是否是障碍物。若成功找到实际终点best_pose，调用类内getPlanFromPotential函数，将best_pose传递给NavFn，获得最终Plan并发布。potarr数组的发布，与主体关系不大。它在makePlan中被调用，主要工作是获取NavFn类成员-potarr数组记录的对应cell的Potential值。它在makePlan中被调用，主要工作是调用了NavFn类的一些函数，设置目标、获取规划结果。下面将makePlan末尾处找到的goal附近的best_pose坐标转换到地图坐标系，并通过调用NavFn类的setStart函数传递，作为路径的实际终点，再调用NavFn类calcPath函数，完成路径计算。调用NavFn的类方法获取规划结果的坐标，填充plan之后将其发布。Neo 2020.3\\n        \\n    \\n                    shinningsmile: \\n                    麻烦博主，这些源码的网址能提供一下么？\\n                \\n                    五河1: \\n                    感觉话题太多。。不知道从何入手\\n                \\n                    偏偏这碎银几两: \\n                    从他输入的话题入手看吧，我目前是这样阅读的。\\n                \\n                    Mr___Tan: \\n                    感谢博主整理，这是我看到最不混淆概念的一篇博文了！不过还有两处疑似小错误，一是[3].2.高亮的“阶数 = 次数+1 = 次数”疑似笔误，看不懂；第二处是[5].2.图中准均匀三次B样条应该是四阶的吧，6个控制点、4阶B样条，节点向量是否应该是{0 0 0 0 1 2 3 3 3 3}，而非文中的{0 0 0 1 2 3 4 5 5 5} ？\\n                \\n                    qq_36358731: \\n                    博主你好，问下这个操作：\\ndouble vel = sqrt(2 * acc_lim_th_ * dist_left);\\n是什么原理，上面的解释是确保到达目标时速度为0\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "学习总结，如有错误欢迎指正！从程序入口开始，首先在plan_node.cpp的main函数中，初始化了全局路径规划器。在函数PlannerWithCostmap中设置了两种调用makePlan的路径：在getRobotPose函数中，通过tf_.transform(robot_pose, global_pose, global_frame_);函数，默认将机器人pose从base_link转换到map坐标系下，可通过参数设置。得到起始点和目标点传入到makePlan中。global_planner 是基类nav_core :: BaseGlobalPlanner的一个插件子类首先在构造函数中需要初始化GlobalPlanner，在initialize中对一些参数进行赋值。当调用makePlan时，首先就是判断是否已经被初始化：初始化完成之后，清除之前规划的Plan，以防万一。然后检查起点和终点是否在我们所需要的坐标系下，一般在map系下。将世界坐标系的点(map 坐标系)转换成图像坐标系(图像左下角)下的点(以像素表示)在Costmap2D和GlobalPlanner中都有实现worldToMap，其实都是一样的，在GlobalPlanner中则需要通过调用Costmap2D来获取局部地图的起始点和分辨率，而在Costmap2D则可以直接使用全局变量。old_navfn_behavior_ 作为一种旧式规划行为：现在在worldToMap所使用的convert_offset_ = 0接下来将机器人Robot所在的位置，在costmap中设置成free，当前位置不可能是一个障碍物。 即在clearRobotCell()函数中：mx，my即当前机器人位置。设置规划地图边框：outlineMap，此函数由参数outline_map_决定。  根据costmap跟起始终止点计算网格的potential，计算的算法有两种：Dijkstra和A*，具体算法便不再讨论，资料很多。 当提取到plan之后，调用getPlanFromPotential，把path转换变成geometry_msgs::PoseStamped数据类型。此时便得到所需要的路径plan，最终调用OrientationFilter平滑之后发布出去。\\n        \\n    \\n                    HCWS: \\n                    我的车高1.2m 我改了车高为什么走着走着会把前面的地面识别成障碍物呢\\n                \\n                    heart_hang: \\n                    应该是 ∑vv是奇异的吧。\\n                \\n                    MebiusX: \\n                    路径半径dis到底怎么理解呢\\n                \\n                    weixin_44877546: \\n                    9度为一个间隔，27度就会采样3条路径，左右各3条，再加上正前方0度一条即7条\\n                \\n                    weixin_51725412: \\n                    求作者是否有第一种方法的实现代码\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者秃头队长你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。"
        ]
    },
    {
        "prompt": "这是什么格式\n```plaintext\n[display]\n\nwindow/size/viewport_width=576\nwindow/size/viewport_height=324\nwindow/size/window_width_override=1152\nwindow/size/window_height_override=648\nwindow/stretch/scale=2.0\n```",
        "doc": [
            "当你在搜寻【Windows平台Qt6中UTF8与GBK文本编码互相转换】的答案时，你实际上遇到的是【Windows平台Qt6与纯C++的字符串编码转换问题】。 Qt6框架内部默认使用UTF编码，Windows文件路径默认GBK（可以通过[控制面板]-[区域]-[管理]-[更改系统区域设置]-[勾选使用Unicode UTF-8]进行更改，但是截止到当前2023年正如勾选框所说这是Beta版本功能，会导致大量使用硬编码GBK的软件无法运行）。因此Qt本身不存在UTF8与GBK转换问题，Qt应用层输入输出都是UTF8，而纯C++本身不会进行编码转换，Windows系统调用只支持GBK，Windows平台下Qt与纯C++的交互会遇到转换问题，例如打印字符串、打开文件路径等。s1和s2的右侧内容均被默认按照UTF解码保存，见下图官方文档所述，用了fromUtf8()。代码中，如果你的cpp文件是GBK编码的，那输出乱码，因为GBK编码的字符串却被Qt默认按照UTF解码了；如果你的cpp文件是UTF编码的，那输出正常的中文，因为UTF编码的字符串被Qt默认按照UTF解码，对的上。Qt支持程序员指定的非默认的编码转换，例如以下：代码做了这些操作：将文本原始字节数组按照Local(本地计算机，Windows默认GBK)的格式转码成UTF，QString再按照UTF格式进行解码，符合Qt的UTF入口要求，输出正常的中文。Qt在开放给程序员的api层面，是UTF，例如QString的toStdString()函数输出的就是UTF编码的字符串，官方文档描述见下图，自动用了toUtf8()；Qt内部直接与操作系统调用的部分，会自动toLocal操作，例如qDebug()，当它的输入为UTF编码的中文时，可以正确打印中文到只支持GBK的命令终端。 \\n        \\n    \\n                    feng未停: \\n                    点赞，通俗易懂\\n                \\n                    朴人: \\n                    是list哈\\n                \\n                    qq_43327996: \\n                    lisk不出来自己的盘有哪些阁下又如何解决\\n                \\n                    沙屁狗: \\n                    硬isp应该也是在ROM里面的吧，只不过是在比较靠后的地址，前面的程序先根据启动时boot引脚的电平来选择是直接从flash启动，还是初始化串口，进而进入你所说的硬isp来接受kflash的软isp\\n                \\n                    2301_79179237: \\n                    喜欢这种直白科普\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者朴人你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "我们认为技术Yodot Software的數據和磁盤管理解決方案对于Windows对于Mac对于Android文档Outlook影片 - (MOV/AVI)Photoshop文件压缩文件数据恢复资源文件修复资源Outlook 资源概要: 本文将帮助您修复在 Windows 10/11 和其他版本上显示错误 0xc00d36c4 的视频。 但是，修复 0xc00d36c4 错误的最快和最可靠的方法是使用 Yodot 视频修复工具。 下载并免费试用…通常，错误代码 0xc00d36c4 与 MP4 文件链接。 当用户播放 MP4 电影或视频时，用户会看到错误 0xc00d36c4。 该错误通常发生在安装新的 Windows 操作系统之后。 如果您也面临 0xc00d36c4 错误，请不要担心，本文将向您简要介绍 0xc00d36c4 错误并帮助您通过各种方法修复错误。当您尝试以不受支持的格式打开文件时，会出现错误代码 0xc00d36c4，该问题也可能是由计算机和 USB 设备之间的冲突引起的。 您可以通过使用其他播放器（如 VLC）和本文后面部分中提到的其他方法播放视频文件来解决此问题。下面列出了导致错误 0xc00d36c4 的最常见原因:有多种方法可以修复错误代码 0xc00d364，这里有一些经过尝试和测试的方法来修复此错误。每次播放视频时遇到错误 0xc00d36c4 也可能是由于 Windows Media Player 的“复制保护”功能。 因此，您需要关闭此功能以修复错误 0xc00d36c4 mp4。按照以下步骤禁用复制保护:有时将有问题的视频转换为另一种文件格式也可以修复 0xc00d36C4 错误。 确保您使用无病毒的视频转换器工具。 但是，我们建议您使用 VLC 媒体播放器来转换视频。以下是使用 VLC 媒体播放器转换视频的步骤:注意: 将媒体文件转换为 MP4 视频文件格式将是更好的选择。转换视频文件后，尝试在任何媒体播放器上播放，如果视频没有显示错误代码 0xc00d36c4，那就很好。 如果错误没有解决，那么您可以转到下一个方法。有时由于硬件冲突可能会出现错误代码0xc00d36c4，因此您需要更新显示驱动程序以解决该问题。更新显示驱动程序的步骤:重新安装 USB 控制器以修复 0xc00d36c4 错误:现在，检查视频 0xc00d364 错误是否已修复，如果错误继续显示，则继续执行下一个方法。您的计算机上可能会丢失或未安装一些支持编解码器包。 在这种情况下，您需要下载适当的编解码器来修复视频文件格式。按照以下步骤自动下载 Windows Media 编解码器:如果您无法使用上述方法修复错误代码 0xc00d36c4，则视频文件可能已损坏或损坏。 不用担心，您可以使用 Yodot 视频修复软件。视频文件格式的损坏也可能是导致 0xc00d364 错误的原因。 Yodot 视频修复是修复损坏视频的最可靠工具。 该工具旨在修复视频文件中的各种错误损坏，它支持所有视频格式，如 MP4、MOV、AVI、FLV 等。步 1: 下载并安装 Yodot Video Repair Tool.步 2: 在您的计算机上启动该工具，单击 Browse 选项并选择显示错误代码 0xc00d364 的损坏视频文件。步 3: 如果您正在修复 MOV 文件，请提供健康的参考视频文件。 如果您要修复任何其他文件格式的视频，请继续下一步。步 4: 点击 Repair 开始损坏的视频文件修复过程。步 5: 损坏的视频修复过程完成后，您可以通过单击预览修复的视频文件 Preview 选项。步 6: 将修复后的视频文件保存到所需位置 通过点击 Save 选项。通常，当您尝试播放由于不支持的编解码器或文件损坏而损坏或损坏的视频文件时，会出现 0xc00d36c4 错误代码，如上所示。 文章到此结束，希望它能帮助您解决 0xc00d364 错误。您的电子邮箱地址不会被公开。 必填项已用 * 标注评论 * 显示名称 * 电子邮箱地址 * 网站地址  在此浏览器中保存我的显示名称、邮箱地址和网站地址，以便下次评论时使用。 \\n\\n有用的链接店铺支持跟着我们",
            "本章主要介绍了在 Windows 系统下使用 Windows Subsystem for Linux 运行 Linux 环境的方法。现在大部分学校的竞赛练习环境都是构建在 Windows 系操作系统上，但是在 NOI 系列赛中，已经用上了 NOI Linux 这个 Ubuntu 操作系统的修改版。NOI 竞赛（自 2021 年 9 月 1 日）的环境要求如下。2考场环境与一般环境会有一系列差异：这有可能导致一系列的尴尬情况：为了防止考场上出现此类尴尬情况，我们必须要提前熟悉 Linux 系统的操作方法。虽然 NOI 的官网已经放出了 NOI Linux 的 ISO 镜像，虚拟机的配置较为麻烦。且由于 NOI Linux 默认自带图形界面，无法保证在低配系统上流畅运行。Windows 10 在一周年更新时推出了 Linux 子系统（WSL），在 2020 年 5 月更新中升级到了 WSL 2。截至 2020 年 6 月 1 日，WSL 已支持安装 Ubuntu、openSUSE Leap、Kali、Debian 等主流 Linux 分发版。但 WSL 并不支持 NOI 评测用的 Arbiter。适用于 Linux 的 Windows 子系统（英语：Windows Subsystem for Linux，简称 WSL）是一个为在 Windows 10、Windows 11 与 Windows Server 2019 上能够原生运行 Linux 二进制可执行文件（ELF 格式）的兼容层。WSL 可让开发人员按原样运行 GNU/Linux 环境 - 包括大多数命令行工具、实用工具和应用程序 - 且不会产生虚拟机开销。WSL 仅在 64 位 Windows 10 版本 1607 及以上、Windows 11 和 Windows Server 2019/2022 中可用。本部分适用于 Windows 10 版本 2004 及更高版本（内部版本 19041 及更高版本）或 Windows 11。如果你正在使用 2004 以下版本或你的电脑不支持虚拟化，请阅读下面的手动安装一节。如果你正在使用 1607 以下版本的 Windows 10，你的系统不支持 WSL。以管理员身份打开 Windows PowerShell（右击「开始」按钮，选择 Windows PowerShell（管理员）或 Windows 终端（管理员）)输入 wsl --install，并等待所有组件自动安装完成。期间你可能需要重启你的计算机来启用必要的 Windows 功能。安装完成后，你可以在「开始」菜单或 Windows 终端的标签页中找到你安装的发行版。接下来，请转到下面「配置分发版」一节完成其他设置。下面介绍手动安装 WSL 的步骤。如果你已经完成了自动安装，请跳过此部分。在安装适用于 WSL 的任何 Linux 分发版之前，必须在下述两种方法中选择一种，以确保启用「适用于 Linux 的 Windows 子系统」可选功能：使用命令行：以管理员身份打开 PowerShell 并运行：出现提示时，重启计算机。使用图形界面：打开「控制面板」访问「程序和功能」子菜单「打开或关闭 Windows 功能」选择「适用于 Linux 的 Windows 子系统」与「虚拟机平台」点击确定重启如果你想要使用 WSL 1, 请跳过此步骤。下载 适用于 x64 计算机的 WSL2 Linux 内核更新包 并安装。绝大部分情况下，建议使用 WSL 2。 WSL 1 与 WSL 2 的区别，请见 比较 WSL 2 和 WSL 1WSL 1 完全不支持 systemd（这意味着一些需要 systemd 的功能无法实现或需要其他替代方案）。WSL 2 已经内建对 systemd 的支持。如果需要使用 systemd，而当前运行的发行版没有配置为启用 systemd，可参考 WSL 中的高级设置配置。进入 Microsoft Store，搜索「Ubuntu」，然后选择「Ubuntu」，点击「安装」进行安装。也可打开 Ubuntu 的商店页面。Microsoft Store 的 Ubuntu 随着 Ubuntu 的更新而更新，因此内容可能会有所改变。如果想获取稳定的 Ubuntu 长期支持版，可以在 Microsoft Store 安装 Ubuntu 的 LTS 版本。本章以 Windows 自动安装的 Ubuntu 为例。打开「开始」菜单找到 Ubuntu 并启动，或使用 wsl 命令从 Windows 命令行启动。可以为 Ubuntu 创建应用程序磁贴或固定至任务栏，以在下次方便地打开。第一次运行 Ubuntu，需要完成初始化。等待一两分钟时间，系统会提示创建新的用户帐户。输入完用户名以后会提示输入密码。在 Linux 中，输入密码时屏幕上不显示文字属于正常现象。设置好帐户名和密码后，WSL 就安装完成了。初次安装好的系统不附带任何 C/C++ 编译器，需要手动配置环境。Ubuntu 默认的软件源在国外。可以换成国内的软件源以加快速度，如 清华 TUNA 的软件源。请在页面中寻找与自己系统版本相配的源（可使用 sudo lsb_release -a 查看 Ubuntu 版本）。除非你知道你在做什么，否则不要使用与自己的系统版本不匹配的源！使用以下命令更新软件和软件源：此时会进入一个设置菜单，不用管，直接回车。下一个菜单中选择 zh_CN.UTF-8 回车。之后关闭 WSL 并重启，系统就会变成中文。再依次输入下列命令，把 man 帮助页替换为中文。6可以用 man help 测试。GUIDE 的安装请参考 Debian 或 Ubuntu 下 GUIDE 的安装。这里安装的是基础 + NOI 官方要求的环境，如有需要可以用 sudo apt install <程序名> 来安装其它软件包。 若想安装其他版本可以参考 Debian 官方的 包管理手册。以下为一个示例程序：Linux 环境下可执行文件可不带扩展名，运行方式参见上方命令。如果你使用 Windows 10 19044 及以上版本或 Windows 11，则可以使用 WSL 2 提供的集成的桌面体验。该功能允许你直接安装并启动 Linux 桌面程序而无须其他配置。参见 在适用于 Linux 的 Windows 子系统上运行 Linux GUI 应用如果你使用的版本尚不支持 WSLg, 可以尝试使用以下指南开启图形界面功能。以下以 Xfce 为例。如果只想安装 Xfce，可以执行以下命令：如果除 Xfce 外想要更多的软件，可以执行以下命令：图形环境文件较大，下载解包需要一定时间。配置 xrdp：为了防止和计算机原有的远程桌面冲突，需要更换默认端口。运行命令 sudo sed 's/port=[0-9]{1,5}/port=otherport/' /etc/xrdp/xrdp.ini，其中 otherport 为其他端口（如 3390）。运行 sudo service xrdp restart，然后去开始菜单，用 localhost:otherport 来访问。进入 Ubuntu 环境，安装 xterm：退出 Ubuntu。从 Xming X Server 下载地址 下载最新的 Xming Server，然后安装：如果安装完后忘记勾选 Launch Xming，需在开始菜单里打开 Xming：之后再回到 Ubuntu，键入如下指令：如果使用了 xfce4，可以在弹出的窗口中使用如下命令激活 xfce4：运行结果如图。（在 Xming 中使用Ctrl+C就可以退出该界面。）Windows 下的硬盘被自动挂载至 Linux 环境下的 /mnt 文件夹下。 如 C 盘在 WSL 下的路径为 /mnt/c另外，也可以从文件管理器访问 WSL 目录。在安装 WSL 后，可以在资源管理器的侧边栏中发现 Linux 项，在其中可以访问所有安装的发行版中的文件。同样，也可以在资源管理器的路径或运行（Win+R）中直接输入 \\\\\\\\wsl$ 来转到 WSL 的目录。也可以直接使用诸如 \\\\\\\\wsl$\\\\Ubuntu\\\\home\\\\ 的路径访问其子文件夹。如果习惯在 Windows 环境下使用 Visual Studio Code 进行代码编辑，可以安装 VS Code 中的 Remote - WSL 插件，更方便地对 WSL 系统中的文件进行编辑。通过 Remote - WSL，可以在 Windows 下的 VS Code 界面中直接对 WSL 子系统进行操作，更加方便地编辑子系统目录下的文件、更方便地使用终端进行调试。通过在 WSL 中直接键入 code .，可以在该目录下直接唤出 Visual Studio Code，对于该目录下的文件进行编辑。同时，可以通过类似 code filename 的命令，对于指定文件进行编辑。在插件 Remote - WSL 的 Getting Started 页面，包含对于编辑操作的详细简介。同时，也可以参考 Visual Studio Code 的官方文档中关于 WSL 的内容（Remote development in WSL），这篇文章包含从 WSL 安装到配合插件使用的全流程的更详细的介绍。请确认已经完成前面 WSL1 的安装步骤。执行命令 wsl -l -v 可以看到 WSL 版本号是 1，需要执行升级，才能到 2。启用「虚拟机平台」功能使用 PowerShell 以管理员身份运行：然后 重启电脑。下载 Linux 内核更新包设置分发版版本执行命令：wsl --set-version <分发版名称> <版本号>如：将 Ubuntu 18.04 设置为 WSL 2 的命令为 wsl --set-version Ubuntu-18.04 2这一步比较耗时，执行完成后通过命令 wsl -l -v 来检查升级是否成功。参见：常见问题，WSL 2 常见问题解答如何在子系统下进行 xxx？可以用自带命令行，或者使用图形界面。 比如说 vim，在命令行中键入 man vim，会给出一份详尽的使用方法。 亦可使用 vim --help。关于命令行，可阅读 命令行对系统资源的占用量？这个系统和 Windows 10 共用 Host，所以理论上是比虚拟机占用小的。洛谷日报 #6 ↩NOI Linux 2.0 发布，将于 9 月 1 日起正式启用！ ↩安装 WSL, Microsoft Docs ↩旧版 WSL 的手动安装步骤 ↩WSL-Ubuntu 维基，ubuntu wiki ↩Ubuntu 的 man 命令帮助如何设置中文版，Frank 看庐山，2017-06-09 ↩Run Bash on Ubuntu on Windows, Mike Harsh, 2016-05-30, Windows Blog ↩",
            "     Windows自带播放软件“电影和电视”是我综合比对pc各软件后播放效果最佳软件，色彩的真实呈现（包括自然真实和导演想要的真实）以及怎么说呢，就叫他电影的音效吧，视音都是最佳的。以上结论基于不懂视频调色和插件调制的大多数观影普通人。过程中会遇见三种问题，音轨、字幕、视频格式。下面我将依次解答我在播放过程中如何解决这些困难 一、音轨 常碰见的轨道有dts、bodly audio、pcm-1和pcm-2，无法加载出声音的是dts和pcm-2。 对于DTS,在Microsoft store中下载名为DTS Sound Unbond的软件，打开激活一下dts格式就能自动加载出声音，这软件需要充钱开会员才能用，能有十五天试用期，之后的事交给tao宝。 对于PCM-2，我没能找到合适的解析工具，我的做法是转换成其他格式播放。打开格式工厂，选击音频MP3，再将视频拖进去，就可以转换音轨了。这个步骤有一个会碰到的问题是格式工厂默认转换第一号音轨，而我们需要转换的不一定在一号位置，右击选项，参考图一，进入图二画面，选择pcm-2所在位置，再完成转换。使用mkvtoolnix软件，将转换出的MP3文件和原视频封装，问题解决。这个mkvtoolnix用起来很简单，把视频和MP3文件放在一个文件夹，选中它们，直接拖进去，点击下方开始混流，就这样很简单几步完成。音轨以上两种问题，至此解决。 二，字幕 字幕分三种格式Srt、Ass、Hdmv sub。其中Hd格式我没碰到过问题就不谈了。字幕问题有两种，格式兼容问题和快慢进度问题。知乎有个大哥解答了格式问题，截图分享，在此感谢大哥的文章。关于快慢进度问题，打开Aegisub，点击图片红圈处，弹出窗口，调整，保存，完成。 对于字幕我再谈一个个人的看法，我不喜欢中音双轨字幕，嫌他占画面空间，打开Srtedi软件，右击全选，在点击图片处的位置就可以清除外文了三、视频格式 mkv、m2ts、mp4、avi 在Microsoft store 中安装heve插件，解决4k视频无法播放。 m2ts是直接从蓝光原盘iso文件夹中提取出的视频格式，这是除了电影院胶片外最优片源（一直想看传说中的8小时版本美国往事！！）使用电影和电视播放这类文件，大多数自动闪退，能播放的也不兼容影片自带的图形字幕。使用mkvtoolnix转换m2ts至mkv能播放出大多数m2ts格式片源，极小部分仍会出现我尚不能理解的无法播放问题。图形字幕是软件没有相对应的兼容插件，呈现效果是可以正常显示出来但字幕直到下一句对白出现前不会自动消散。我是用一个什么图形识别软件，根据图形字幕大体模样跟字幕库比对，把他们识别成txt类正常字体文件，然后能正常运行。不推荐这个字幕识别办法，出错概率大概百分之15到20，纠正挺麻烦的，我现在看片挺佛系了。以上两步百分之90电影应该都没问题了，还有些特殊情况，比如我硬盘中有赛博朋克 2077和同流者，他们显示mkv，“电影和电视”就是无法打开这两个视频文件，换个pot或者vlc都能正常播放，这情况非常少见，我不知道什么问题。 基本“电影和电视”可能出现的播放方面问题，全部解决。过程中我遇到很多麻烦，同时发现win播放器这方面的问题解答太少了，好多东西我都翻出去查老半天没能弄明白，希望我能帮助到大家！"
        ]
    },
    {
        "prompt": "在网页没有显示\n```undefined\n<template>\n  <div>\n    <p>{{ $t('hello') }}</p>\n  </div>\n\n  <button @click=\"changeLanguage('en')\">English</button>\n  <button @click=\"changeLanguage('zh')\">中文</button>\n</template>\n```",
        "doc": [
            "“这里是云端源想IT，帮你轻松学IT”嗨~ 今天的你过得还好吗？天不言而四时行，地不语而百物生。 - 2024.03.11 -在数字世界的构建中，字体不仅仅是文字的外衣，更是情感和风格的传递者。作为网页设计师和前端开发者，掌握HTML中的字体标签，能够让我们创造出更加丰富和吸引人的用户体验。今天，就让我们一起走进HTML字体标签的世界，探索它们如何让网页变得生动有趣。语法结构：<标签 属性=“值”> 内容 </标签>1、标题标签< h1> - < h6>标题标签的默认样式是自动加粗的，字体一级标题最大，六级标题最小，每个标题标签独占一行。示例：2、字体标签<font>在HTML中，最常用的字体标签非<font>莫属，虽然现代开发中更推荐使用CSS来控制字体样式，但了解它的历史仍然有其必要性。<font>标签允许我们通过color、size和face属性来改变字体的颜色、大小和类型。例如，如果我们想要显示红色Arial字体的文字，我们可以这样写：这行代码的意思是：注意：虽然标签在HTML4.01中是有效的，但在HTML5中已经被废弃，建议使用CSS来进行样式定义。3、字号大小：<font size=\"n\">字号大小在网页设计中同样重要，它直接影响着阅读体验。HTML允许我们通过<font size=\"n\">来调整字体的大小，其中“n”可以是1到7的数字。例如：运行结果：不过，现代网页设计更倾向于使用CSS来控制字号，以便更精细地调整字体大小。4、粗体标签<b>：这个标签用于将文本加粗显示，相当于英文中的bold。它不会改变字体，只是使文本看起来更粗体。<strong>：与<b>标签类似，<strong>标签也用于表示加粗的文本。但在HTML5中，<strong>标签被赋予了语义，用来表示重要的文本内容。5、斜体字标签<i>：这个标签用于将文本设置为斜体，相当于英文中的italic。<em>：与<i>标签类似，<em>标签也用于表示斜体文本。但在HTML5中，<em>标签被赋予了语义，用来表示强调的文本内容。6、删除字标签<del>：这个标签用于表示删除的文本，常用于表示不再准确或已过时的内容。比如原价与现价。运行之后是这样子的：在上述示例中，原价为100元，但已被删除，因此使用标签将其包围起来。这样，浏览器会显示删除线来表示该文本已被删除。7、文本格式化标签 < div>  < span>< div> 标签用来布局，但是一行只能放一个< div> //大盒子，块元素。如上图控制台所示（打开控制台的方式：F12）：<div>标签里面可以包含<p>标签，<p>标签，里面不可以放<div>标签。< span> 标签用来布局，一行上可以多个 < span>//小盒子，行元素。8、其它字体标签<mark>：这个标签用于突出显示文本，通常用于表示高亮的部分。<small>：这个标签用于表示小号文本，通常用于表示版权声明或法律条款等次要信息。<ins>：这个标签用于表示插入的文本，常用于表示新增的内容。<sub> 和 <sup>：这两个标签分别用于表示下标和上标文本，常用于数学公式或化学方程式中。尽管上述标签可以直接在HTML中使用，但现代网页设计越来越倾向于使用CSS来控制文本的样式，因为CSS提供了更多灵活性和控制能力。使用CSS类和样式规则可以更有效地管理网站的整体样式，并且可以更容易地适应不同设备和屏幕尺寸。因此，如果您正在学习或更新您的网页设计知识，建议学习和使用CSS来控制字体和其他文本样式，关于HTML的这些标签了解一下就可以了。字体是网页设计中不可或缺的元素，它们就像是网页的语言，传递着信息和情感。通过HTML字体标签的学习和应用，我们可以让我们的网页“字”得其乐，让每一位访问者都能享受到更加美妙的网络体验。不断探索和实践，让我们的网页在字体的世界里绽放光彩吧！我们下期再见！END文案编辑|云端学长文案配图|云端学长内容由：云端源想分享",
            "Playwright 是一个用于自动化测试和网页操作的 Python 库，它提供了对浏览器的控制和操作的功能，包括 Chromium、Firefox 和 WebKit。使用 Playwright，您可以编写自动化测试、网页截图、网页数据提取以及网页交互等任务。Playwright 具有以下特点： 跨浏览器支持： 支持多种主流浏览器，包括 Chromium、Firefox 和 WebKit。强大的 API： 提供了丰富的 API，允许您模拟用户操作、获取和修改网页内容、执行 JavaScript 等。 异步支持： 支持异步操作，可以更高效地管理并发任务。 自动等待和重试： 具有内置的自动等待和重试机制，使测试更稳定可靠。 Headless 和非 Headless 模式： 可以选择在 Headless 模式（无界面）或非 Headless 模式（有界面）下运行浏览器。交互式调试： 提供交互式调试工具，方便定位和解决问题。 社区活跃： 由微软开发并开源，拥有活跃的社区支持和更新。 Python 的 Playwright 库提供了易于使用的 API，使得在 Python 中进行网页自动化变得简单而高效。您可以使用 Playwright 来执行各种任务，包括自动化测试、网页截图、网页爬取和数据提取等。----------------------------------- Playwright 中的`page.locator()`方法用于在网页上查找和交互操作。它返回一个 Locator 对象，该对象表示匹配指定选择器及任何额外约束（例如 has_text、has_not_text、has 和 has_not）的元素集合。可以使用 Locator 对象在匹配元素上执行操作，例如点击按钮或填充表单字段。Locator 对象在执行操作之前立即解析为实际的 DOM 元素，因此如果在操作之间更改了 DOM 结构，则操作将在正确的元素上执行。 与其他用于查找元素的方法（如 query_selector_all）相比，locator 提供了更多高级功能，例如等待元素出现并检查它们是否可见。这可以使测试更加稳健和可维护。 此外，locator 允许您通过指定额外约束（例如 has_text 或 has）来缩小元素查找的范围。这在查找可能没有唯一选择器的特定元素时很有用。 总的来说，Playwright 中的 locator 方法是一个强大的工具，它允许开发人员轻松查找和与网页上的元素交互。使用 Playwright 时，建议使用 locator 查找元素。下面是 `page.locator()` 方法的详细介绍：page.locator(selector) page.locator(selector, **kwargs)### 语法    def locator(         self,         selector: str,         *,         has_text: typing.Optional[typing.Union[str, typing.Pattern[str]]] = None,         has_not_text: typing.Optional[typing.Union[str, typing.Pattern[str]]] = None,         has: typing.Optional[\"Locator\"] = None,         has_not: typing.Optional[\"Locator\"] = None     ) -> \"Locator\":        \"\"\"Page.locator### 参数方法的第一个参数是selector，它是一个字符串，用于解析DOM元素。 该方法还接受可选的参数has_text、has_not_text、has和has_not。has_text参数用于匹配包含指定文本的元素，该文本可能出现在元素的子元素或后代元素中。当传递一个字符串时，匹配是不区分大小写的，并搜索子字符串。例如，\"Playwright\"将匹配<article><div>Playwright</div></article>。has_not_text参数用于匹配不包含指定文本的元素，该文本可能出现在元素的子元素或后代元素中。当传递一个字符串时，匹配是不区分大小写的，并搜索子字符串。 has参数用于限制方法的结果，仅包含与此相对定位器匹配的元素。例如，article，它有text=Playwright匹配<article><div>Playwright</div></article>。has_not参数用于匹配不包含与内部定位器匹配的元素的元素。内部定位器查询与外部定位器匹配，而不是文档根。例如，您可以在<article><content><div>Playwright</div></content></article>中查找具有div的content。但是，查找具有article div的content将失败，因为内部定位器必须相对于外部定位器，不应使用外部定位器之外的任何元素。 请注意，外部和内部定位器必须属于同一框架。内部定位器不得包含FrameLocators。### 返回值： 一个 Locator对象(元素定位器)，可以用于查找与给定选择器匹配的元素。### 用法可以使用 `locator` 对象(`page.locator()返回值)的以下方法来查找元素：Locator是Playwright中自动等待和重试的核心部分。简而言之，Locator代表在任何时刻在页面上查找元素的方法。可以使用page.locator()方法创建一个Locator对象实例。 **方法：**- **all**: 查找所有匹配的元素。 * `first()`: 返回第一个匹配的元素。等价于 `nth(0)`。 * `last()`: 返回最后一个匹配的元素。 - **all_inner_texts**: 获取所有匹配元素的内部文本。 - **all_text_contents**: 获取所有匹配元素的文本内容。 - **and_**: 逻辑与操作符，可以与其他Locator组合使用。 - **blur**: 触发元素失焦事件。 - **bounding_box**: 获取元素的边界框。 - **check**: 选中复选框或单选框。 - **clear**: 清空输入框中的文本。 - **click**: 单击元素。 - **count**: 计算匹配的元素数量。 - **dblclick**: 双击元素。 - **dispatch_event**: 分发指定事件到元素。 - **drag_to**: 将元素拖动到指定位置。- **evaluate**: 在元素上下文中执行JavaScript代码。 - **evaluate_all**: 在所有匹配元素的上下文中执行JavaScript代码。 - **evaluate_handle**: 获取元素的JavaScript句柄。 - **fill**: 在输入框中输入文本。 - **filter**: 根据指定条件过滤匹配的元素。 - **focus**: 将焦点设置到元素。 - **frame_locator**: 在特定的iframe中查找元素。 - **get_attribute**: 获取元素的属性值。 - **get_by_alt_text**: 根据alt属性的值查找元素。 - **get_by_label**: 根据标签查找元素。 - **get_by_placeholder**: 根据placeholder属性的值查找元素。 - **get_by_role**: 根据角色查找元素。 - **get_by_test_id**: 根据测试ID查找元素。 - **get_by_text**: 根据文本内容查找元素。 - **get_by_title**: 根据标题查找元素。 - **highlight**: 在页面上突出显示匹配的元素。 - **hover**: 将鼠标悬停在元素上。- **inner_html**: 获取元素的内部HTML。 - **inner_text**: 获取元素的内部文本。 - **input_value**: 获取输入框中的值。 - **is_checked**: 检查元素是否被选中。 - **is_disabled**: 检查元素是否被禁用。 - **is_editable**: 检查元素是否可编辑。 - **is_enabled**: 检查元素是否可用。 - **is_hidden**: 检查元素是否隐藏。 - **is_visible**: 检查元素是否可见。 - **locator**: 创建新的Locator实例。- **nth**: 获取匹配元素中的第N个。 - **or_**: 逻辑或操作符，可以与其他Locator组合使用。 - **press**: 模拟按键操作。 - **press_sequentially**: 依次按下多个按键。 - **screenshot**: 对元素进行截图。 - **scroll_into_view_if_needed**: 将元素滚动到视图中。 - **select_option**: 选择下拉列表中的选项。 - **select_text**: 选择文本内容。 - **set_checked**: 设置复选框或单选框的选中状态。 - **set_input_files**: 设置输入文件的值。 - **tap**: 轻触元素。 - **text_content**: 获取元素的文本内容。 - **uncheck**: 取消选中复选框或单选框。 - **wait_for**: 等待匹配的元素出现。### 示例下面是一个使用 `page.locator()` 方法查找元素的示例： ----------------------------------------------------------- # 要输出所有匹配元素的HTML内容，包括元素本身，循环遍历元素列表，并分别获取每个元素的HTML内容。 # 以下是示例代码： # elements = await page.locator('input').all() # for element in elements: #     html_content = await element.evaluate('(element) => element.outerHTML') #     print(html_content) # 这将打印所有匹配的输入框元素的HTML内容，包括元素本身。 # JavaScript箭头函数表达式的语法比普通函数表达式更简洁。------------------ evaluate: 在元素上下文中执行JavaScript代码。 evaluate_all: 在所有匹配元素的上下文中执行JavaScript代码。 evaluate_handle: 获取元素的JavaScript句柄。 这段代码中，我们使用了 map 函数和 Array.from 来获取所有段落元素的 outerHTML 属性。同时，直接获取按钮元素的 outerHTML 属性，以便输出按钮的 HTML 元素。 type、press 和 check 方法来模拟用户与页面元素的交互操作\\n                    Cupid123456: \\n                    cursor.getoutputparams()\\n有这个方法的吗？\\n                \\n                    阿J~: \\n                    赞赞赞，你真是个小天才哦\\n                \\n                    铁松溜达py: \\n                    不了解你说的英文教材哦，我近期整理的控制图代码是我闲着没事搞着玩的；\\n                \\n                    qq_37111625: \\n                    您好，最近在学习统计过程控制，请问有邱培华老师英文教材《Introduction to Statistical Quality Control》涉及的其他控制图R代码么，谢谢\\n                \\n                    征途黯然.: \\n                    我对这篇关于估算总体标准差的极差均值估计法sigmaRd2的文章印象深刻！通过这篇文章，我更深入地了解了估算总体标准差的极差均值估计法sigmaRd2。感谢！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "解决方法非常简单：使用v-if(推荐)或v-showv-if：当 v-if 元素被触发，元素及其所包含的指令/组件都会销毁和重构思路：造成这种现象的原因是由于获取数据在页面渲染之后，因此只需要先获取数据再进行页面渲染即可举个例子：\\n                    CSDN-Ada助手: \\n                    恭喜您写了第14篇博客！看了您的文章，对PageHelper的用法有了更深入的了解，而且还附带了一个简单的前后端应用例子，让读者更容易理解。希望您能继续保持创作的热情和努力，为大家带来更多有价值的内容。下一步，建议可以考虑深入研究PageHelper的高级功能或者与其他技术的结合应用，为读者提供更丰富的学习内容。期待您的下一篇博客！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第15篇博客！标题看起来很有吸引力，内容也很实用。对于Vue3中页面已渲染但没有数据或已经获得数据却页面没有显示的问题进行了探讨，这对很多开发者来说应该是一个很有帮助的主题。希望您能继续保持创作的热情和耐心，不断分享您的经验和技巧。或许下一步可以考虑分享一些关于Vue3中其他常见问题的解决方案，或者是一些进阶的应用技巧。期待您的下一篇博客！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您发布第13篇博客！阅读了您的文章，对于数据库中数据与@select返回的主键值为null的问题有了更深入的理解。接下来，建议您可以尝试写一些解决这类问题的实际案例或者深入探讨数据库字段名与属性名不一致的影响，相信会对读者有很大帮助。期待您的下一篇作品！谢谢您的分享。\\n                \\n                    CSDN-Ada助手: \\n                    Java 技能树或许可以帮到你：https://edu.csdn.net/skill/java?utm_source=AI_act_java\\n                \\n                    CSDN-Ada助手: \\n                    非常祝贺您写了第三篇博客！标题“assignment1 svm_loss_naive中梯度部分详细解释”非常吸引人，看起来一定是一篇内容丰富的文章。您对梯度部分进行详细解释，无疑会受益匪浅的读者。我非常期待能够阅读您的博客并深入了解SVM算法中的梯度计算。\\n\\n在下一步的创作中，我建议您可以考虑进一步拓展一些相关内容，例如如何在实际应用中优化梯度计算，或者与其他机器学习算法的比较等等。当然，这只是一个建议，您的博客已经非常出色了。期待您继续创作并分享更多有价值的内容！\\n\\nCSDN 正在通过评论红包奖励优秀博客，请看红包流：https://bbs.csdn.net/?type=4&header=0&utm_source=csdn_ai_ada_blog_reply3\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "第1关：初识HTML：简单的Hello World网页制作本关的任务是编写一个简单的HTML页面，这个网页包含一个标题和一个段落。显示效果如下：为了完成你的第一个网页的制作，请大家认真阅读以下内容。HTML是一种标准化的标记语⾔，由一套标记标签(markup tag)组成。Web前端开发人员的一项主要工作就是利用HTML标签来编写⽹页，将文本、超链接、图片、语音、视频等各种内容整合起来，实现绚丽多姿的网页。下面是大家需要记住的关于HTML的一些基本描述：HTML标记标签，通常简称HTML标签；HTML文档，通常简称HTML页面、网页等；HTML5能够较好的兼容HTML之前版本，但也废弃了一些旧的HTML特性。这是一个最基本HTML页面：显示效果如下：其中：<html>、</html>，<body>，</body>，<h1>，<p>等都是HTML标签；<h1>这是一个一级标题</h1>，<p>这是第1个段落。</p>等都是HTML元素；bgcolor=\"yellow\"、align=\"center\"都是HTML元素的属性。那么HTML标记和HTML元素，到底有何区别呢？HTML元素的属性又是什么呢？HTML标签由一对尖括号、标签名，以及反斜杠组成，包括开始标签和结束标签两类：开始标签的格式：<标签名>。结束标签的格式：</标签名>。因此，<html>，<head>，<p>等都是开始标签；</html>，</head>，</p>等都是结束标签。HTML元素是由HTML开始标签、元素内容、HTML结束标签，以及各种HTML属性组成的嵌套式HTML内容单元。典型的HTML元素的格式：<标签名> 元素内容 </标签名>因此，一个HTML文档，即<html>...</html>就是一个最大的HTML元素；<head>...</head>，<p>...</p>也都是HTML元素（其中...表示两个标记之间的所有内容）。属性提供了有关HTML元素的更多的信息。HTML属性位于开始标签，其基本的结构如下：<标签名 属性名=\"属性值\"> 元素内容 </标签名>下面是关于属性的一些要点：属性在开始标签中规定；属性是以名称/值对的形式出现，比如：name=\"value\"；一个标签可以包含多个属性；HTML属性不会展现到网页上。本例中，bgcolor属性代表主体(body)部分的颜色；align属性代表对齐方向，其值有：提示：属性使用小写英文字母更加符合规范；属性值可以用双引号或单引号包含，例如： title=' 他说\"你好\" ' 这种情况，属性值如果包含双引号，那么最外层就用单引号。我们还会用到一些常用的属性，如下表所示：| 属性 | 值 | 含义 | ------------ | ----------- | class | 自定义的元素类名 | 元素的类名 | id | 自定义的元素id名 | 元素的唯一的id | style | 元素内联样式 | 元素的样式 | title | 额外信息内容 | 元素的额外信息在之后的任务中，我就会学习到以上属性。请在右侧的编辑器中的Begin - End区域内直接编辑修改HTML页面，具体要求是：在<h1></h1>标签之间输入\"Hello World\"；在<p></p>标签之间输入\"动手改变世界\"；在<h1>和<p>元素的开始标签中输入align=\"center\"；再在<body>开始标签中输入bgcolor=\"F6F3D6\"，将背景设置为浅黄色。补充完代码后，点击测评，平台会对你编写的代码进行测试，当你的结果与预期输出一致时，即为通过；为了不让生活留下遗憾和后悔，我们应该尽可能地抓住一切改变生活的机会。参考代码：第2关：HTML结构：自我简介网页任务描述 本关任务是编写一个自我简介网页，你将通过本任务理解一个HTML网页的完整结构，并了解如何让搜索引擎更好的找到你的网页。显示效果如下图所示： 为完成以上网页制作，请大家认真阅读以下相关知识。相关知识 在前两关中，我们学习了基本的HTML网页相关概念和属性。你也已经动手写过最简单的HTML网页。接下来，我们开始学习一个简单完整网页结构。它包含的主要元素，如下图所示： 我们来看如下示例：<!DOCTYPE HTML> <`HTML`>   <head>     <meta charset=\"utf-8\">     <title>自我简介</title>     <meta name=\"description\" content=\"张三的自我简介网站\">     <meta name=\"keywords\" content=\"自我简介,关键词一,关键词二,关键词三\">   </head>   <body>     <h1 align=\"center\">自我简介</h1>     <h2>简介</h2>     <p>在这里简单的描述一下你自己吧。</p>   </body> </`HTML`> 显示效果如图： 从显示效果来看，该网页似乎与我们之前所学网页没有什么不同。但这个网页更容易被搜索引擎发现。下面，我们将结合代码为大家讲解该网页完整结构和为什么更容易被搜索引擎发现。声明文档格式：DOCTYPE 首先，第一行：<!DOCTYPE HTML>声明了该文档是HTML 5的文档。因为在Web世界里，有很多各式各样的文档类型，所以我们首先需要做的便是声明该文档是HTML，以便浏览器正确显示网页。如果你想声明为HTML 4.01的文档可以这样写：<!DOCTYPE `HTML` PUBLIC \"-//W3C//DTD `HTML` 4.01 Transitional//EN\"  \"http://www.w3.org/TR/`HTML`4/loose.dtd\"> 因为本实训以HTML 5作为标准，所以统一使用第一种方式。提示：为什么与HTML4.01相比HTML 5声明中没有数字\"5\"呢？ 因为W3C认为之前的文档声明太过复杂，正好借此机会移除版本号，这样声明就更加简化；在背景知识中，你能够了解更多HTML版本的历史信息。根元素：HTML 元素 然后，<HTML>元素告知浏览器其本身是一个HTML文档。除去第一行外，其余的页面内容都应该包含在<HTML>元素中，所以它也被称为根元素。头元素：head 元素 与属性会给元素增添附加信息一样，head元素能为整个网页增添更多信息。可以用在head中的标签有<base>, <link>, <meta>, <script>, <style>, 以及 <title>。在之后的学习中，你将逐渐的了解它们。网页标题元素：title 本例网页主要内容是“自我简介”，所以title也设置为“自我简介”。 title元素的内容即网页标题，它是一个网页必需的元素之一。<title>的内容一般作为网页标签名，写法如下：<title>标题内容</title> title内容显示位置： 元信息元素：meta meta元素提供元数据信息，主要包括：页面编码；网页标题；网页描述；网页关键词。这些信息，一方面可用于告知浏览器如何展示页面，另一方面可以提供给搜索引擎检索。 因为搜索引擎会通过meta元素的name和content属性来检索页面，所以当我们加入了合适的关键字和描述内容时，页面就更容易被搜索引擎发现。编码格式：charset <meta charset=\"utf-8\"> 该行定义了浏览器解析网页文档时使用的编码方式。通常，我们使用utf-8编码以支持各国语言。描述：description 描述信息使用一句话告知搜索引擎我们网页的主要内容是什么。通常description的写法如下：<meta name=\"description\" content=\"一句话描述网页内容\"> 关键词：keywords 同理，关键词信息使用多个并行的关键词告知搜索引擎我们网页内容的关键词信息。通常keywords的写法如下：<meta name=\"keywords\" content=\"关键词一,关键词二,关键词三\"> 主体元素：body 元素 <body>元素是一个文档的主体，文档内容都包含在<body>元素中，最终呈现在网页上。编程要求 请在右侧的编辑器中的Begin - End区域内直接编辑修改HTML页面，具体要求是：在第5行中，添加title元素，内容为“自我简介”；在第7行中，完善关键词标签；修改第13行的自我简介信息和关于你自己的三个关键词。测试说明 补充完代码后，点击测评，平台会对你编写的代码进行测试，当你的结果与预期输出一致时，即为通过；生活充实的含义，应是阅历得广，明白得多，有发现的能力，有推断的方法，性情丰厚，兴趣饶富，内外合一，即知即行，等等。恭喜你完成本关，如果觉得有收获，就在下面点个赞吧！参考代码：\\n                    CSDN-Ada助手: \\n                    恭喜用户在数据库领域的学习进展顺利，第15篇博客“头歌-数据库 --SQLServer第一章 - 初识SQLServer”内容丰富，阐述清晰，让读者受益匪浅。希望用户能继续坚持创作，分享更多关于SQLServer的知识和经验。或许在下一篇博客中，可以深入介绍SQLServer的具体应用场景或者常见问题解决方案，让读者更好地理解和运用SQLServer。期待您的下一篇精彩文章！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜作者在头歌 Wed前端技术系列中发布了第16篇博客！不断学习和分享HTML基础知识是非常重要的，能够帮助更多初学者入门前端技术。接下来建议可以继续深入探讨HTML的高级用法，比如语义化标签、表单设计等方面的内容，让读者能够更全面地了解HTML的应用。期待作者更多精彩的分享，加油！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜作者第13篇博客的问世！内容涵盖了JAVA面向对象中常用类的实训，让读者能够更好地理解和运用这些知识。希望作者能够继续坚持创作，不断分享更多关于JAVA编程的经验和技巧。或许下一步可以考虑分享一些实际项目中常用的类和技巧，这样会更加贴近实际开发的需求。期待作者的更多精彩内容！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了这么精彩的一篇博客！看来您对JAVA面向对象高级知识有着深入的了解和研究。希望您能继续坚持创作，不断分享您的学习和经验，让更多的人受益。或许在下一篇博客中，您可以分享一些实际案例或者应用场景，让读者更好地理解和运用这些高级知识。期待您的下一篇作品！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第9篇博客，标题内容看起来很有深度，对于Java面向对象的封装、继承和多态有了更深入的理解。希望您能继续保持创作的热情，不断分享自己的学习心得和经验。下一步可以考虑结合实际项目或案例，深入探讨这些概念在实际开发中的应用，这样可以让读者更加直观地理解和学习。期待您的下一篇博客！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。"
        ]
    },
    {
        "prompt": "#include<stdio.h> \n#define n 100\nint num(int year){\n\t\tif(year%4==0&&year%100!=0||year%400==0\t){\n\t\t\treturn 1;\n\t\t}return 0;\n\t\t}\n\t\nint main(void){\n\tint a,b,cnt=0;\n\tint j=0;\n\tint m[n];\n\tscanf(\"%d %d\",&a,&b);\n\tfor(int i=a;i<b;i++){\n\t\tif(num(i)==1){\n\t\tcnt++;\n\t\tm[j]=i;\n\t\t}\t\n\t}\n\tprintf(\"%d\",cnt);\n\tfor(int z=0;z<j;z++){\n\t\tprintf(\"%d\",m[z]);\n\t}\n}",
        "doc": [
            "1.输入3个整数，按由小到大的顺序输出2.输入3个字符串，按由小到大的顺序输出3.输入10个整数，将其中最小的数与第1个数对换，把最大的数与最后一个数对换。写3个函数：（1）输入10个数；（2）进行处理；（3）输出10个数4.有n个整数，使前面各数顺序向后移动m个位置，最后m个数变成前面m个数，见图。写一段函数实现以上功能，在主函数中输入n个整数和输出调整后的n个数5.n个人围城一圈，顺序排号。从第1个人开始报数（从1到3的报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位6.写一个函数，求一个字符串的长度。在main函数中输入字符串，并输出其长度7.将n个数按输入时顺序的逆序排列，用函数实现8.输入一个字符串，内有数字和非数字字符，例如：A123x456 17960？ 302tab5876；将其中连续的数字作为一个整数，一次存放到一维数组a中。例如，123放在a[0]，456放在a[1]......统计共有多少个整数，并输出这些数\\n                    CSDN-Ada助手: \\n                    恭喜您写了第13篇博客，标题为“C程序设计（第五版）谭浩强---第六章 利用数组处理批量数据习题”。不断学习并分享知识是非常值得称赞的行为，希望您能继续保持创作的热情和努力。建议您在下一篇博客中可以尝试结合实际案例或者个人经验，让读者更容易理解和接受您的观点。期待您更多精彩的创作！祝您写作愉快！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第14篇博客！看到您分享关于《C程序设计（第五版）谭浩强---第八章 指针习题》的内容，我觉得您对C语言的学习和理解非常扎实。希望您能继续坚持创作，不断分享自己的学习心得和经验。下一步建议可以尝试更多实际案例分析或者展示自己解决问题的思路，这样不仅可以帮助他人更好地理解，也能够加深自己的学习收获。期待您更多的精彩内容，加油！\\n                \\n                    CSDN-Ada助手: \\n                    不知道 算法 技能树是否可以帮到你：https://edu.csdn.net/skill/algorithm?utm_source=AI_act_algorithm\\n                \\n                    CSDN-Ada助手: \\n                    不知道 算法 技能树是否可以帮到你：https://edu.csdn.net/skill/algorithm?utm_source=AI_act_algorithm\\n                \\n                    虚幻私塾: \\n                    Andrew Xiao,【语义分割】U-Net++，针不戳呀，膜拜技术大佬\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "2.我在写的时候遇到的疑问就是明明没有涉及指针，y的值缺会发生改变3.这里要注意y是全局变量，所以加1是可以的，incxy函数会影响全局变量，但是x被局部覆盖也就是局部变量的屏蔽作用，所以这里只有y加1最后真诚感谢一位19级的学长总是对我指点迷津\\n        \\n    \\n                    CSDN-Ada助手: \\n                    恭喜你这篇博客进入【CSDN每天值得看】榜单，全部的排名请看 https://bbs.csdn.net/topics/617677641。 \\n                \\n                    卢永狂拽酷炫吊康: \\n                    博主好详细，果断关注\\n                \\n                    前端VC: \\n                    靠你了\\n                \\n                    小吴有想法: \\n                    \\n                \\n                    小吴有想法: \\n                    \\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者小吴有想法你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "本题要求实现一个简单函数，能计算给定的年份和月份的天数。使得可以利用该函数，输出给定年份中每个月的天数。其中1、3、5、7、8、10、12月有31天，4、6、9、11月有30天，2月平年有28天，闰年有29天。判断闰年的条件是：能被 4 整除但不能被 100 整除，或者能被 400 整除。其中year和month是用户传入的参数，如果1≤ month≤12，该函数必须返回year年month月的天数。请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "3：请输出2000到3000之间所有的闰年：闰年（如果年份能被400整除，或者年份能被4 整除但不能被 100 整除 为闰年)4：输出1-100内所有的奇数/偶数的和（循环+条件语句)\\n            收起\\n            当前问题酬金¥ 0 \\n            (可追加 ¥500）\\n          支付方式扫码支付  \\n            支付金额\\n            15 元\\n          提供问题酬金的用户不参与问题酬金结算和分配\\n            支付即为同意\\n            《付费问题酬金结算规则》2401_83344021 上午好☀️☀️☀️️本答案参考ChatGPT-3.5对于问题3和问题4，我将按照您的要求进行回答。对于问题3，输出2000到3000之间的所有闰年，按照定义，闰年是指年份能被400整除，或者年份能被4整除但不能被100整除。具体的解决方案如下：代码实现如下：对于问题4，输出1到100内所有奇数或偶数的和，我将分别计算奇数和偶数的和，然后输出结果。具体的解决方案如下：代码实现如下：希望以上解决方案能够满足您的需求。\\n          报告相同问题？\\n        "
        ]
    },
    {
        "prompt": "wap to create doubly linked list for n no of nodes and input from user and delete the node before the node value 45 code in c++",
        "doc": [
            "Inserting a new node in a doubly linked list is very similar to inserting new node in linked list. There is a little extra work required to maintain the link of the previous node. A node can be inserted in a Doubly Linked List in four ways:To insert a new node at the beginning of the doubly list, we can use the following steps:Below is the implementation of the 5 steps to insert a node at the front of the linked list:Time Complexity: O(1)Auxiliary Space: O(1)We are given a pointer to a node as prev_node, and the new node is inserted after the given node. This can be done using the following steps:Below is the implementation of the steps to insert a node after a given node in the linked list:Time Complexity: O(1)Auxiliary Space: O(1)Let the pointer to this given node be next_node. This can be done using the following steps. Below is the implementation of the above approach.Time Complexity: O(1)Auxiliary Space: O(1)The new node is always added after the last node of the given Linked List. This can be done using the following steps:Below is the implementation of the steps to insert a node at the end of the linked list:Time Complexity: O(n)Auxiliary Space: O(1)Related Articles: ",
            "A doubly linked list (DLL) is a special type of linked list in which each node contains a pointer to the previous node as well as the next node of the linked list.Doubly Linked ListGiven below is a representation of a DLL node:Topics:Introduction:Basic Operations:Problems on Doubly Linked List:Quick Links :",
            "A linked list is a linear data structure consisting of a sequence of nodes. Unlike arrays, linked lists do not require contiguous memory allocation. Instead, each node is dynamically allocated its own memory space. Nodes are connected through references, forming the linked structure. One advantage of linked lists is that insertion and deletion of elements at the beginning of the list can be done in constant time, denoted as O(1). This efficiency stems from the ability to directly manipulate references without needing to shift elements as required in arrays. Data types in a linked list can be any of the available data types supported by a programming language.In this tutorial, you'll learn the following:head => Points to the first box in the listtail => Points to the last box in the listTo access the data in the first boxhead.data => 6To access the data in the second box, we first need to set the pointer (arrow) to point to the box. Hence we need the (next)head.next => This points to the next item on the listhead.next.data => 4To access the data in the third box, we first need to set the pointer (arrow) to point to the box. Hence we need the (next.next)head.next.next => This points to the next > next item on the listhead.next.next.data => 5A node in a linked list is an example of a self-referential structure in programming. This structure is comprised of elements called nodes, where each node contains both data and a reference to another node of the same type. This reference, often termed a 'pointer,' facilitates the creation of a chain-like structure, where nodes are interconnected, forming the linked list.The self-referential nature of nodes allows for efficient traversal and manipulation of data within the linked list. The structure can be implemented using classes or arraysIn both cases, we create a structure where each element (node) contains data and a reference (next) to another element of the same type. This creates a self-referential structure. We then link these elements together to form a data structure like a linked list. Finally, we traverse the structure to access and manipulate its elements.Unlike an array, a linked list doesn't provide constant time access to a particular index within the list. This means that if you'd like to find the nth element in the list, you'll need to traverse through to the nth element. Traversing a linked list means iterating through each node of the list until the end node is reached.We'll discuss the types under the Traversal, Memory and Complexity categories.Each node has data and a reference to the next node. Imagine taking a journey by train, where each train represents a part of your trip, and each station represents a point where you need to make a change.In this analogy:In simpler terms, a singly linked list is like a train journey with different segments, where each train (node) has the task of taking you from one station to the next until you reach your final destination. The transitions between trains are like pointers, guiding you through each segment of your journey.I wrote about constant and linear time complexity here, and we'll be using that to discuss the general time and space complexities for some common operations:Time complexity O(n), where n is the number of nodes in the list. Space complexity O(1), it doesn't require additional space proportional to the input size.Time complexity O(1), it involves updating references at the head. Space complexity O(1), it doesn't require additional space proportional to the input size.Time complexity O(n), it may require traversing the entire list to reach the end. Space complexity O(1), it doesn't require additional space proportional to the input size.Time complexity O(1), it involves updating references at the head. Space complexity O(1), constant.Time complexity O(n), it may require traversing the entire list to reach the end. Space complexity O(1), constant.In a doubly linked list, the head node typically does not have a prev reference because it is the first node and therefore has no previous node. However, the head node does have a next reference pointing to the next node in the list. Each node has data and references to both the next and previous nodes.Imagine that you have a book where each page represents a task you need to complete, just like items on your to-do list.Each page does not only contain information about the task written on it but also has connections to the pages before and after it in the book.With this in mind, you can think of a doubly linked list as a book where each page not only contains information about a task but also provides easy navigation to the tasks before and after it. The first page, similar to the head of a doubly linked list, does not have a previous reference, while the last page, similar to the tail of a doubly linked list, does not have a next referenceThe time and space complexity for this operation is the same with the singly linked list.The time and space complexity for this operation is the same with the singly linked list.Time complexity for this operation takes O(1) time. This is because you have direct access to the tail node, so you can update the references without needing to traverse the entire list. Space complexity O(1), it doesn't require additional space proportional to the input size.The time and space complexity for this operation is the same with the singly linked list.Time complexity for this operation takes O(1) time. This is because you have direct access to the tail node, so you can update the references without needing to traverse the entire list. Space complexity O(1), it doesn't require additional space proportional to the input size.A circular linked list is a type of linked list where the last node of the list points back to the first node, forming a circle or loop. This characteristic distinguishes it from a traditional linked list, where the last node typically points to null, indicating the end of the list. In a circular linked list, there is no null pointer at the end; instead, the last node points back to the first node, creating a loop structure. This looping behavior allows for continuous traversal through the list. The below image shows how a singly circular linked list works.Imagine a train line that forms a loop, with passengers boarding and exiting at various stations along the way. This loop represents a circular linked list, where each station is a node and the train continuously travels around the loop, picking up and dropping off passengers. Just like in a circular linked list, the loop ensures continuous traversal without an end point, and passengers (data) can be added or removed at any station (node).The circular linked list offers advantages in certain applications but requires careful handling of pointers and memory management to maintain its circular structure and prevent issues such as infinite loops.Time Complexity: O(n) – Since you have to traverse through all the nodes in the list to reach the end. Space Complexity: O(1) – Only a constant amount of extra space is required for a temporary variable to traverse the list.Time Complexity: O(1) – Insertion at the beginning simply involves updating the references at the head. Space Complexity: O(1) – No additional space is required.Time Complexity: O(n) – It may require traversing the entire list to reach the end where insertion needs to take place.Space Complexity: O(1) – No additional space is required.Time complexity O(1), it involves updating references at the head. Space complexity O(1), constant.Time complexity O(n), it may require traversing the entire list to reach the end.Space complexity O(1), constant.A linked list is a dynamic way to represent a list, where adding and removing items from the beginning of the list typically involves changing only a few pointers. This operation can be performed in constant time, denoted as O(1), regardless of the list's size.On the other hand, arrays are a sequential representation of a list. Adding or removing items from the beginning of the list requires shifting all subsequent elements to accommodate the change. This operation has a time complexity of O(n), where n is the number of elements in the array. Therefore, for large arrays, adding or removing items from the beginning can be relatively slow compared to linked lists.Explanation of the problem: Given the head of a sorted linked list, delete all duplicates such that each element appears only once. Return the linked list sorted as well.Code explanationGiven the deleteDuplicates method:The null safe operator (?.) used in the JS code solution is also available from PHP 8.0. This code efficiently removes duplicates from a singly-linked list by adjusting pointers and has a time complexity of O(n) and a space complexity of O(1), where n is the number of nodes in the linked list.In this article, you learned about linked list, types of linked list and a real world problem that involves solving the removal of duplicates from sorted list.Keep learning, and Happy Coding!You can find me on LinkedIn and Twitter.Experienced software engineer with a passion for developing innovative programs , well versed in technology and writing code to create systems that are reliable and user friendly. \\n    If you read this far, thank the author to show them you care. Say Thanks\\n\\n        Learn to code for free. freeCodeCamp's open source curriculum has helped more than 40,000 people get jobs as developers. Get started\\n    freeCodeCamp is a donor-supported tax-exempt 501(c)(3) charity organization (United States Federal Tax Identification Number: 82-0779546)Our mission: to help people learn to code for free. We accomplish this by creating thousands of videos, articles, and interactive coding lessons - all freely available to the public.Donations to freeCodeCamp go toward our education initiatives, and help pay for servers, services, and staff.\\n                You can make a tax-deductible donation here.\\n            ",
            "In this article, we will explore the process of creating a linked list. A linked list consists of nodes, each containing data and a reference to the next node. We will walk through the steps of defining the node structure, initializing the head of the list, creating new nodes, and linking these nodes to form the list. By the end of this article, you will have a clear understanding of how to implement a linked list.A LinkedList is a linear data structure where each element is a separate object called a node. Each node contains two fields: one for data and one for the reference to the next node. The first node is called the head. If the LinkedList is empty, the head is a null reference.A linked list is a dynamic data structure that consists of nodes. Each node contains two fields: one for storing data and the other for storing the address of the next node in the list. Here’s how you can create a linked list:First, we need to define the structure of a node in the linked list. Each node will contain some data and a pointer to the next node.The head of the list is the first node in the list. Initially, the list is empty, so the head is a null pointer.To add elements to the list, we create new nodes. Each new node should be dynamically allocated using the new keyword.After creating a new node, we can set the data field and initialize the next pointer to null.If the list is not empty, we need to traverse the list to find the last node and update its next pointer.Creating a LinkedList involves several steps: defining the Node structure, initializing the LinkedList, and implementing methods to add and traverse nodes. While the implementation can vary depending on the programming language, the fundamental concepts remain the same. Understanding these steps is crucial for anyone learning data structures and algorithms.S"
        ]
    },
    {
        "prompt": " 'NoneType' object has no attribute 'find'",
        "doc": [
            "AttributeError: ‘NoneType’ object has no attribute ‘X’ 介绍Python “AttributeError: ‘NoneType’ object has no attribute” 发生在我们尝试访问 None 值的属性时，例如 来自不返回任何内容的函数的赋值。 要解决该错误，请在访问属性之前更正分配。这是一个非常简单的示例，说明错误是如何发生的。尝试访问或设置 None 值的属性会导致错误。如果打印正在访问其属性的变量，它将为 None，因此您必须追踪变量被分配 None 值的位置并更正分配。None 值（显式赋值除外）的最常见来源是不返回任何内容的函数。请注意 ，我们的 do_math 函数没有显式返回值，因此它隐式返回 None。我们将调用函数的结果分配给一个变量，并试图访问导致错误的属性。AttributeError: ‘NoneType’ object has no attribute ‘X’ 常见原因“AttributeError: ‘NoneType’ object has no attribute” 的发生有多种原因：具有不返回任何内容的函数（隐式返回 None）。将变量显式设置为 None。将变量分配给调用不返回任何内容的内置函数的结果。具有仅在满足特定条件时才返回值的函数。一些内置方法（例如排序）会就地改变数据结构并且不返回值。 换句话说，它们隐式返回 None。sort() 方法对列表进行就地排序并且不返回任何内容，因此当我们将调用该方法的结果分配给变量时，我们为该变量分配了一个 None 值。避免使用会改变原始对象的方法进行赋值，因为它们中的大多数不返回值并隐式返回 None。如果一个变量有时存储一个真实值，有时存储 None，则可以在访问属性之前明确检查该变量是否不是 None。仅当示例变量未存储 None 值时，if 块才会运行，否则运行 else 块。错误的另一个常见原因是具有仅在满足条件时才返回值的函数。get_num 函数中的 if 语句仅在传入的参数大于 100 时运行。在所有其他情况下，该函数不返回任何内容并最终隐式返回 None。AttributeError: ‘NoneType’ object has no attribute ‘X’ 错误解决方法要解决这种情况下的错误，我们要么必须检查函数是否未返回 None，要么在不满足条件时返回默认值。现在，无论条件是否满足，函数都保证返回一个值。总结Python “AttributeError: ‘NoneType’ object has no attribute” 发生在我们尝试访问 None 值的属性时，例如 来自不返回任何内容的函数的赋值。 要解决该错误，请在访问属性之前更正分配。————————————————vb.net教程C#教程python教程原文链接：https://blog.csdn.net/fengqianlang/article/details/129674118",
            "",
            "【Python】进阶学习：判断一个对象是否是NoneType类型🌈 个人主页：高斯小哥 🔥 高质量专栏：Matplotlib之旅：零基础精通数据可视化、Python基础【高质量合集】、PyTorch零基础入门教程👈 希望得到您的订阅和支持~ 💡 创作高质量博文(平均质量分92+)，分享更多关于深度学习、PyTorch、Python领域的优质内容！（希望得到您的关注~）  在Python编程中，None是一个特殊的常量，用于表示一个空值或者没有值。NoneType则是None的类型。判断一个对象是否是NoneType类型在编程实践中经常遇到，尤其在处理函数返回值、检查变量是否初始化以及处理可选参数等方面。掌握如何判断一个对象是否是NoneType类型，对于编写健壮、可维护的代码至关重要。  在Python中，我们可以使用is操作符来判断一个对象是否是None。这是因为is操作符用于比较两个对象的身份（即它们在内存中的地址是否相同），而None是一个单例对象，因此任何与None比较的对象，如果它们实际上是同一个对象（即None本身），那么比较结果就会是True。下面是一个简单的示例：在这个例子中，我们定义了一个函数get_value_or_none，它可能在某些条件下返回None。然后我们调用这个函数，并使用is操作符来检查返回的值是否是None。  了解NoneType与其他类型的区别对于正确使用它非常重要。在Python中，None是一个特殊的常量，而NoneType是None的类型。这意味着当你创建一个变量并将其赋值为None时，这个变量的类型就是NoneType。  与其他类型相比，NoneType是一个单例类型，意味着在Python解释器中只有一个None对象。因此，比较两个变量是否都是None时，应该使用is而不是==。使用==会触发类型的比较操作，这通常是不必要的，而且可能会导致混淆。  在函数设计中，返回None通常用于表示没有有效的返回值或者操作失败。通过检查返回值是否是None，调用者可以决定如何进一步处理。下面是一个示例函数，它尝试从字典中获取一个键的值，如果该键不存在，则返回None：在这个例子中，get_value_from_dict函数使用字典的get方法来获取键的值。如果键不存在，get方法会返回None。然后我们通过is操作符检查返回值是否是None，以决定是否打印一个错误消息。  在类型注解的上下文中，Optional是一个特殊的类型，表示一个值可以是某种类型，也可以是None。下面是一个使用typing.Optional的示例：在这个例子中，我们使用了typing.Optional来注解find_user函数的返回类型。这意味着这个函数要么返回一个字典（表示找到的用户），要么返回None（表示没有找到用户）。使用Optional类型注解可以帮助我们更好地理解和维护代码，尤其是在处理可能返回None的函数时。在使用NoneType时，有几个常见的注意事项和误区需要避免：不要将None与其他值混淆：确保你清楚何时应该返回None，以及何时应该返回其他默认值或空值（如空列表或空字典）。避免使用==比较None：如前所述，应该使用is操作符来比较一个对象是否是None。使用==可能会引入不必要的类型比较，且容易导致混淆。注意链式调用：在Python中，链式调用很常见，但如果其中一个方法返回None，而你又继续在其上调用方法或属性，将会引发AttributeError。确保在链式调用之前检查None。不要过度使用None：虽然None是一个有用的工具，但过度使用它可能会使代码难以理解和维护。考虑使用更明确的默认值或异常处理来表示异常情况。  在本文中，我们深入探讨了如何判断一个对象是否是NoneType类型，以及NoneType在Python编程中的重要作用。我们学习了使用is操作符来判断None，了解了NoneType与其他类型的区别，并探讨了在实际编程中如何应用这些知识。此外，我们还讨论了使用Optional类型注解来处理可能为None的值，并提醒了一些在使用NoneType时需要注意的事项和常见误区。  掌握如何正确处理和判断NoneType类型是编写健壮、可维护的Python代码的关键之一。通过本文的学习，你应该能够更好地理解和应用这一重要的概念。希望这篇博客对你有所帮助！如果你有任何问题或想要进一步讨论，请随时留言。👇\\n        \\n    \\n                    生瓜蛋子: \\n                    博客作者真是一位出色的写手！这篇博客让我受益匪浅，语言简洁明了，逻辑严谨有序。作者不仅运用了丰富的例子和引文，为观点提供了充分的支持和验证，还以其独特的视角带给读者全新的思考。\\n                \\n                    JJJ69: \\n                    优质好文，博主的文章细节很到位，兼顾实用性和可操作性，感谢博主的分享，期待博主持续带来更多好文\\n                \\n                    图灵重生我名苏泽: \\n                    这篇博客让我对某个领域产生了浓厚的兴趣，强烈推荐给大家。并且让我想起了我这篇文章也有异曲同工之妙，欢迎前来指点我一番！我必然用心回报！：http://t.csdnimg.cn/7uAiM\\n                \\n                    是Yu欸: \\n                    这是一篇高质量的好文，深度理解和清晰的表达方式使复杂的技术概念变得容易理解，值得收藏点赞。博主用心很有耐心，更有对知识的热忱和热爱，写了这么实用有效的分享，期盼博主能够光顾我的博客，给予宝贵的指导！\\n                \\n                    空空bye: \\n                    大佬就是大佬，文章写的通俗易懂，详略得当，图文并茂，让我有了一个新的了解再次，感谢大佬不吝分享，期待大佬下一篇好文\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者高斯小哥你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "昨晚在整理自己的python脚本的时候，想把其中一个脚本中的print函数全都改成logging包中的相关函数。改完后一运行却出现了Exception AttributeError: 'NoneType' object has no attribute的错误，网上搜了一下没找到相关答案。上午再想了想，原因应该是跟python对象的析构有关，具体分析过程如下：由于原脚本业务部分过长，这里把关键的几个部位抽出来做了个演示程序。1\\n 2\\n 3\\n 4\\n 5\\n 6\\n 7\\n 8\\n 9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46# -*- coding: UTF-8 -*-\\n# File:   destrution_attribute_error_nonetype1.py\\n# Description:   python自动析构时出现Exception AttributeError: 'NoneType' object has no attribute问题的示例程序\\n# (c) 2018.12.19 vfhky https://typecodes.com/python/destrution_attribute_error_nonetype1.html\\n\\nimport threading\\nimport logging\\n\\n\\n# MYSQL 的简单封装\\nclass CMySQL:\\n    # 线程锁\\n    _instance_lock = threading.Lock()\\n\\n    # 数据库连接对象\\n    __db = None\\n    # 游标对象\\n    __cursor = None\\n\\n    def __init__(self, *args, **kwargs):\\n        pass\\n\\n    def __new__(cls, *args, **kwargs):\\n        pass\\n\\n    # 析构函数，释放对象时使用\\n    def __del__(self):\\n        # 关闭数据库连接\\n        if self.__db:\\n            self.__db.close()\\n            # 自动析构时这里会出问题：'NoneType' object\\n            logging.info(\"-------> close db.\")\\n        else:\\n            # 自动析构时这里也会出问题：'NoneType' object\\n            logging.warning(\"-------> db unconnected or had been closed.\")\\n\\n\\nif __name__ == \"__main__\":\\n    # 创建实例\\n    db_obj = CMySQL()\\n\\n    # 输出到控制台\\n    logging.basicConfig(level=logging.INFO,\\n                    format='[%(asctime)s][L:%(lineno)d][%(levelname)s][%(process)d] %(message)s',\\n                    datefmt='%d %b %Y %H:%M:%S')\\n    logging.info(\"================================== END ==================================\")执行上面的程序，在Linux终端上就会出现Exception AttributeError: 'NoneType' object has no attribute 'warning'\" in <bound method CMySQL.__del__ of <__main__.CMySQL instance at 0x7f4b3f9b7128>>的错误。如下图所示：其实是不了解python的析构过程导致的：当main函数结束后（输出图中的END字样），意味着进程即将退出，那么会自动调用对象的析构函数进行析构，这点Python和C++是一样的。由于logging模块中的类对象（包括成员变量、成员函数等）已经被析构了，所以当执行CMySQL对象的析构函数__del__中的logging.warning函数时会出现\"'NoneType' object has no attribute 'warning'的错误。解决方法很简单，只要增加一个封装MySQL链接关闭的函数close就行了，当main函数结果调用即可。下面的代码是针对这个问题的改进版本。1\\n 2\\n 3\\n 4\\n 5\\n 6\\n 7\\n 8\\n 9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60# -*- coding: UTF-8 -*-\\n# File:   destrution_attribute_error_nonetype1_1.py\\n# Description:   修正Exception AttributeError: 'NoneType' object has no attribute问题的示例程序\\n# (c) 2018.12.19 vfhky https://typecodes.com/python/destrution_attribute_error_nonetype1.html\\n\\nimport threading\\nimport logging\\n\\n\\n# MYSQL 的简单封装\\nclass CMySQL:\\n    # 线程锁\\n    _instance_lock = threading.Lock()\\n\\n    # 数据库连接对象\\n    __db = None\\n    # 游标对象\\n    __cursor = None\\n\\n    def __init__(self, *args, **kwargs):\\n        pass\\n\\n    def __new__(cls, *args, **kwargs):\\n        pass\\n\\n    # 关闭数据库连接\\n    def close(self):\\n        if self.__db:\\n            self.__db.close()\\n            self.__db = None\\n            self.__cursor = None\\n            logging.info(\"-------> close db.\")\\n        else:\\n            logging.warning(\"-------> db unconnected or had been closed.\")\\n\\n    # 析构函数，释放对象时使用\\n    def __del__(self):\\n        # 关闭数据库连接\\n        if self.__db:\\n            self.__db.close()\\n            self.__db = None\\n            self.__cursor = None\\n            # logging.info(\"-------> close db.\")\\n        else:\\n            pass\\n            #logging.warning(\"-------> db unconnected or had been closed.\")\\n\\n\\nif __name__ == \"__main__\":\\n    #\\n    db_obj = CMySQL()\\n\\n    # 输出到控制台\\n    logging.basicConfig(level=logging.INFO,\\n                    format='[%(asctime)s][L:%(lineno)d][%(levelname)s][%(process)d] %(message)s',\\n                    datefmt='%d %b %Y %H:%M:%S')\\n    logging.info(\"================================== END ==================================\")\\n\\n    # 关闭数据库连接\\n    db_obj.close()运行效果如下图所示：本文分享自 作者个人站点/博客 前往查看如有侵权，请联系 cloudcommunity@tencent.com 删除。本文参与 腾讯云自媒体分享计划  ，欢迎热爱写作的你一起参与！扫码关注腾讯云开发者领取腾讯云代金券Copyright © 2013 - 2024 Tencent Cloud. All Rights Reserved. 腾讯云 版权所有 深圳市腾讯计算机系统有限公司 ICP备案/许可证号：粤B2-20090059 深公网安备号 44030502008569腾讯云计算（北京）有限责任公司 京ICP证150476号 |  京ICP备11018762号 | 京公网安备号11010802020287Copyright © 2013 - 2024 Tencent Cloud.All Rights Reserved. 腾讯云 版权所有"
        ]
    },
    {
        "prompt": "运用article，head，section，pre，time，footer等元素制作新闻及评论页面",
        "doc": [
            "以前布局，我们基本用 div 来做。div 对于搜索引擎来说，是没有语义的。<header> 元素用于展示介绍性内容，通常包含一组介绍性的或是辅助导航的实用元素。它可能包含一些标题元素，但也可能包含其他元素，比如 Logo、搜索框、作者名称，等等。此元素仅拥有全局属性。<nav> 元素表示页面的一部分，其目的是在当前文档或其他文档中提供导航链接。导航部分的常见示例是菜单，目录和索引。这个元素只包含全局属性。<article> 元素表示文档、页面、应用或网站中的独立结构，其意在成为可独立分配的或可复用的结构，如在发布中，它可能是论坛帖子、杂志或新闻文章、博客、用户提交的评论、交互式组件，或者其他独立的内容项目。​​此元素只具有全局属性。<section> 元素表示一个包含在 HTML 文档中的独立部分，它没有更具体的语义元素来表示，一般来说会有包含一个标题。此元素只包含全局属性。<aside> 元素表示一个和其余页面内容几乎无关的部分，被认为是独立于该内容的一部分并且可以被单独的拆分出来而不会使整体受影响。其通常表现为侧边栏或者标注框。此元素只有全局属性。<footer> 元素表示最近一个章节内容或者根节点（sectioning root）元素的页脚。一个页脚通常包含该章节作者、版权数据或者与文档相关的链接等信息。该元素仅包含全局属性。<address> 元素 表示其中的 HTML 提供了某个人或某个组织（等等）的联系信息。此元素只有全局属性。该元素仍在设计和讨论中，这里就不在多讲了。如果你感觉文章不咋地//(ㄒoㄒ)//，就在评论处留言，作者继续改进；o_O??? 如果你觉得该文章有一点点用处，可以给作者点个赞；\\\\\\\\*^o^*// 如果你想要和作者一起进步，可以微信扫描二维码，关注前端老L；~~~///(^v^)\\\\\\\\\\\\~~~ 谢谢各位读者们啦(^_^)∠※！！！\\n        \\n    \\n                    happy_fish58: \\n                    我遇到同样的情况 他在oncreate方法已经初始化，也拿到实例了传入进去还是为null，和上面的情况一样的\\n                \\n                    Mr  Robot: \\n                    可以给个完整的处理代码吗谢谢\\n                \\n                    伤心小狗床边哭: \\n                    一样的写法 为啥获取不\\n                \\n                    Fuhuan3: \\n                    直接照搬源文档啊\\n                \\n                    Bnnnnnnnnnnnnn: \\n                    用那个上传图片的key没有禁掉诶\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者老__L你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "目 录 1.项目总体设计 2 1.1需求分析 2 1.2网站结构分析 3 1.2.1导航栏 3 1.2.2主体部分 3 1.3网络风格分析 3 1.4网站结构图 3 2.项目详细设计 4 2.1登录页面设计 4 2.2主页页面设计 5 2.3在线读书页面设计 6 3.项目总结 7 4.参考文献 7此网页能够满足喜欢看书的书友，随时随地的打开网页就可以阅读各种各样的书籍，无论是国内还是国外的书籍都可以看，网页的设计还进行了书籍的分类，有在线阅读的书籍、近段时间书籍阅读量的排行榜、本网页出版的图书等等。网页的设计根据自己个人爱好来设计，比较简易，颜色不是浓艳，这样正是符合了读书的一个环境。本网页还设计了登录页面，可以让更多的读书爱好者加入进来。本文转载自http://www.biyezuopin.vip/onews.asp?id=14788读书爱好者能及时、准确、完整阅读到自己喜欢的书籍，管理员可以在后台对书籍的更新点信息进行准确校对、修改和删除。技术：HTML语言、css样式表。1．2网站结构分析 该网站主要由首页、栏目页、内容页组成，每个页面都由头部（logo、TC读书网）、导航栏、主体部分及尾部版权栏构成。 1.2.1导航栏 导航栏由：首页、国学/古籍、出版图书、电子书、网络小说、排行榜、读书导航七个目录组成。 1.2.2主体部分：图片展示栏、文字说明 1.3 网站风格分析 网站主要以简约风格为主，简洁的表现形式来满足读书爱好者对此网页的了解。 1、 总体印象：以展示本网页优点等，主题突出，内容精干，形式简洁； 2、版式布局：栏目集中，分栏目检索明确，导航标志清晰； 3、色彩运用：总体呈浅灰色简洁风格； 4、图片运用：配合文字，以极简的图片效果吸引用户； 5、语言：中文； 6、结构上：浏览路线方便快捷、清晰明确；          \\n                    2301_78774083: \\n                    请问可以看一下源文件吗\\n                \\n                    biyezuopinvip: \\n                    可以换个人看一下\\n                \\n                    m0_65024002: \\n                    在吗，文末没看到v\\n                \\n                    m0_65024002: \\n                    是你的博客名不v\\n                \\n                    m0_65024002: \\n                    没看到v\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "提示：这是一个系列课程。Web（World Wide Web）即全球广域网，也称为万维网。我们常说的Web端就是网页端。网页是构成网站的基本元素。网页主要由文字、图像和超链接等元素构成。当然，除了这些元素，网页中还可以包含音频、视频以及Flash等。我们在浏览器上输入网址后，打开的任何一个页面，都是属于网页。浏览器是网页运行的平台，常见的浏览器有谷歌（Chrome）、Safari、火狐（Firefox）、IE、Edge、Opera等。关于浏览器的详细介绍，可以看下一篇文章：《浏览器的介绍》。W3C：World Wide Web Consortium，万维网联盟组织，用来制定web标准的机构（组织）。W3C 万维网联盟是国际最著名的标准化组织。1994年成立后，至今已发布近百项相关万维网的标准，对万维网发展做出了杰出的贡献。W3C 组织就类似于现实世界中的联合国。为什么要遵循WEB标准呢？因为很多浏览器的浏览器内核不同，导致页面解析出来的效果可能会有差异，给开发者增加无谓的工作量。因此需要指定统一的标准。Web标准：制作网页要遵循的规范。Web标准不是某一个标准，而是由W3C组织和其他标准化组织制定的一系列标准的集合。1、Web标准包括三个方面：根据上面的Web标准，可以将 Web前端分为三层，如下。2、Web前端分三层：3、打个比方：（拿黄渤举例）HTML 相当于人的身体组织结构：CSS 相当于人的衣服和打扮：JS 相当于人的行为：",
            "资源下载地址：https://download.csdn.net/download/sheziqiong/86805850 资源下载地址：https://download.csdn.net/download/sheziqiong/86805850站点主题为个性化新闻资讯站点，站点需表现出美观的，实用的，简洁的新闻排版，且需对新闻进行分类，以达到高效的资讯浏览，站点要求获取海量资源，则需用分页技术进行分页显示。体现个性化则需要对用户进行建模，以保证每个用户使用时的专属感，因此建立了用户登陆注册，个人信息等页面，针对不同用户对页面的需求，页面设计有三套风格的模板，为更加凸显个性化还将增加论坛系统，用户可对自己发布的帖子进行增删改，还可对帖子进行收藏，可对每条新闻进行评论，并可对其进行点赞，每条新闻可显示浏览次数以体现热度，对用户进行推荐，并对用户的浏览行为进行记录，通过数据分析达到定制的推送，建立朋友圈，使得朋友之间可一对一分享新闻帖子等。由于系统内容过于庞大可分步进行开发。1、用户基本信息页面的开发2、新闻、论坛、评论主题内容显示页面开发3、更多个性化功能页面开发当前进度第二阶段完成。1、用户模块，包括用户的注册、登陆等界面。2、新闻模块，包括了热点新闻页面，推荐新闻页面与推测用户喜爱新闻页面等。3、论坛模块，包括了热点话题页面、推荐话题页面与推测用户喜爱话题页面等。4、评论模块，包括了热点新闻对应热点评论页面、推荐评论页面与推测用户喜爱新闻的热门评语页面等5、搜索模块，包括了搜索返回页面等。6、公共模块，包括了新闻主体页面与新闻板块通用显示页面。图2-4关于页面 图2-9登录界面  – 后台登录主界面图2-10后台管理页面 – 仪表盘主页面图2-11后台管理页面 – 文章管理图2-11后台管理页面 – 写文章及发布页面图2-12后台管理页面 – 全局设置页面图2-13后台管理页面 – 更改密码页面**模块的交互效果代码，如表3-1、3-2所示。表3-1 login.html JS部分代码表3-2 ***.html JS部分代码js代码分别实现了登陆时以ajax方式向后台进行提交，注册时，对用户名、密码、手机号进行条件判断，并验证后台回传的验证码与输入的验证码是否相同，当所有条件都满足时，才可按下注册按钮。其余模块js代码主要作用为控制切换皮肤，仅以index.html页面为例，如表3-3所示。表3-3 index.html jQuery部分代码上述代码完成了对三套css代码进行切换。**模块的静态交互效果，如图3-1所示。图3-1 login.html交互效果采用绝对布局 控制高度和颜色 内容滚动方式首页文章展示 – 标题 摘要内容 日期 分类 标签使用Bootstrap的container 容器类 栅格布局进行对齐和间距设计cssCSSID 内容居中 文章列表显示 与主页面的文章展示基本相同 控制好间距 字重 对齐 统计 年份分类 文章标题 + 日期账号输入页密码输入框卡片设计 展示数据与运行情况写文章模块标题栏内容栏可向下自由拉伸长度 自适应长度系统设置页面用户名 邮箱 个人描述的更改与文章编写的代码基本一致更改密码部分为了提高安全性 需要输入原密码并重复输入新密码与上述代码基本一致 修改部分内容即可资源下载地址：https://download.csdn.net/download/sheziqiong/86805850 资源下载地址：https://download.csdn.net/download/sheziqiong/86805850\\n                    m0_52214885: \\n                    不能删除exe文件吗\\n                \\n                    Timors-001: \\n                    这些资料怎么获取？\\n                \\n                    sherlocklau: \\n                    求文档\\n                \\n                    biyezuopinvip: \\n                    基于Python3、Flask和SQLite的大学实验室设备管理系统是一个非常基础和通用的系统。如果你想将数据库从SQLite切换到MySQL，你需要进行一些修改和调整。以下是一些可能的问题和解决方案：\\n\\n数据库连接：SQLite和MySQL使用不同的连接方式。你需要使用适当的库（如mysql-connector-python）来连接到MySQL数据库。\\nSQL方言：SQLite和MySQL有些SQL方言的差异。例如，日期和时间函数、字符串连接等可能有所不同。你需要确保你的查询在MySQL中是有效的。\\n数据类型：确保你了解MySQL支持的数据类型，并相应地调整你的表结构和查询。\\n库和扩展：你可能需要使用额外的库来处理MySQL特有的功能，如存储过程、触发器等。\\n迁移数据：如果你打算从SQLite迁移到MySQL，你需要将数据从SQLite数据库导出，然后导入到MySQL数据库。\\n错误处理：确保你的代码能够正确处理MySQL的错误和异常。\\n安全性：MySQL有更多的安全特性，如用户权限、SSL连接等。确保你了解这些特性并正确配置你的连接。\\n性能：MySQL通常比SQLite更快，但这也取决于你的查询和使用情况。确保你进行了适当的性能测试和优化。\\n为了实现这一目标，你可以遵循以下步骤：\\n\\n安装必要的库：\\n\\nbash\\npip install mysql-connector-python flask\\n修改数据库连接代码，从SQLite切换到MySQL。\\n修改SQL查询以适应MySQL的语法和功能。\\n如果有必要，安装和使用其他库来处理MySQL特有的功能。\\n进行数据迁移或重新创建数据库结构。\\n进行测试，确保一切正常工作。\\n最后，请注意，将整个系统从SQLite迁移到MySQL是一个相对复杂的任务，涉及多个方面的修改和调整。确保在生产环境部署之前进行充分的测试。\\n                \\n                    大吃一: \\n                    博主，请问如果数据库是用的mysql，可以使用你这个代码嘛，会有什么问题吗\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者biyezuopinvip你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。"
        ]
    },
    {
        "prompt": "怎么导入css文件",
        "doc": [
            "",
            "CSS的特点：内容与表现分离；丰富的样式；方便修改；减少网页代码量1、标签选择器用一般的段落标签p，标题标签h都可以；2、类选择器使用时要在标签中定义类名class=\"tonglei\"，调用时.tonglei{}，用于多个、一类；3、ID选择器要定义id=\"zzc\",调用时#zzc{}，用于一个、特殊。在标签内部，叫内部样式，只作用于这一个标签，优先级大于内敛样式。 新建两个文件，一个是.html用来写主题，一个是.css用来添加样式link是链接式，属于XHTML。@import是导入式，属于css2.1,对不符合css2.1的浏览器无用，所以不常用。内部样式最大，内联和外联取决于在html中谁在下面写，在下面的起作用，上面的被覆盖。总结说距离标签越近的优先级越大。\\n                    CSDN-Ada助手: \\n                    恭喜您写了这么一篇全面介绍Python语言基础的博客！内容涵盖了输入输出、变量常量、数据类型、运算符、占位符和format格式化，让读者对Python有了更深入的了解。希望您能继续坚持创作，分享更多有趣的内容。下一步可以考虑深入探讨Python的高级特性或实际应用，为读者提供更多学习的机会。期待您的下一篇作品！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜你发布了第6篇博客，标题为“HTML学习笔记5——功能性链接”！看来你对HTML的学习进展顺利呢。希望你能继续保持这样的学习态度，坚持不懈地创作下去。接下来，或许可以考虑分享一些实际的项目经验或者应用案例，让读者更好地理解HTML的实际应用。加油！期待你更多的精彩内容！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第5篇博客！看到您对HTML学习笔记4中超链接的详细解析，感觉收获颇丰。希望您能继续保持创作的热情，分享更多有价值的内容。建议您在下一篇博客中可以尝试深入探讨一些与CSS相关的知识，这样可以让读者更全面地了解前端开发。加油！期待您的下一篇作品。\\n                \\n                    CSDN-Ada助手: \\n                    恭喜你写了第四篇博客！看到你在学习HTML中不断进步，真是令人振奋。对于图片标签的学习笔记，我觉得你总结得很到位，简洁明了。接下来，或许可以考虑写一些关于CSS样式的学习笔记，这也是前端开发中非常重要的一部分。希望你能继续保持创作的热情，不断进步！\\n\\n如何快速涨粉，请看该博主的分享：https://hope-wisdom.blog.csdn.net/article/details/130544967?utm_source=csdn_ai_ada_blog_reply5\\n                \\n                    松光鱼: \\n                    换行标签单标签<br>\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "HTML如何引入CSS文件HTML（HyperText Markup Language）是一种用于创建网页的标准标记语言，而CSS（Cascading Style Sheets）则是一种样式表语言，用于描述HTML或XML（包括如SVG、MathML等各类XML分支语言）文档的呈现，在HTML中引入CSS文件主要有以下四种方式：1. 外部样式表这是最常用的方法，通过在HTML文档的<head>部分使用<link>标签引入一个外部CSS文件。在这个例子中，href属性值是你的CSS文件的路径。2. 内部样式表你可以将样式直接写入HTML文档的<head>部分，使用<style>标签包围你的CSS代码。3. 内联样式你也可以直接在HTML元素中使用style属性来添加CSS样式。这种方式通常只用于单个元素，不适合大范围应用。4. 导入样式表除了上述三种方法，还有一种较老的方式是通过@import规则在CSS文件中导入其他CSS，你可以在一个CSS文件中这样写：但这种方式不被推荐，因为它可能导致加载速度慢和兼容性问题。相关问题与解答Q1: 如何在HTML中同时使用外部样式表和内部样式表？A1: 你可以直接在同一HTML文档的<head>部分既使用<link>标签引入外部CSS文件，又使用<style>标签编写内部样式。Q2: 如果在HTML中使用了内联样式，那么它和外部样式表中的相同规则哪个会生效？A2: 当HTML元素的内联样式和外部样式表中的规则冲突时，内联样式的优先级更高，会覆盖外部样式表中的相同规则。\\r\\n    文章来源互联网，合作与侵权处理联系（m4g6  QQ邮箱），谢谢支持。\\r\\n在江西省进行网站备案需要多久的时间，这是一个备案者普遍关心的问题，...风起云涌服务器适合什么职业？1风起云涌服务器适合玩家聚集、PVP对...个人怎样架设自己的服务器？架设自己的服务器需要一些基本的步骤和技能...怎样成为网易云终身vip？答:怎样成为网易云终身VIP?1.网易云...企业自建服务器干啥？1.托管网站：可以将自己的网站托管在自建服务器...怎么查看icloud云备份里的内容？可以通过以下步骤查看iclou...大家好，今天小编关注到一个比较有意思的话题，就是关于老薛主机如何绑...在确定需求时还要综合考虑公司规模、行业特点以及未来发展方向等因素，...答案：在选择香港虚拟主机租用方案时，需要考虑多个因素，包括价格、性...高防服务器\\r\\n\\r\\n雅云服务器\\r\\n云服务器\\r\\n铭云网\\r\\n安全运行天 冀ICP备2021017634号-3冀公网安备13062802000103号\\r\\n电信业务经营许可证 牌照：B1-20224628\\t\\t\\t\\t\\t运行时长：2.002秒查询信息：16 次\\r\\n\\n\\t\\t\\t\\t冀ICP备2021017634号-3冀公网安备13062802000103号\\r\\n电信业务经营许可证 牌照：B1-20224628\\t\\t\\t\\t\\t运行时长：2.002秒查询信息：16 次\\r\\n",
            "CSS可以通过以下两种方式导入到JavaScript中使用：1. 使用`import`语句导入CSS文件（需要支持ES6模块的浏览器或使用Babel等工具进行转换）：“`javascriptimport ‘./styles.css’;“`在JavaScript源文件中使用`import`语句导入CSS文件，这样CSS将被自动应用到当前文档。2. 使用JavaScript动态创建``元素导入CSS：“`javascriptconst linkElement = document.createElement(‘link’);linkElement.rel = ‘stylesheet’;linkElement.href = ‘styles.css’;document.head.appendChild(linkElement);“`通过创建一个``元素，并设置其`rel`属性为`stylesheet`，`href`属性为CSS文件的路径，然后将该元素添加到``标签中，就可以将CSS导入到JavaScript中。需要注意的是，以上两种方式都需要确保CSS文件路径正确且可访问。另外，第二种动态创建``元素的方式更适用于动态加载CSS的场景，例如在特定条件下加载特定的CSS文件。总结：通过上述两种方式，可以在JavaScript中导入CSS文件。第一种方式使用`import`语句导入CSS文件，第二种方式使用JavaScript动态创建``元素导入CSS。根据具体的使用场景选择合适的方式来导入CSS即可。在VSCode中，将CSS导入JavaScript有几种方法：1. 使用ES6模块导入：可以使用ES6模块语法将CSS导入到JavaScript文件中。首先，确保你的项目文件夹中有一个CSS文件。然后，在JavaScript文件中使用`import`语句导入CSS文件。例如，假设你的CSS文件名为`styles.css`，在JavaScript文件的顶部添加以下代码：“`javascriptimport ‘./styles.css’;“`这样就将`styles.css`文件导入到JavaScript文件中了。2. 使用JavaScript的动态创建样式表：使用JavaScript动态创建一个` 在VSCode中，你可以使用JavaScript文件中的import语法来导入CSS文件。下面是一种常用的方法：步骤一：创建HTML文件首先，创建一个HTML文件，用于引入JavaScript和CSS文件。可以使用如下的基本HTML结构：“`  Import CSS with JavaScript  在头部的``标签中引入了一个名为`styles.css`的CSS文件。步骤二：创建JavaScript文件接下来，在VSCode中创建一个JavaScript文件，用于导入CSS文件的样式。可以使用如下的基本JavaScript结构：“`import ‘./styles.css’;“`这样就将CSS文件导入到JavaScript文件中了。步骤三：编写CSS文件现在，你可以在VSCode中创建一个CSS文件，用于定义具体的样式。“`body {    background-color: lightblue;}h1 {    color: red;}“`在CSS文件中定义了一个`body`元素的背景颜色和`h1`元素的文字颜色。步骤四：在VSCode中打开HTML文件最后，将HTML文件打开在VSCode中，点击右键选择“在默认浏览器中打开”，即可在浏览器中看到效果。通过以上步骤，你已经成功将CSS文件导入到JavaScript中，并且在浏览器中正确显示了样式。每当你修改了CSS文件，保存后刷新浏览器即可看到修改后的样式。这就是在VSCode中将CSS导入到JavaScript的方法和操作流程。希望对你有帮助！PingCode：项目管理 产品管理 知识管理 效能管理 测试管理 协作空间 自动化 目录服务 万象方舟ICP：京B2-20192206 京ICP备13017353号 京公网安备11010802012357号| 违法和不良信息举报邮箱 abuse@worktile.com |© 2021 Worktile.com400-800-1024工作日9:30-21:00在线"
        ]
    },
    {
        "prompt": "写一个threejs的跑酷游戏",
        "doc": [
            "汇总：五个Three.js开源项目，带你实操Three.js 是一个基于 WebGL 的 JavaScript 库，它提供了一套易于使用的 API 用来在浏览器中创建和显示 3D 图形。通过抽象和简化 WebGL 的复杂性，Three.js 使开发者无需深入了解 WebGL 的详细技术就能够轻松构建和渲染3D场景、模型、动画、粒子系统等。其应用场景广泛，包括网页游戏、数据可视化、虚拟现实（VR）、增强现实（AR）、艺术展示和教育工具等，几乎覆盖了所有需要在网页中展示3D内容的领域。如果你想要学习 Three.js，首先当然需要掌握 JavaScript 和基本的 Web 开发知识。然后通过官方文档和示例学习 Three.js 的核心概念，包括场景、相机、渲染器，以及如何创建和操作 3D 对象。接着，需要深入探索高级功能如光照、动画、性能优化。当然，理论也要和实践相结合才能发挥它的作用，今天马建仓就位大家介绍五款优秀的 Three.js 实操项目，帮助大家理论实践相结合，更好地掌握 Three.js。项目作者： ICEGL 图形学社区开源许可协议： Apache-2.0项目地址：https://gitee.com/ice-gl/icegl-three-vue-tres一款三维可视化项目快速落地的开源框架，能让你像写 Vue3.x 一样写三维可视化项目。项目作者： tengge1开源许可协议： MIT项目地址：https://gitee.com/tengge1/ShadowEditor基于 Three.js、Go 语言和 MongoDB 的跨平台的 3D 场景编辑器。项目作者： 答案开源许可协议： MulanPSL-2.0项目地址：https://gitee.com/ZHANG_6666/Three.js3D包含了包含模型加载，模型文件导入导出，模型背景图，全景图，模型动画，模型灯光，模型定位，辅助线，模型辉光，模型拖拽，模型拆解， 模型材质等可视化操作编辑系统。项目作者： steve开源许可协议： GPL-3.0项目地址：https://gitee.com/steve007/gallery数字展馆概念项目，技术栈为 three.js，使用 blender 进行建模，最后烘焙渲染场景贴图，导出 glb 地图格式在 Web 端渲染。项目作者： Shiotsuki开源许可协议： MPL-2.0项目地址：https://gitee.com/Shiotsukikaedesari/vis-three一款基于 three.js 的组装式前端 3D 开发框架。",
            "",
            "本文由孟智强同学原创，主要介绍了如何利用 three.js 开发 3D 应用，涵盖 3D 场景搭建、透视相机、几何体、材质、光源、3D 坐标计算、补间动画以及物体交互实现等知识点。入门 three.js 也有一阵子了，我发现用它做 3D 挺有趣的，而且学习门槛也不算高。在这篇博文中，我想分享一下利用 three.js 做一个 3D 版汉诺塔（河内塔）的过程，以及对 three.js 相关知识点进行一次较为全面的实战总结。希望能与大家交流技术心得和经验，一起共同进步。效果展示游戏规则：将串在左边柱杆（A柱）上的盘子全部挪进右边柱杆（C柱）即可获胜；一次只能挪动最上面的一个盘子；每个盘子的上面只能放置比它小的盘子；可利用中间的柱杆（B柱）来中转、倒换盘子。可自由选择游戏难度（盘子数量），游戏中途可随时重开，获胜后会有该局耗时和步数的统计信息。为了方便演示，避免引入底层框架（Vue、React、Angular...）的代码增加复杂度，本文中的案例没有使用前端底层框架和工程脚手架，而采用传统的 HTML 单文件方式来编写代码。首先，准备一个空白容器，让它的尺寸与浏览器视窗大小相同，以充分利用屏幕空间。对于 JS 脚本，使用 导入映射 配置资源的 CDN 地址，这样就可以像使用 npm 包一样导入相关资源。接下来，创建一个场景（Scene）、一个透视相机（PerspectiveCamera）和一个 WebGL 渲染器（WebGLRenderer），并将渲染器添加到 DOM 中。同时，编写一个渲染函数，使用requestAnimationFrame 方法循环渲染场景。以下是最基础的初始化代码：上面 PerspectiveCamera 设置了 4 个参数，其中最后 2 个参数分别是相机视锥体的近端面和远端面，默认是 0.1 和 2000。这里将其设为 1 和 500，让相机与物体产生的视椎体 “更小、更接近”，以节省渲染性能。添加桌台在汉诺塔游戏中，场景里主要的 3D 物体包括桌台、柱杆和盘子，我们先来添加最简单的桌台到场景中。桌台的形状是一个长方体，我们可以使用 BoxGeometry 来实现它，网格材质则使用 MeshLambertMaterial 模拟木质的非光泽表面。为方便调试，我们添加相机轨道控制器 (OrbitControls) 来控制相机的旋转、缩放和平移，从而可以控制场景的视角和观察点。另外，再添加辅助坐标轴和辅助网格线，方便更加直观地查看物体的位置。运行上述代码后，桌台并没有在视图中“显示”出来。这是因为添加到场景中的桌台默认位于三维坐标原点 (0, 0, 0)，而相机的默认位置也是三维坐标原点，此时相机位于桌台内部，相机视野范围内无法看到桌台。所以我们需要调整相机的 z 轴坐标位置，例如：这样，桌台以及辅助线就能够显示在视野中了。（桌台为什么是黑色的？后面会讲）在场景初始化时，我们希望场景中的所有物体能够整体以合适的大小显示在视野中。那么，多少才算“合适的大小”呢？我们不需要为每个物体单独设置合适的尺寸，因为在透视相机中，场景中的物体遵循“近大远小”的规则。因此，只需调整相机的远近位置就能控制它们整体的视觉大小。在汉诺塔游戏中，桌台是所有物体中宽度最大的物体，因此我们需要将其大小占满视野的宽度。为了实现这一点，我们需要求出相机在 z 轴上的坐标。如果我们从桌台正上方，也就是通过场景 y 轴往下看，就会看到桌台的俯视图。一图胜千言，下图中 AC 的长度就是相机在 z 轴上的坐标。已知视野角度 fov = 45°，则 ∠ACB = fov / 2，AB = 30 / 2，求 AC 的长度。利用三角函数中正切公式即可求出，代码如下：前面添加的桌台是一片漆黑，这是因为我们使用了 MeshLambertMaterial 材质，这种材质需要光源才能反射光线，从而显示物体表面。我们来添加两个光源到场景中：一个环境光，用来照亮场景中的所有物体；一个平行光，模拟太阳光的效果，让物体产生明暗面，增强立体效果。有了光源后，桌台就能显示出颜色了。生成柱杆柱杆的形状是一个圆柱体，我们可以用 CylinderGeometry 来实现它，网格材质则使用 MeshPhongMaterial 模拟光泽表面。当渲染圆柱体时，可能会在曲面边缘产生毛边。为解决这个问题，我们可以开启渲染器的抗锯齿功能，这样可以让圆柱体的边缘在视觉显示上更加平滑。调整柱杆位置由于添加到 three.js 场景中的 3D 物体，初始位置位于场景中央，即物体的中心位于三维坐标原点 (0, 0, 0) 处。因此，我们还需要调整柱杆的位置，使其立在桌面上。具体来说，想让柱杆从桌台的中心位置变成位于桌台顶部，需要将柱杆位置向量的 y 坐标设置为柱杆高度的一半加上桌台高度的一半。参考下图，柱杆从左边的位置变成右边的位置，变动的距离（y 轴坐标）等于 a + b 的值，其中 a 为柱杆高度的一半，b 为桌台高度的一半。对应的代码实现：3 根柱杆的排列我们需要使用 3 根柱杆来移动盘子，这 3 根柱杆依次等距排开呈一行，那么它们的间距需要多少才合适呢？受 CSS 中 flex 布局的启发，我们可以得到柱杆的 3 种水平间距排列方式：我们为其中的柱杆加上盘子的因素。通过观察，可以明显看出中间的 space-around 方案间距最为合理，可以避免盘子的溢出或重叠，是我们想要的排列方式。如下图所示：在 space-around 方式的排列中，第一个元素到行首的距离和最后一个元素到行尾的距离等于相邻元素之间距离的一半。如果我们设第一个柱杆到桌台左边缘的间距为 x，则柱杆之间的间距就等于 2x，所以 x + 2x = tableWidth / 2，如此就能算出间距。如下图所示：3 根柱杆的 y 和 z 轴坐标相同，我们接下来只需求出它们的 x 轴坐标即可。中间柱杆的 x 轴坐标为 0，根据前面求出的间距值，就可以算出第一根和最后一根柱杆的 x 轴坐标。对应的代码如下：现在我们已经成功添加了桌台和柱杆，但是如果我们回头看一下代码，会发现所有的细节都被平铺在同一层级上，而且，我们还需要添加关于盘子的代码以及复杂的交互逻辑。可以预见，我们的代码将逐步演变成面条式代码，变得难以维护。为了解决这个问题，我们需要及时对代码进行重构，将不同的细节进行分层管理。这里采用了 MVP 架构，将代码分为三个层级：模型层、视图层和代理层。模型层负责数据的管理，视图层负责展示数据和渲染 UI，代理层则负责协调模型层和视图层之间的交互，同时处理一些业务逻辑。重构后的代码如下：完成代码重构后，代码层级就清晰多了，方便后续拓展功能。我们计划在柱杆底部增加一个底座，以增强其装饰效果。底座的形状是一个上小下大中间空的喇叭状物体，由于这种形状没有现成的几何体可用，我们决定采用车削缓冲几何体（LatheGeometry）来生成它。“车削缓冲几何体”这个翻译可能对于不了解机械加工的人来说比较生硬，不容易理解，私以为可以翻译成“旋转塑形几何体”比较直观，能够清晰地展现其原理和应用。其原理是先确定一系列的点，这些点连成一条线（路径），然后绕 y 轴旋转一定角度（默认是旋转360°），旋转过程中路径经过的面就会形成一个几何体，可以用来创建圆环、碗、瓶子等形状。可以将其想象成在旋转的陶轮上做陶胚，手指沿着泥胚的多个位置贴合成一条路径（如下图中的红线），在陶轮旋转后就能得到所需形状的胚体。代码实现方面，为 Pillar 类拓展一个底座生成私有方法，利用正弦的特性来生成曲线路径点（这里用了10个路径点），传递给 LatheGeometry 构造函数生成几何体。关键代码如下：生成的底座 3D 物体如下图所示：我们把它添加到柱杆的底部：生成盘子对于带孔的盘子这种形状，我们首先会想到用圆环缓冲几何体（TorusGeometry）来实现：通过调整圆环半径（第1个参数）控制盘子的大小，调整管道半径（第2个参数）控制盘子中心孔的大小。但是想要较小的中心孔径，就得设置较粗的管道半径，这么一来，制作出来的盘子就会“胖”得像甜甜圈！好在我们可以压缩这个“甜甜圈”在 z 轴方向的大小（缩放比）让它变薄。不过效果还是差强人意，它并不像汉诺塔中那种很“润”的盘子。我们的另一个方案是把盘子按显示的面分成4个部分，再分别生成这4个部分的形状，最后组合成盘子。这种方式效果看着还行，不过需要处理 4 个形状的生成及组合，代码稍显复杂。最终我们采用了之前做柱杆底座时的车削几何体（旋转塑形几何体）来生成盘子形状。还记得用法吗？下图是最终生成的盘子的横截面，绿线是 y 轴，蓝线是 x 轴。根据旋转塑形几何体的特点，我们只需定义出 x 轴方向的形状路径（横截面），它就能绕 y 轴旋转生成完整的形状。其中 x 轴方向的形状路径如下图所示：由于图形沿 x 轴的上下两部分是对称的，所以实际上我们只需关注上半部分的路径形状，即先定义上半部分的 5 个路径点（下图中的红点），再翻转生成下半部分的路径点。盘子的代码如下：多个盘子的堆叠显示在汉诺塔游戏中，有多个大小不同的盘子，游戏开始前，这些盘子按照从大到小的顺序从下往上依次堆叠，形成一个塔状结构。我们先在模型层完善盘子的配置数据，为多个盘子准备不同的颜色：然后在代理层添加 addPlates 方法用来生成并添加多个盘子：下面来编写 addPlates 这个方法。汉诺塔中的盘子是按一定的大小规律堆叠在一起的，多个盘子的大小可以使用等比数列来控制。我们只需设定最大的一个盘子的尺寸，就能利用等比数列通项公式 a(n) = a1 × r^(n-1) 算出其他盘子的尺寸来。同时，盘子是沿 y 轴堆叠在一起的，只需算出第一个盘子的坐标，就能根据盘子所在堆叠层数算出其 y 轴坐标来。addPlates 代码实现如下：我们再将堆叠盘子 group 对象的位置设为左侧柱杆的位置，让盘子串在左侧柱杆上。const unitX = model.tableSize.width / 2 / 3; group.position.x = -unitX * 2;为了更加清晰地指代不同的柱杆和盘子，我们计划为它们添加文本标签。three.js 中实现文字有多种方案可供选择（传送门），这里我们选择文字几何体（TextGeometry）方案。加载字体文件文字几何体 TextGeometry 是一个 three.js 的附加组件，需要显式导入。此外，为了使其正常工作，还需要载入专用的字体文件（ typeface.json）。FontLoader 用来异步加载字体，这里加载 three.js 自带的字体。在模型层定义字体加载方法：由于字体是异步加载的，文本标签必须在字体加载之后才能创建，因此我们需要调整代码逻辑，等待字体加载成功后再往场景中添加柱杆和盘子。创建文本类定义一个 Text 类，使用 TextGeometry 几何体和 MeshBasicMaterial 材质生成 3D 文本。在代理层新加一个 createText 方法，供视图层调用来创建 3D 文本。添加柱杆标签柱杆类新加一个参数 key，用来接收柱杆标签名称（A/B/C），内部定义方法生成标签文本并将其放置在柱杆顶部：添加盘子标签与柱杆一样，我们给盘子类传入序号作为其标签内容，在内部定义方法生成标签文本，“贴”在盘子外围：柱杆和盘子的标签添加完毕后的效果如下图所示：至此，这个案例中的所有 3D 物体已全部搭建完毕。下期预告：下期内容写作中，敬请关注。关于 OpenTinyOpenTiny 是一套企业级 Web 前端开发解决方案，提供跨端、跨框架、跨版本的 TinyVue 组件库，包含基于 Angular+TypeScript 的 TinyNG 组件库，拥有灵活扩展的低代码引擎 TinyEngine，具备主题配置系统TinyTheme / 中后台模板 TinyPro/ TinyCLI 命令行等丰富的效率提升工具，可帮助开发者高效开发 Web 应用。欢迎加入 OpenTiny 开源社区。添加微信小助手：opentiny-official 一起参与交流前端技术～更多视频内容也可关注B站、抖音、小红书、视频号OpenTiny 也在持续招募贡献者，欢迎一起共建OpenTiny 官网：https://opentiny.design/OpenTiny 代码仓库：https://github.com/opentiny/TinyVue 源码：https://github.com/opentiny/tiny-vueTinyEngine 源码： https://github.com/opentiny/tiny-engine欢迎进入代码仓库 Star TinyEngine、TinyVue、TinyNG、TinyCLI~如果你也想要共建，可以进入代码仓库，找到 good first issue标签，一起参与开源贡献~",
            "链接：只因大逃杀https://www.jaron.top/app/killChicken/游戏内容图：  \\n                    ITV女诗人: \\n                    有空来看看我朋友的作品, 码农宝App (同时提供小程序版本), 可以让你体验功能及学习代码的App,\\nhttps://blog.csdn.net/lujianfeiccie2009/article/details/112645439\\n                \\n                    JOJORiny: \\n                    姿势不对\\n                \\n                    abs625: \\n                    这种方式在APP上我之前也使用过，感觉不太稳定，如果你有兴趣可以去看下我博客中有另外一种稳定的实现方式。\\n                \\n                    小白啊啊i: \\n                    需要勾选什么吗？在mainifest.json里面\\n                \\n                    silent_lilu: \\n                    我的搜索自动提示不出效果\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者JOJORiny你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。"
        ]
    },
    {
        "prompt": "eslint关闭The template root requires exactly one element.\n",
        "doc": [
            "在vue中会出现以上问题，这是因为vue的模版中只有能一个根节点，所以在<template>中插入第二个元素就会报错。将<template>中的元素用一个大的<div>包起来，这样就可以在其中添加多个元素了，可以参考以下示例：一、在VS Code中添加ESLint插件二、在node全局路径中生成 eslint 的配置文件 .eslintrc.js1、路径一般在C:\\\\Users\\\\大圣\\\\AppData\\\\Roaming\\\\npm\\\\node_modules ，执行cmd2、npm init 创建 package.json 文件3、执行 eslint --init 创建配置文件4、按照命令提示一直脱干净，全局文件就现身完成三、在vscode中配置文件，设置\"eslint.options\": {    // 全局配置文件位置        \"configFile\": \"C:/Users/大圣/AppData/Roaming/npm/node_modules/.eslintrc.js\",       },四、vue@cli4.15版本发现的问题，无论取消设置vetur>Validation: Template还是在.eslintrc.js中配置\"vue/no-multiple-template-root\": \"off\"，都是报错：root requires exactly one element;将eslint升级后解决了：  \"devDependencies\": {    \"eslint\": \"^8.6.0\",    \"eslint-plugin-vue\": \"^8.2.0\"  },注意：在项目中还需要取消依赖：@vue/cli-plugin-eslint，否则会报错：eslint.CLIEngine is not a constructor  \\n                \\n                  博客等级\\n                \\n                  \\n              \\n                    CSDN-Ada助手: \\n                    恭喜您发布了第6篇博客！解决了\"vue--The template root requires exactly one element.\"这个问题，对于很多初学者来说肯定是个很有帮助的文章。希望您能继续坚持创作，分享更多有价值的内容。下一步可以考虑分享一些关于Vue的高级技巧或者实用的项目经验，让更多人受益。期待您更多精彩的文章！\\n                \\n                    钞人本仁: \\n                    有问题可以评论区提问，或私信问我\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第5篇博客！对于npm install yarm -g下载失败这个问题，或许您可以尝试检查网络连接、更新npm版本或者使用代理等方法解决。希望您能继续坚持创作，期待您的下一篇博客！祝您一切顺利！\\n                \\n                    dabo_520: \\n                    开翅棒棒的\\n                \\n                    钞人本仁: \\n                    我操作和你操作有一些细节不一样的话，可以在评论区打出来\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "启动VUE项目后控制台报错： 翻译为：组件模板应该只包含一个根元素查看vue代码，发现template中有两个元素，所以报错将h1标签放到div里面即可\\n        \\n    \\n                    叶  落: \\n                    非常感谢，git fetch origin 可以\\n                \\n                    Alan_刘志强: \\n                    我发现的是，有些实体类即使在接口中被使用，接口中也争产显示实体类的swagger注释，也不会在tables或者schemas下面显示出来，问题还在定位中。。。\\n                \\n                    人送外号徐老坏: \\n                    void* 可以理解为任意类型指针\\n                \\n                    m0_51284153: \\n                    动态规划法中dp[0]=0是否应该修改为dp[=]=nums[0]\\n                \\n                    weiambt: \\n                    0x3f3f3f3f可以近似认为是int类型的无穷大\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者weiambt你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "1、问题：提示Missing semicolon semi（缺少分号）   解决：对比其他ts代码，发现在orderDetail后少了分号，加上去之后就可以了。好严格！！！2、问题：The template requires child element（需要子元素）  创建一个新vue页面，然后在pages.json里添加页面路径，添加完后就报这个错误。 解决：页面下至少要一个元素标签 3、问题：“xxx” is defined but never used（xxx有定义但从未使用过） 引入某个东西（组件、方法或其他。。。），只要这个东西没被使用过，就报错。 解决：注释或者删除即可。4、问题：Expected indentation of 0 tabs but found 1 indent（预期缩进0个制表符，但发现1个缩进）  是在.eslintrc.js里定义的一些书写规则。 解决：修改项目下.eslintrc.js文件，在rules: {}中加入：“indent”: [“off”, 2] 或者’indent’: ‘off’；或者严格按照书写规则来。\\n        \\n    \\n                    zyr429427: \\n                    为神魔有些可以分享成功，有些就还是报那个错误啊？\\n                \\n                    大龄胡椒: \\n                    哥们解决没\\n                \\n                    大龄胡椒: \\n                    我按照这个来还是提示还是不行，大佬能解答下疑问吗\\n                \\n                    Marry1.0: \\n                    支付宝支付后端直接返回了一个支付地址吗？\\n                \\n                    Lion Long: \\n                    不错的文章，受益匪浅，文章内容丰富，条理清晰，值得一波关注！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            ""
        ]
    },
    {
        "prompt": "Worker** m_EmpArray为什么算是创建了一个数组？",
        "doc": [
            "以int数据类型为例注意：1、一维数组的声明方式：type[] arrayName; 或 type arrayName[];推荐使用第一种格式，因为第一种格式具有更好的可读性，表示type[]是一种引用类型（数组）而不是type类型。建议不要使用第二种方式int[] intArr;注：Java语言中声明数组时不能指定其长度（数组中元素的个数），这是因为数组是一种引用类型的变量，因此使用它定义一个变量时，仅仅表示定义了一个引用变量（也就是定一个了一个指针），这个引用变量还未指向任何有效的内存，所以定义数组时不能指定数组的长度。而且由于定义数组仅仅只是定一个引用变量，并未指向任何有效的内存空间，所以还没有内存空间来存储数组元素，因此这个数组也不能使用，只有在数组进行初始化后才可以使用。2、一维数组的创建Java中使用关键字new创建数组对象，格式为：数组名 = new 数组元素的类型 [数组元素的个数]3、一维数组的初始化数组的初始化分为静态初始化、动态初始化和默认初始化：附：静态初始化时不能指定元素个数，而动态初始化时则必须指定元素个数。静态初始化时数组能够知道元素的个数所以不需要指定，而动态初始化时数组元素个数未知 因此必须指定。注：一维数组这一块记住两点，数组声明的时候是不能指定大小的，也就是说等号左边的中括号中不能包含数字。另外一旦使用new关键字那么肯定在内存中为数组分配了空间，则必然数组有默认值。数组是对象数据类型 注：不要静态初始化和动态初始化同时使用，也就是说不要再进行数组初始化时，既指定数组长度，也为每个数组元素分配初始值。 4、数组进行动态初始化时系统分配初始值的规则详情见https://blog.csdn.net/qq_44700578/article/details/136323990为解决以上问题、灵活运用，提出Java容器的概念参考https://blog.csdn.net/u014199097/article/details/50551731\\n        \\n    \\n                    CSDN-Ada助手: \\n                    不知道 Java 技能树是否可以帮到你：https://edu.csdn.net/skill/java?utm_source=AI_act_java\\n                \\n                    CSDN-Ada助手: \\n                    恭喜你这篇博客进入【CSDN每天值得看】榜单，全部的排名请看 https://bbs.csdn.net/topics/618160112。 \\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第6篇博客！标题看起来非常有趣和有用。转换Jackson对象和JSON的相互转换是一个常见的需求，而且您还提到了在传递JSON时将枚举类型传递为整数，以及将时间戳转换为固定格式时间的技巧。这些都是非常实用的知识点。\\n\\n您的博客内容非常清晰易懂，我在阅读时收获颇多。对于下一步的创作建议，我建议您可以继续深入探讨Jackson库的其他功能和用法，例如如何处理复杂的JSON结构、如何自定义序列化和反序列化等等。此外，您还可以考虑分享一些与JSON相关的实际应用案例，这将帮助读者更好地理解如何在实际项目中应用这些技巧。\\n\\n总的来说，您的博客写得非常好，我期待着您未来更多的创作！谢谢您的分享！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第20篇博客！看到您在博客中遇到了关于IDEA设置jdk版本的问题，我觉得您的经验分享对于其他人来说一定会很有帮助。不过，我想提个建议，不知道您是否考虑过写一些关于解决类似问题的技巧或者经验总结的文章？当然，我只是想分享一些想法，希望不会给您添麻烦。期待您的下一篇文章！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第17篇博客！标题很吸引人，内容也非常实用。您的博客内容总能帮助读者解决实际问题，这是非常值得赞赏的。\\n\\n我建议您在下一篇博客中可以深入探讨如何处理大文件时的性能优化。比如，您可以介绍一些Python内置的高效读写文件的方法，或者介绍一些第三方库，这些方法和库能够帮助我们更好地处理大文件的读写操作。\\n\\n感谢您的分享，期待您的下一篇博客！再次恭喜您的持续创作！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "在Spring框架中，创建对象数组有多种方式。下面列举了两种常用的方法：b. 在需要使用数组对象的地方，通过使用<ref>标签引用创建好的数组对象，例如：c. 在Java类中，通过getter和setter方法来获取和设置数组对象：这样，在使用MyBean类的时候，可以通过调用getMyArray()方法来获取数组对象。b. 在配置文件中配置数组对象，例如：这样，在需要使用数组对象的地方，Spring会自动将配置文件中定义的数组对象注入到对应的属性中。总结：Spring提供了多种方式来创建对象数组。无论是通过XML配置文件还是注解方式，都可以根据具体的需求选择合适的方式来创建对象数组。以上是两种常用的方法，可以根据实际情况选择适合自己的方式来创建对象数组。在Spring框架中，可以使用两种方式创建对象数组。在上述示例中，元素用于定义对象数组，每个元素将引用其他bean的ID，这些bean将被添加到对象数组中。在上述示例中，通过在AppConfig类中定义@Bean方法来创建对象数组。在myArray()方法中，调用了objectArray()方法来获取对象数组。无论是使用XML配置文件还是Java配置类，都可以实现对象数组的创建。选择哪种方式取决于项目的需求和开发者的个人偏好。在Spring中，我们可以使用多种方式来创建对象数组。下面介绍几种常见的方法。配置文件方式：在Spring的配置文件中，可以使用元素来定义一个对象数组。可以通过元素来指定数组的元素，通过元素来定义每个数组元素的具体实例。使用注解方式：在Spring中，可以使用@Component注解或其派生注解（如@Service、@Repository等）来标记一个类为Spring管理的Bean。可以通过使用@Autowired注解来自动装配需要的对象数组。使用Java配置方式：在Spring中，可以通过使用@Configuration注解来定义一个Java配置类。可以在该类中使用@Bean注解来创建对象数组。无论使用哪种方式，Spring都会负责创建对象数组，并根据配置文件或注解进行相应的依赖注入。我们可以在其他类中使用@Autowired或者通过Spring的ApplicationContext来获取到这些对象数组。PingCode：项目管理 产品管理 知识管理 效能管理 测试管理 协作空间 自动化 目录服务 万象方舟ICP：京B2-20192206 京ICP备13017353号 京公网安备11010802012357号| 违法和不良信息举报邮箱 abuse@worktile.com |© 2021 Worktile.com400-800-1024工作日9:30-21:00在线",
            "client_id固定为20个字符的字符串，用来全局标记一个socket连接，每个客户端连接都会被分配一个全局唯一的client_id。client_id不能自定义，由GatewayWorker自动生成。如果client_id对应的客户端连接断开了，那么这个client_id也就失效了。当这个客户端再次连接到Gateway时，将会获得一个新的client_id。也就是说client_id和客户端的socket连接生命周期是一致的。client_id一旦被使用过，将不会被再次使用，也就是说client_id是不会重复的，即使分布式部署也不会重复。只要有client_id，并且对应的客户端在线，就可以调用Gateway::sendToClient($client_id, $data)等方法向这个客户端发送数据。",
            ""
        ]
    },
    {
        "prompt": "在mysql中，如何调整已有表中的某个字段位置？",
        "doc": [
            "\\n        \\n    请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "",
            "巧用MySQL的临时变量之一：如何批量调整一个字段值，要按指定起始数重新按顺序排前面介绍过如何改小自增类型的大ID，如果只有少量的几个，手工改一下就行了，如何有成本千上万条记录，当然不想手工改了。 如何批量地改呢？假设有主表 CREATE TABLE my_table ( auto_id INT(4) NOT NULL COMMENT ‘流水ID’, new_auto_id INT(4) NULL COMMENT ‘过渡用字段，主要是用来更新其它关联表的对应字段’, PRIMARY KEY (auto_id) ) ENGINE=INNODB DEFAULT CHARSET=utf8 COMMENT=‘测试用主表’; 插入几行测试记录 INSERT INTO my_table(auto_id) VALUES(1), (2), (20000000), (20000010), (20000020), (20000030), (21000000);如何把20000000, 20000010, 20000020, 20000030, 21000000, … 调整为 1000000,1000001,1000002,1000003,1000004,1000005 …在此，将用到临时变量@rownum，把算好的有序值放到 new_auto_id 过渡字段中（不要直接修改auto_id字段!）。 UPDATE my_table mt INNER JOIN( SELECT Q.auto_id, @rownum AS calc_new_auto_id, @rownum := @rownum + 1 AS 下一行 FROM( SELECT auto_id, new_auto_id FROM my_table WHERE auto_id >= 20000000 AND auto_id <= 21000000 # 想把这段改为(能改) 1000000起(想要改到的起始数)至多少未知 ORDER BY auto_id ) Q LEFT JOIN (SELECT @rownum := 1000000 /***** 想要改到的起始数 *****/) p ON 1 = 1 ) QQ ON mt.auto_id = QQ.auto_id SET mt.new_auto_id = QQ.calc_new_auto_id;可以执行中间部分预览一下效果 SELECT Q.auto_id, @rownum AS calc_new_auto_id, @rownum := @rownum + 1 AS 下一行 FROM( SELECT auto_id, new_auto_id FROM my_table WHERE auto_id >= 20000000 AND auto_id <= 21000000 # 想把这段改为(能改) 1000000起(想要改到的起始数)至多少未知 ORDER BY auto_id ) Q LEFT JOIN (SELECT @rownum := 1000000 /***** 想要改到的起始数 *****/) p ON 1 = 1; 注： @rownum AS calc_new_auto_id 是什么意思？ 就是把@rownum赋值给字段啊。 @rownum := @rownum + 1 AS 下一行 这句有什么作用？ 就是准备下一行的 @rownum 啊！不要省！！  合心意吗？最后执行更新new_auto_id字段，效果如下：  数据准备好了！ 如果有明细表，就先更新明细表。 CREATE TABLE my_table_dtl ( dtl_id int(4) NOT NULL AUTO_INCREMENT COMMENT ‘明细表的流水ID’, mst_id INT(4) NULL COMMENT ‘关联字段，my_table的主键auto_id’, PRIMARY KEY (dtl_id) ) ENGINE=InnoDB AUTO_INCREMENT = 0 DEFAULT CHARSET=utf8 COMMENT=‘测试用主表my_table的明细表’;更新明细表的关联字段这样写 UPDATE my_table_dtl dtl INNER JOIN( SELECT d.dtl_id, m.auto_id, m.new_auto_id FROM my_table m LEFT JOIN my_table_dtl d ON m.auto_id = d.mst_id WHERE m.auto_id >= 20000000 AND m.auto_id <= 21000000 /***** 只取要更新部分记录 *****/ ) Q ON dtl.dtl_id = Q.dtl_id SET dtl.mst_id = Q.new_auto_id;最后更新主表 UPDATE my_table mt INNER JOIN( SELECT m.auto_id, m.new_auto_id FROM my_table m WHERE m.auto_id >= 20000000 AND m.auto_id <= 21000000 /***** 只取要更新部分记录 *****/ ) Q ON mt.auto_id = Q.auto_id SET mt.auto_id = Q.new_auto_id; 大功告成！ 以上两个更新，大家看到我这样写，有什么讲究吗？这是一个更新的绝招，按主键更新是速度最快的，只有一千几百行，怎么写都没关系，如果你有上百万行要更新，你的写法可能要十几分钟，我的写法只要一分钟！ 妙！高！实在是高！总结：巧用MySQL的临时变量@xxx，可方便产生的一个有序的数值。如果目标字段在其它表上用到，不要直接更新目标字段，要添加一个过渡字段，把要更新的值准备好放在过渡字段中，然后先更新明细表的关联，最后再更新主表上目标字段。加粉丝看 MySQL技巧系列之《未经证实的葵花宝典》：一篇可以当饭吃的MySQL文章,值得收藏\\n                    CSDN-Ada助手: \\n                    恭喜用户撰写了第11篇博客，看来“MySQL技巧系列”正在蓬勃发展啊！屠龙刀之专杀死锁线程，听起来就很厉害呢！不过，还是希望用户能够继续保持创作热情，为读者带来更多有趣且实用的内容。或许下一步可以考虑深入探讨MySQL其他常见问题的解决方案，让读者受益更多。期待用户的下一篇作品！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第12篇博客！标题看起来很吸引人，内容也很有深度。希望您能继续坚持创作，分享更多有价值的技巧和经验。或许下一步可以考虑写一些实用案例或者分享一些解决问题的思路和方法，让读者更容易理解和应用您的技巧。期待您的下一篇作品！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第9篇博客，内容非常实用！对于MySQL技巧的分享让大家受益匪浅。接下来，建议可以继续深入探讨存储过程的应用场景，或者分享一些高级技巧，让读者更深入地了解MySQL的使用方法。希望您能继续保持创作的热情，期待您更多的精彩内容！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜作者第10篇博客《MySQL技巧系列之《未经证实的葵花宝典》》，看标题就让人期待不已！文章内容不仅丰富实用，而且还让人感觉像是在享用一顿美味的大餐。希望作者能继续保持创作热情，不断分享更多有价值的内容给读者。或许在下一篇博客中，可以加入一些实际案例分析或者是与其他数据库技术的对比，让读者能够更深入地了解MySQL的应用场景和优势。期待作者更加精彩的创作！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜作者再次分享了一篇关于MySQL临时变量的实用技巧！看完您的博客，我对如何在MySQL中实现类似excel表单元格合并的更复杂查询有了更深的理解。希望您能继续保持创作的热情，也期待您能分享更多关于数据库查询优化或者其他数据库技术方面的内容。谦虚地建议，或许您可以探讨一下如何利用MySQL的存储过程或触发器来实现一些复杂的数据处理操作，这也是一个很有挑战性的方向哦。期待您的下一篇精彩博客！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "在 MySQL 中，您可以使用 INSERT 语句向表中的特定位置插入新的字段。假设您有一个名为 your_table 的表，您想在第三个位置插入一个新的字段，可以使用以下 SQL 语句：在这个语句中，your_table 是您要操作的表的名称，new_column_name 是您要添加的新字段的名称，datatype 是新字段的数据类型，existing_column_name 是已存在的字段的名称，在该字段之后添加新字段。例如，如果您有一个名为 users 的表，您想在第三个位置插入一个新的字段 email，您可以使用以下 SQL 语句：这将在 users 表中的 last_name 字段之后插入一个新的 email 字段。\\n        \\n    请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。"
        ]
    },
    {
        "prompt": "如何做websocket性能测试",
        "doc": [
            "wsbench 是一个用于测试 WebSocket 服务器性能的命令行工具。它支持多种协议，包括 WebSocket（RFC6455）、WebSocket-PerMessage-Deflate、WebSocket-Over-HTTP/2 等，并且可以在多个客户端之间并行运行测试。你可以用 wsbench 来评估你的 WebSocket 服务器在高并发下的性能，以确保其能够在实际生产环境中正常工作。此外，它还可以帮助你在不同的协议之间进行比较，以便找到最适合你的解决方案。以下是 wsbench 的一些主要功能：要开始使用 wsbench，请首先安装 Python 3.7 或更高版本。然后，你可以通过 pip 安装 wsbench：接下来，你可以使用以下命令创建一个新的 WebSocket 连接并发送一条消息：这将连接到 wss://example.com/ws 并发送一条消息。你可以通过修改参数来调整测试的行为。完整的选项列表可以通过 wsbench --help 查看。如果你正在寻找一款能够快速、准确地测试 WebSocket 服务器性能的工具，那么 wsbench 将是一个不错的选择。它提供了丰富的功能和易用的界面，可以帮助你更好地理解你的应用程序的性能表现。要了解更多关于 wsbench 的信息或获取最新的更新，请访问 项目页面。让我们一起探索 wsbench，看看它可以为您的 WebSocket 应用程序带来什么样的性能提升吧！请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者gitblog_00009你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "01 环境准备Jmeter对WebSocket协议的环境准备：因为Jmeter本身不支持WebSocket协议的，所以需要安装第三方的插件JMeterWebSocketSampler-1.0.2-SNAPSHOT.jar，并直接将这个jar包放到Jmeter软件的\\\\lib\\\\ext\\\\目录下。查阅https://github.com/maciejzaleski/JMeter-WebSocketSampler/wiki/Dependencies看到，这个插件需要以下几个jar包的支持：WebSocket Sampler1、WebServerServer Name or IP：WebSocket发送的目标服务器的地址或者名称Port Number：WebSocker服务器监听的端口号。（一般是HTTP 80端口，可以通过WireShark数据包得到）2、Timeout:Connection：发送一个连接请求后，Jmeter等待连接完成的最长时间，单位是毫秒Response：对响应消息的最大等待时间3、WebSocket RequestImplementation：只支持RFC6455(v13) ，WebSocket协议标准的最新版。Protocol：有ws与wss之分， ws前缀是WebSocket连接的辨别标识，wss前缀是WebSocket安全连接的辨别标识。根据自己的实际情况填写Streaming Connection：选择这个TCP session要不要保持，如果勾上标识连接会一直存在，如果没有勾上，那么得到第一次响应后该链接就会被关闭。Request data：填入将要发送的请求，要跟开发沟通好，这个是什么格式的消息。4、WebSocket ResponseResponse Pattern：采样器将等待含有该标识的消息并继续通信（或者直到timeout，该连接关闭）Close Connection Pattern：如果服务器返回的消息含有这样的字符，就结束会话。Message Backlog：定义服务器返回消息保留的最大长度。1.创建线程组添加线程组2.在线程组中创建WebSocket测试创建WebSocket Sampler3.配置WebSocket SamplerWebSocket Sampler参数WebSocket的Ip可以通过浏览器的页面检查工具中获取(例:google浏览器中右键 -> 检查)查看WebSocket地址4.添加监听器便于查看分析结果 (常用的有图形结果、察看结果树、聚合报告)选择监听器5.运行测试计划并查看结果运行线程组查看结果这样结束了~~ 感谢每一个认真阅读我文章的人！！！作为一位过来人也是希望大家少走一些弯路，如果你不想再体验一次学习时找不到资料，没人解答问题，坚持几天便放弃的感受的话，在这里我给大家分享一些自动化测试的学习资源，希望能给你前进的路上带来帮助。我们学习必然是为了找到高薪的工作，下面这些面试题是来自阿里、腾讯、字节等一线互联网大厂最新的面试资料，并且有字节大佬给出了权威的解答，刷完这一套面试资料相信大家都能找到满意的工作。           视频文档获取方式： 这份文档和视频资料，对于想从事【软件测试】的朋友来说应该是最全面最完整的备战仓库，这个仓库也陪伴我走过了最艰难的路程，希望也能帮助到你！以上均可以分享，点下方进群即可自行领取。\\n        \\n    \\n                    2301_80109773: \\n                    开头看到好多了\\n                \\n                    葳蕤轩: \\n                    感觉写得很好啊，怎么没人评论\\n                \\n                    cykablyta: \\n                    一眼卖课，果然\\n                \\n                    潇洒却风流: \\n                    我现在准备面试了 感觉好慌\\n                \\n                    潇洒却风流: \\n                    大佬 现在入职了吗。感觉怎么样\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "简介：本文将详细介绍如何使用JMeter进行WebSocket测试，包括JMeter的安装与配置、WebSocket插件的安装与使用，以及WebSocket测试的实践经验和建议。通过本文，读者将能够掌握JMeter测试WebSocket的基本方法和技巧，提高测试效率和准确性。一、引言WebSocket作为一种在单个TCP连接上进行全双工通信的协议，已经在许多现代Web应用中得到广泛应用。然而，对于WebSocket的测试，传统的HTTP测试工具往往无法满足需求。这时，我们就需要借助JMeter这样的强大性能测试工具来进行WebSocket测试。本文将分享我在使用JMeter进行WebSocket测试过程中的一些经验总结，希望能对大家有所帮助。二、JMeter的安装与配置首先，我们需要从Apache JMeter的官方网站下载并安装JMeter。安装完成后，我们需要在JMeter的bin目录下找到jmeter.properties文件，并修改其中的language属性为zh_CN，以便将JMeter的界面语言设置为中文。此外，我们还需要在JMeter的选项中设置外观为Metal，以便获得更好的显示效果。三、WebSocket插件的安装与使用由于JMeter本身并不支持WebSocket测试，因此我们需要安装WebSocket插件。在安装插件之前，我们需要从JMeter的插件仓库中下载最新的WebSocket插件，并将其jar包放入JMeter的lib/ext目录下。然后，我们需要重启JMeter，并在插件管理器中勾选WebSocket插件，以便在测试计划中使用WebSocket Sampler。四、WebSocket测试的实践经验在进行WebSocket测试时，我们需要根据实际需求设置线程组、Sampler等参数。其中，线程组的设置应根据发压机的配置进行调整，以避免因线程数过多而导致运行报错。例如，如果发压机的配置是6核12线程，那么最大线程数可以设置为160。但是，需要注意的是，当线程数超过发压机的实际处理能力时，发送速度将不再增加。因此，我们可以通过设置ramp-up period来逐渐增加线程数，以便找到发压机刚好到达最大发送速度时的线程数。此外，我们还需要根据实际需求选择合适的Sampler类型。常用的Sampler类型包括websocket request-response Sampler（连接+发送data或者只发data）等。在选择Sampler类型时，我们需要根据被测试的WebSocket服务的具体需求进行选择，并设置相应的参数。五、建议与总结在进行WebSocket测试时，我们需要注意以下几点：合理设置线程数和ramp-up period，以避免因线程数过多而导致运行报错或发送速度不再增加。根据实际需求选择合适的Sampler类型和参数，以确保测试的准确性和有效性。在测试过程中，需要密切关注测试结果和性能数据，以便及时发现问题并进行优化。总之，JMeter作为一款强大的性能测试工具，在WebSocket测试中也具有广泛的应用前景。通过本文的介绍和经验总结，相信读者已经掌握了JMeter测试WebSocket的基本方法和技巧。希望这些经验和建议能对大家的实际工作有所帮助。六、参考文献与资源Apache JMeter官方网站：https://jmeter.apache.org/JMeter插件仓库：https://jmeter-plugins.org/WebSocket协议规范：https://tools.ietf.org/html/rfc6455以上资源提供了JMeter、WebSocket插件以及WebSocket协议规范的详细信息，供读者进一步学习和参考。七、致谢感谢所有对本文提供帮助和支持的人，包括JMeter社区、WebSocket插件的作者以及参考文献的作者们。他们的贡献使得本文能够顺利完成，并为读者提供了有价值的信息和建议。文心一言是百度打造出来的人工智能大语言模型，具备跨模态、跨语言的深度语义理解与生成能力本文整理自  QCon 全球软件开发大会 -从 MLOps 到 LMOps 分论坛的同名主题演讲Sugar BI教你怎么做数据可视化 - 拓扑图，让节点连接信息一目了然百度百舸·AI 异构计算平台，是百度智能云将百度内部强大的 AI 工程能力面向市场推出的解决方案。今天跟大家的演讲主题，主要是想交流如何去构建这样两个自动驾驶的数据闭环链路。\\nLMOps 相关的概念以及关键技术登录后可评论，请前往 登录 或 注册全国首批获得可信云服务认证对象存储服务:N002002 云数据库服务:N003002© 2022 Baidu 使用百度前必读 ｜ 京ICP证030173",
            "史东来"
        ]
    },
    {
        "prompt": "解释\n```TypeScript\nexport default {\n  path: 'organizational',\n  name: 'organizational',\n  redirect: { name: 'applications' },\n  children: [\n    {\n      path: 'applications',\n      name: 'organizational-applications',\n      meta: { title: '组织应用', icon: 'app' },\n      component: () => import('packages/components/organizational/admin.vue')\n    }\n  ]\n};\n\n```",
        "doc": [
            "push(to: RouteLocationRaw): Promise<NavigationFailure | void | undefined> replace(to: RouteLocationRaw): Promise<NavigationFailure | void | undefined>;        $route / route:    有当前路由的所有信息！         $router / router:  用来进行路由操作的！ redirect: { name: 'routeName' }, 设置为路由的name最保险，别想着其他花里胡哨的。在写 redirect 的时候，如果不是嵌套路由，可以省略 component 配置。你重定向到自己的子路由，那肯定要有 component  啊，不然你 router-view 在哪（笑）component 变 components，具体看代码本示例包含 path , name ,  meta , component , components , children ,  redirect , props , 路由懒加载 , alias 。跳转目标路由，声明了params或query之后，(选项式api写法) 通过this.$route.params 或 this.$route.query 即可拿到对应的路由参数；组合式API写法如下：route:  有当前路由的所有信息 router: 用来进行路由操作的！ 组件守卫：有3个，其中2个没屁用。beforeRouteEnter ：能处理的 beforeEnter 都可以。beforeRouteUpdate ：更没必要，直接 watch route.params 即可。beforeRouteLeave ：有点用，如果用户跳转路由时，当前页面编辑内容未保存，则可以 return false 取消路由跳转。（setup 内则手动引入 onBeforeRouteLeave）触发顺序（1）（2）（3）（4）。组件守卫其中2个懒得算，如果算上 beforeRouteLeave 那 beforeRouteLeave 排在beforeEach 前面。每个守卫方法接收两个参数：应用场景示例：页面菜单和所拥有的路由是根据用户角色动态生成的，此时就需要配合addRoute功能来实现需求。Vue Router 提供了两个功能来查看现有的路由：<router-view>、<keep-alive> 和 <transition>​ transition 和 keep-alive 现在必须通过 v-slot API 在 RouterView 内部使用：html5模式需要在服务器上设置初次访问如果404时，进行路由回退：nginx 如下:其他的详见官网；\\n        \\n    \\n                    木小规: \\n                    这里改好了，但是第一个参数那又提示了个不可分配的形参类型，实参类型 DefineProps<LooseRequired<TeamCardListProps>, BooleanKey<TeamCardListProps>> 不可分配给形参类型 DefineProps<DefineProps<LooseRequired<TeamCardListProps>, never>, keyof DefineProps<LooseRequired<TeamCardListProps>, never>>,\\n                \\n                    oumae-kumiko: \\n                    userList: ()=> []\\n                \\n                    木小规: \\n                    对，显示的也是这里报错，不知道咋改...\\n                \\n                    oumae-kumiko: \\n                    userList: [] as UserType[]  这错了\\n                \\n                    木小规: \\n                    interface UserCardListProps {\\n  loading: boolean;\\n  userList: UserType[];\\n}\\n\\nconst props = withDefaults(defineProps<UserCardListProps>(), {\\n  loading: true,\\n  // @ts-ignore\\n  userList: [] as UserType[],\\n});\\n大佬，这个一直报形参不匹配问题\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "设置指定向 动态路由 正则 匹配404 index.js 代码user.js\\n        \\n    \\n                    江-月*夜: \\n                    能帮助你就好\\n                \\n                    ttttjwww: \\n                    方便问一下大佬是干前端的吗？\\n                \\n                    ttttjwww: \\n                    感谢大佬，学校作业刚好就是让我们写这种的\\n                \\n                    江-月*夜: \\n                    好像是的\\n                \\n                    江-月*夜: \\n                    最大和最小\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "本文主要以react-router-dom v6版本为主，旧版过多概念不介绍，想必诸位应该也知道该库是做什么用的 😅，主要引领大家入门了解 react-router-dom 的使用，快速上手最新React Router v6 版本。首先，确保你已经安装了Node.js和npm或yarn。然后，在项目的根目录下运行以下命令来安装react-router-dom。👉 打开你的终端并使用 Vite 引导一个新的 React 应用程序：目前这里最新的版本为：React Router 支持两种路由模式：BrowserRouter 和 HashHistory。路由组件是用于处理路由的组件。在 React Router 中，路由组件通常用于显示不同的页面或视图。在项目src目录中创建一个App.jsx的文件，并在其中编写示例代码：Route组件用于定义路由规则。Route组件接收两个属性：path和element。path属性用于定义路由的路径，element属性用于定义路由对应的组件，index属性用于指定默认子路由。Routes组件是之前版本种Switch组件的变名，抓哟用于将多个Route组件组合在一起。Link和NavLink组件类似于 a 标签，用于创建路由链接。Link组件接收一个to属性，用于指定链接的地址，NavLink组件相似，区别是可以添加一些样式来区分当前页面。一共两种形式，如下代码示例：Navigate组件是对旧版本的 Redirect 的替代品。如下代码示例：Outlet组件用于在路由被匹配时，渲染匹配到的路由组件。用于占位，告诉 React Router 嵌套的内容应该显示在哪里。如下代码示例：在声明式路由中，不能写index, 但可以让 path: “” , 来实现显示默认组件;如下代码示例：编程式导航就是通过 JS 代码来控制路由的跳转，包括路由的跳转、路由的参数传递、路由的钩子函数等。useNavigate 函数用于获取路由导航的函数，该函数可以接收一个参数，表示要跳转到的路由地址。同时新版本中移除了useHistory 函数。如下代码示例：跳转到指定路由，并生成历史记录路由设计格式为：<Route path=\"about\" element={<About/>} />路由设计格式为：<Route path=\"about/:id/:keyword\" element={<About/>} />路由设计格式，以上两种方式都可以跳转到指定路由，并替换当前历史记录使用navigate(-1)后退到前一页，navigate(-2)后退到前两页。通过React Router提供的函数，从而获取解析地址栏中的参数。 注意：在最新版路由中组件不能直接从props中获取参数useParams 函数用于获取地址栏中的params参数，其路由地址参考为localhost:3000/home/1。如下代码示例：useSearchParams 函数用于获取地址栏中的search参数，其路由地址参考为localhost:3000/home?id=1。其中返回的searchParams函数，具有以下方法：如下代码示例：useLocation 函数用于获取地址栏中的search和params参数。 返回的location对象，具有以下属性：如下代码示例：在类组件中不可以和函数组件使用的方式一致，需要通过HOC高阶组件封装，如直接使用会报错。大致意思就是说无效的hooks调用，hooks只能在函数组件的主体内部调用，那么已经使用了class组件的形式，又不想修改为函数组件，要如何使用呢？答案就是使用HOC高阶组件包装一下。封装如下HOC代码：使用方式如下：在React中，使用import()函数来实现路由的懒加载。通过import()函数，可以异步加载路由组件，提高页面加载速度。创建一个Suspense组件，用于包裹需要懒加载的路由组件。使用@loadable/component库来加载路由组件。到这里相信你也已经了解了，React Router的使用方式了，是不是很简单呢，接下来就可以开始你的业务代码了，如果本文对你有帮助，还请不要吝啬你的 👍。本文完~\\n                    热爱sunny: \\n                    首页感谢指出，个人原创内容会有疏漏，内容已修正，可以在3.3章节中查看，添加如下代码：\\n[code=javascript]\\n// 创建reducer(合并拆分的reducer)\\nconst rootReducer= combineReducers({\\n\\tusers,\\n});\\n[/code]\\n                \\n                    你怎么看不见我。: \\n                    少了，rootReducer\\n                \\n                    热爱sunny: \\n                    是的，新版变得很灵活，同时移除了旧版中的一些方法，需要注意\\n                \\n                    D.Shun: \\n                    问题已解决，v5和v6导入组件和函数的方式还是有点区别\\n                \\n                    D.Shun: \\n                    我也使用vite创建的项目，引入了最新版路由，react项目运行时报错，怎么回事，求解决方案\\n\"vite\": \"^5.1.6\"\\n\"react-dom\": \"^18.2.0\",\\n\"react-router-dom\": \"^6.22.3\",\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "本文将以vue-element-admin来介绍它的集成及用法。vue-element-admin的相关信息如下：github地址：https://github.com/PanJiaChen/vue-element-admin官方文档：vue-element-admin好了，下面我们开始。1.首先我们从github下载源码。然后本地打包运行。依赖安装：npm install --registry=https://registry.npmmirror.com运行：npm run dev可以看到浏览器自动打开了：http://localhost:9527/#/dashboard2.新增模板-部门管理首先路由router/index.js中添加路由配置。接着新增views/dept/index.vue接着新增api/dept.js新增mock/dept.jsmock/index.js中新增可以看到菜单和页面。"
        ]
    },
    {
        "prompt": "基于weakMap，16.6， requestIdleCallback做时间切片class，可以添加异常任务处理，取消任务，动态调整优先级，任务状态管理，优化性能，添加更多错误处理机制",
        "doc": [
            "版本信息：目录结构：task_pro –app ----… ----tasks.py –task_pro ----… ----celery.py ----settings.py配置settings.py生成数据库迁移之后生成的表结构django_celery_beat.models.PeriodicTask 此模型定义要运行的单个周期性任务。 django_celery_beat.models.IntervalSchedule 以特定间隔（例如，每5秒）运行的计划。 django_celery_beat.models.CrontabSchedule 与像在cron项领域的时间表 分钟小时日的一周 DAY_OF_MONTH month_of_year django_celery_beat.models.PeriodicTasks 此模型仅用作索引以跟踪计划何时更改配置celery.py在tasks.py创建tasks任务创建定时任务（打开django shell终端）运行任务\\n        \\n    \\n                    钢铁慈猫: \\n                    external_url的ip地址后面加端口后就访问不了页面了。博主知道这种情况么。\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第19篇博客！标题看起来很吸引人，关于Django使用django-celery-beat动态添加定时任务的方法。这个主题很实用，我相信很多人都会对此感兴趣。\\n\\n在您的博客中，您似乎给出了一种非常有用的解决方案。我想了解更多关于这个方法的细节，以及您是如何发现并掌握这个技巧的。我也很期待您在未来的博客中分享更多关于Django和其他相关技术的经验和教程。或许您可以探索一些高级的Django特性，或者分享一些实战经验，这样读者们可以更深入地了解如何在实际项目中应用这些技术。\\n\\n再次恭喜您的创作，期待您未来更多精彩的博客！\\n                \\n                    北风之神c: \\n                    写得赞，博主用心了，但主要还是celery太难用了。  \\n    \\n    celery对目录层级文件名称格式要求太高，只适合规划新的项目，对不规则文件夹套用难度高。\\n\\n所以新手使用celery很仔细的建立文件夹名字、文件夹层级、python文件名字，\\n\\n所以网上的celery博客教程虽然很多，但是并不能学会使用，因为要运行起来需要以下6个方面都掌握好，博客文字很难表达清楚或者没有写全面以下6个方面。\\ncelery消费任务不执行或者报错NotRegistered，与很多方面有关系，如果要别人排错，至少要发以下6方面的截图，因为与一下6点关系很大。\\n\\n1) 整个项目目录结构,celery的目录结构和任务函数位置，有很大影响\\n   \\n2) @task入参 ,用户有没有主动设置装饰器的入参 name,设置了和没设置有很大不同，建议主动设置这个名字对函数名字和所处位置依赖减小\\n   \\n3) celery的配置，task_queues(在3.xx叫 CELERY_QUEUES )和task_routes (在3.xx叫 task_routes)\\n\\n4) celery的配置 include （在3.xx叫 CELERY_INCLUDE）或者 imports (3.xx CELERY_IMPORTS)  或者 app.autodiscover_tasks的入参\\n\\n5) cmd命令行启动参数 --queues=  的值\\n   \\n6) 用户在启动cmd命令行时候，用户所在的文件夹。\\n\\n在不规范的文件夹路径下，使用celery难度很高，一般教程都没教。\\n[项目文件夹目录格式不规范下的celery使用演示](https://github.com/ydf0509/celery_demo) 。\\n\\n    此国产分布式函数调度框架  https://function-scheduling-distributed-framework.readthedocs.io/zh_CN/latest/index.html   ，\\n    从用法调用难度，用户所需代码量，超高并发性能，qps控频精确程度，支持的中间件类型，任务控制方式，稳定程度等19个方面全方位超过celery，任何方面都是有过之而无不及 。发布性能提高1000%，消费性能提高2000%\\n                \\n                    LaoYuanPython: \\n                    欢迎博主在CSDN安家！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "在使用requestidlecallback的时候，在ios测试中发现，safari浏览器这个函数会报错。所以使用raf和messageChannel来简单实现一下这个功能。\\n                \\n                  博客等级\\n                \\n                  \\n              \\n        \\n    \\n                    qq_44609688: \\n                    没用啊 我H5遇到这情况\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "DjJob是一个基于Celery的异步任务处理库，专为Django应用程序设计。它提供了一个简单的API用于创建、调度和管理异步任务，并且与RabbitMQ、Redis等消息队列后端兼容。DjJob旨在简化在Django中使用Celery的过程。它提供了以下特性：通过使用DjJob，开发人员可以在Django应用中轻松实现复杂的异步任务处理需求，如发送电子邮件、批量数据处理、网络请求等。DjJob适用于需要异步处理任务的任何Django应用程序。以下是一些可能的应用场景：DjJob具有以下几个主要特点：要开始使用DjJob，请按照以下步骤操作：DjJob是一个方便易用的异步任务处理库，旨在简化Django中的Celery使用过程。无论你是新手还是经验丰富的开发者，都可以利用DjJob的强大功能来提高你的工作效率和应用性能。现在就尝试一下DjJob吧！了解更多详情，请访问项目页面：https://gitcode.com/seatgeek/djjob请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者gitblog_00002你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "近年来，随着存储硬件的革新与网络技术的突飞猛进，如NVMe SSD和超高速网络接口的普及应用，I/O性能瓶颈已得到显著改善。然而，在2020年及以后的技术背景下，尽管SSD速度通过NVMe接口得到了大幅提升，并且网络传输速率也进入了新的高度，但CPU主频发展并未保持同等步调，3GHz左右的核心频率已成为常态。在当前背景下Apache Spark等大数据处理工具中，尽管存储和网络性能的提升极大地减少了数据读取和传输的时间消耗，但Apache Spark框架基于类火山模型的行式处理，在执行复杂查询、迭代计算时对现代CPU并行计算特性和向量化计算优势的利用率仍然有待提高。同时，传统TCP/IP网络通信模式下，CPU承担了大量的协议解析、包构建和错误处理任务，进一步降低了整体数据处理效率，这导致Apache Spark 在实际运行中并没有达到网络、磁盘、CPU的IO瓶颈。在Apache Spark的数据处理流程中，如上图所示，整个过程从数据源开始，首先经历数据加载阶段。Spark作业启动时，任务被分配到各个运算节点（executor），它们从诸如HDFS、S3(Amazon Simple Storage Service)或其他支持的存储系统中高效地获取数据。一旦数据成功加载至内存或磁盘上，运算节点首先开始数据的解压缩工作，然后执行相应的计算操作，例如map、filter、reduceByKey等转换操作。接下来，在执行涉及不同分区间数据交换的操作（如join、groupByKey）时，Spark会触发Shuffle阶段。在这个阶段，各个executor将计算后的中间结果按照特定键值进行排序，并通过网络传输至其他executor，以便进行进一步的合并和聚集操作。完成Shuffle后，数据再次经过一轮或多轮计算处理，以产出最终结果。当所有任务完成后，结果数据会被压缩后写回目标存储系统，如HDFS、数据库或其他外部服务，从而完成整个数据处理生命周期。综上所述，在Apache Spark的数据处理过程中，尽管其设计高度优化，但仍面临多个技术挑战：首先，传统硬件中，数据传输需要CPU解码并通过PCIe总线多次搬运至内存和硬件，使用反弹缓冲区，虽然是临时存储但也增加复杂度与延迟；列式存储（Parquet、ORC）高效压缩同类数据减少I/O，但读取时的解压和编解码操作加重了CPU负担，尤其在仅需处理部分列时效率下降；Apache Spark采用行式处理，如DataSourceScanExec按行扫描可能导致冗余加载，并因频繁调用“next”及虚函数引发CPU中断，全行扫描对部分列查询性能损耗显著。其次，随着数据量不断激增以及IO技术的提升，基于CPU的优化带来的收益越来越不明显，传统的CPU算力逐渐成为计算瓶颈。在涉及特定算子操作时，性能问题尤为突出。例如，高散列度数据的 join，高散列度数据的 aggregate。在执行join操作时，尤其当采用基于哈希的join策略时，因为数据散列程度越高，哈希计算的负载就越大，对CPU和内存的计算能力要求也就越高。哈希计算是一个计算密集型任务，需要CPU执行大量的计算操作，并且可能涉及到内存的读取和写入。当数据散列程度较高时，哈希计算的复杂度增加，可能导致CPU和内存的使用率增加，从而影响系统的整体性能。其次，数据散列程度较高可能会增加哈希冲突的概率，进而影响内存的使用效率。当哈希冲突较多时，可能需要额外的操作来解决冲突，例如使用链表或者开放地址法来处理冲突。这些额外的操作可能会占用额外的内存空间，并且增加内存的读写次数，从而降低内存的使用效率。此外，Shuffle作为Spark计算框架中决定整体性能的关键环节之一，其内部包含了多次序列化与反序列化过程、跨节点网络传输以及磁盘IO操作等复杂行为。这些操作不仅增加了系统开销，而且可能导致数据局部性的丧失，进一步拖慢整个任务的执行速度。因此，如何优化Shuffle过程，减小其对系统资源的影响，是Spark性能调优的重要方向。因此，面对硬件条件的新格局，开发者不仅需要深入研究如何优化Apache Spark内部机制以适应大规模并行计算需求，还应探索将特定类型的数据运算任务转移到诸如GPU、FPGA或其他专用加速器等更高效能的硬件上，从而在CPU资源有限的情况下，实现更高层次的大数据处理性能提升。我们采用软硬件结合方式，无侵入式的集成Apache Spark，并在Spark数据计算全链路的3大方面都进行了全面提升和加速。在「数据加载」方面，自研的DPU数据加载引擎直读硬件存储的数据到计算卡中，优化掉大量的内存与加速卡的PCIe数据传输性能损耗，同时在计算卡中进行数据的解压缩计算。同理在最后的结果输出阶段，也在计算卡中进行数据压缩。在「离线计算」方面，自研的DPU计算引擎拥有强大的计算能力、容错能力、并满足 Spark 引擎日益复杂的离线处理场景和机器学习场景。在「数据传输」方面，采用基于远程直接内存访问（RDMA）技术，以提高集群间的数据传输效率。加速阶段如下图所示，核心数据加速分为四个部分，分别为 1.数据读取阶段；2.任务处理阶段；3.Shuffle数据传输阶段；4.数据输出阶段。在Apache Spark的数据处理流程中，数据加载阶段是整个ELT（Extract, Load, Transform）作业的关键起始步骤。首先，当从传统硬件架构的数据源加载本地数据时，面临如下挑战：数据传输瓶颈：在传统的硬件体系结构中，数据加载过程涉及到多次通过CPU和PCIe总线的搬运操作。具体而言，每一份数据需要先从数据源经过CPU解码并通过PCIe通道传输至系统内存，然后再次经由CPU控制并经过PCIe接口发送到特定硬件如GPU进行进一步处理。在此过程中，“反弹缓冲区”作为临时存储区域，在系统内存中起到了桥接不同设备间数据传输的作用，但这也会增加数据搬移的复杂性和潜在延迟。列式存储的优势与挑战：在大数据环境中，列式存储格式如Parquet和ORC等被广泛采用，因其高效性而备受青睐。由于同一列中的数据类型相同，可以实现高效的压缩率，并且内存访问模式相对线性，从而减少I/O开销。然而，这也带来了问题，即在读取数据前必须进行解压缩处理，这无疑增加了CPU额外的计算负担，尤其是在需要对部分列进行运算的情况下。行式处理效率考量：在早期版本或某些特定场景下，Apache Spark在执行物理计划时倾向于行式处理数据。例如DataSourceScanExec算子负责底层数据源扫描，其默认按行读取数据，这种策略可能导致不必要的列数据冗余加载及频繁调用“next”方法获取下一行记录。这一过程中，大量的虚函数调用可能引发CPU中断，降低了处理效率，特别是在仅关注部分列时，会因为全行扫描而引入额外的性能损失。在数据压缩解压缩过程中，压缩解压缩策略选择阶段是整个过程的开始。传统的硬件体系结构中，数据的压缩和解压缩过程通常只能依赖CPU完成，没有其他策略可以选择，从而无法利用GPU、DPU等其他处理器资源。这种局限性导致数据压缩解压缩过程会大量占用CPU资源，同时，与DPU相比，CPU的并行处理能力相对较弱，无法充分发挥硬件资源的潜力。在大规模数据处理的场景下，数据压缩解压缩过程可能成为CPU的瓶颈，导致系统性能下降。此外，由于数据压缩解压缩是一个计算密集型任务，当系统中同时存在其他需要CPU资源的任务时，压缩解压缩过程可能会与其他任务产生竞争，进一步加剧了CPU资源的紧张程度，导致系统整体的响应速度变慢。在DPU（Data Processing Unit）架构设计中，采用了一种直接内存访问（DMA）技术，该技术构建了从DPU内存到存储设备之间直接的数据传输路径。相较于传统的数据读取方式，DMA机制有效地消除了CPU及其回弹缓冲区作为中间环节的必要性，从而显著提升了系统的数据传输带宽，并减少了由数据中转造成的CPU延迟以及利用率压力。具体而言，在DPU系统内部或与之紧密集成的存储设备（例如NVMe SSD）上，内置了支持DMA功能的引擎，允许数据块以高效、直接的方式在存储介质与DPU内存之间进行双向传递。为了确保这一过程的精确执行，系统精心设计了针对DMA操作的专用机制和缓存管理策略，其中包含了由存储驱动程序发起的DMA回调函数，用于验证并转换DPU内存中的虚拟地址至物理地址，进而保证数据能够准确无误地从NVMe设备复制到DPU指定的内存区域。当应用程序通过虚拟文件系统（VFS）向底层硬件提交DPU缓冲区地址作为DMA目标位置时，用户空间库将捕获这些特定于DPU的缓冲区地址，并将其替换为原本提交给VFS的代理CPU缓冲区地址。在实际执行DMA操作之前，运行于DPU环境的软件会在适当的时机调用相关接口，识别出原始的CPU缓冲区地址，并重新提供有效的DPU缓冲区地址，以便DMA操作能正确且高效地进行。由此，在不增加CPU处理负担的前提下，实现了NVMe设备与DPU内存间数据块迁移的高度优化流程。吞吐提升：CPU的PCIe吞吐可能低于DPU的吞吐能力。这种差异是由于基于服务器的PCIe拓扑到CPU的PCIe路径较少。如图所示DPU支持直接数据路径（绿色），而非通过CPU中的反弹缓冲区间接读取的路径（红色）。这可以提高带宽、降低延迟并减少CPU和DPU吞吐量负载。降低延迟：DPU直读数据路径只有一个副本，直接从源到目标。如果CPU执行数据移动，则延迟可能会受到CPU可用性冲突的影响，这可能会导致抖动。DPU缓解了这些延迟问题。提升CPU利用率：如果使用CPU移动数据，则投入到数据搬运的CPU利用率会增加，并干扰CPU上的其余工作。使用DPU可减少CPU在数据搬用的工作负载，使应用程序代码能够在更短的时间内运行。解压缩：DPU读取parquet文件的同时会将文件解压，不用通过CPU进行编译码与解压计算，直接进行谓词下推减少读取数据量从而提升数据读取效率。更适合列式处理数据结构：列式数据结构在运算中有更好的性能，有利于Spark的Catalyst优化器做出更加智能的决策，如过滤条件下推、列剪枝等，减少了不必要的计算和数据移动。在执行阶段会对列式数据进行向量化操作，将多条记录打包成一个批次进行处理，提升运算效率。2015年基于Spark Summit调研显示，2010年硬件的基本情况是存50+MB/s（HDD），网络是1Gpbs，CPU是～3GHz；五年后，存储和网络都有了10倍以上的提升，但是CPU却并没有什么变化。2020年，硬件的变化让io性能有了进一步提升。SSD有了NVMe接口，同时有了超高速网络，但CPU仍然是3赫兹。那么当下我们的挑战是在这样的硬件条件下，如何最大化CPU性能，如何使用更高效的硬件替代CPU进行专业数据运算。我们考虑如何将具有高性能计算能力的DPU用到 Spark 里来，从而提升 Spark 的计算性能，突破 CPU 瓶颈。接下来将介绍DPU计算引擎：上图是DPU的整体设计。目前支持的算子覆盖Spark生产环境常用算子，包括Scan、Filter、Project、Union、Hash Aggregation、Sort、Join、Exchange等。表达式方面，我们开发了目前生产环境常用的布尔函数、Sum/Count/AVG/Max/Min等聚合函数。在整个流转过程中，RACE Plugin层起到承上启下的关系：1. 最核心的是Plan Conversion组件，在Spark优化 Physical Plan时，会应用一批规则，Race通过插入的自定义规则可以拦截到优化后的Physical Plan，如果发现当前算子上的所有表达式可以下推给DPU，那么替换Spark原生算子为相应的可以在DPU上执行的自定义算子，由HADOS将其下推给DPU 来执行并返回结果。2. Fallback组件，Spark支持的Operator和Expression非常多，在Race研发初期，无法 100% 覆盖 Spark 查询执行计划中的算子和表达式，因此 Race必须有先前兼容回退执行的能力。3. Strategy组件， 因为fallback 这个 operator 前后插入行转列、列转行的算子。因为这两次转换对整个执行的过程的性能损耗是很大的。针对这种情况，最稳妥的方式就是整个子树Query全部回退到CPU，而选择哪些情况下执行这个操作至关重要。4. Metric组件，Race会收集DPU执行过程中的指标统计，然后上报给Spark的Metrics System做展示、Debug、API调用。通过Spark Plugin机制成功地将Spark计算任务卸载至DPU上执行，充分利用了DPU强大的计算处理能力，有效解决了CPU在复杂数据处理中的性能瓶颈问题。经过一系列详尽的测试与验证，在TPC-DS基准测试中99条SQL语句的执行表现显著提升：显著提高查询性能：本方案在相同硬件条件下，使得单个查询的执行时间最多可缩短到原来的四分之一左右，即最高性能提升达到4.48倍；而在表达式操作层面，性能优化效果更为突出，某些情况下甚至能提升至原始速度的8.47倍。算子级加速明显：在对关键算子如Filter和哈希聚合操作进行评估时，相较于原生Spark解决方案，Filter算子的执行效率提升了高达43倍，而哈希聚合算子性能也提升了13倍。这得益于我们减少了列式数据转换为行式数据的额外开销，以及DPU硬件层面对运算密集型任务的强大加速作用。大幅度降低CPU资源占用：通过DPU加速卸载后，系统资源利用率得到显著改善。在TPC-DS测试场景下，CPU平均使用率从60%大幅下降至5%，释放出更多CPU资源用于其他业务逻辑处理，增强了系统的整体并发能力和响应速度。在Apache Spark的数据处理框架中，Shuffle阶段扮演着至关重要的角色，然而，该过程因其涉及大规模数据在网络中的传输而显著增加了执行时间，容易成为制约Spark作业性能的关键瓶颈环节。传统的网络通信机制在 Shuffle 过程中的表现不尽如人意。具体表现为：· 数据的发送和接收过程中，操作系统内核参与了必要的管理与调度工作，这一介入导致了额外的延迟开销。每个数据单元在经过操作系统的网络协议栈进行传递时，需历经多次上下文切换以及数据复制操作，这些都无形中加重了系统负担。· 另一方面，在基于传统TCP/IP等网络协议的通信模式下，CPU需要承担大量的协议解析、包构建及错误处理等任务，这不仅大量消耗了宝贵的计算资源，而且对通信延迟产生了不利影响，进一步降低了整体的数据处理效率。将RDMA技术应用于Apache Spark，尤其是在Shuffle过程中，可以大幅度减轻网络瓶颈带来的影响。通过利用RDMA的高带宽和低延迟特性，Spark的数据处理性能有望得到显著的提升。RDMA技术允许网络设备直接访问应用程序内存空间，实现了内核旁路（kernel bypass）。这意味着数据可以直接从发送方的内存传输到接收方的内存，无需CPU介入，减少了传输过程中的延迟。如下图所示。在该方案中，Netty客户端被RDMA客户端所取代，并充分利用了RDMA单边操作的特性。具体实现时，磁盘数据通过内存映射（MMAP）技术加载至用户空间内存，此后，客户端利用RDMA能力在网络层面执行直接内存访问操作。这一改进避免了数据在操作系统内核内存和网络接口间多次复制，从而提高了数据传输速度、降低了延迟并减轻了CPU负载。数据传输效率提升：得益于RDMA的低延迟与高带宽优势，Spark中的数据处理速率显著提高。这是因为RDMA能够实现在网络设备与应用内存之间的直接数据传输，减少了对CPU的依赖，进而降低了数据传输过程中的延时。CPU占用率降低：RDMA的Kernel Bypass特性使得数据可以直接从内存绕过内核进行传输，这不仅大大减少了CPU在数据传输阶段的工作负担，而且提升了CPU资源的有效利用率，释放出更多计算资源用于Spark的核心计算任务。端到端处理时间缩短：对比传统TCP传输方式，在多项性能测试中，采用RDMA的方案明显缩短了端到端的数据处理时间，这意味着整体数据处理流程更加高效，能够在更短的时间内完成相同规模的计算任务。Shuffle阶段性能优化：在Apache Spark框架中，Shuffle阶段是一个关键且对性能影响较大的环节。借助RDMA减少数据传输和处理所需时间的优势，有效地优化了Shuffle阶段的性能表现，从而全面提升整个数据处理流程的效率。大规模数据处理能力增强：对于处理大规模数据集的场景，RDMA所提供的高效数据传输及低延迟特性尤为重要。它确保Spark能在更高效地处理大量数据的同时，提高了大规模数据处理任务的可扩展性和处理效率。值得注意的是，在多种实际应用场景下，使用RDMA通常能够带来大约10%左右的性能提升效果。然而，具体的加速效果会受到业务逻辑复杂性、数据处理工作负载特性的综合影响，因此可能有所波动。在严格的单机单线程本地（local）模式测试环境下，未使用RDMA技术，针对1TB规模的数据集，通过对比分析TPC-DS基准测试SQL语句执行时间，其中有5条语句的E2E（由driver端提交任务到driver接收输出结果的时间）执行时间得到了显著提升，提升比例均超过2倍，最高可达到4.56倍提升。进一步聚焦于运算符层面的性能改进，在对DPU加速方案与Spark原生运算符进行比较时，观察到运算符执行效率的最大提升比率达到9.97倍。这一显著的加速效果主要源于DPU硬件层面的优化设计和高效运算能力。在遵循TPC-DS基准测试标准的前提下，相较于未经优化的原生Spark解决方案，本方案在关键算子性能方面实现了显著提升。根据测试数据表明，Filter算子的执行效率提升了43倍，而哈希聚合算子的处理速率也提高了13倍之多。这一显著性能飞跃的取得，主要归因于方案深入挖掘并有效利用了DPU所具备的强大计算能力和并行处理特性，从而大幅缩短了相关算子的执行时间，并提升了整个系统的运算效能。通过这种优化措施，不仅确保了在复杂查询和大数据处理任务中更高的响应速度，同时也验证了结合现代硬件技术对Spark性能进行深度优化的有效性和可行性。在实际应用环境中，RDMA（Remote Direct Memory Access）技术展现出显著的性能提升效果。通过直接访问远程内存而无需CPU过多介入，RDMA能够极大地减少数据传输过程中的延迟和CPU占用率，在多个不同场景中实现至少10%以上的性能增长。这一优势体现在网络密集型操作中尤为明显，如大规模分布式系统间的通信与数据交换。基于目前HADOS-RACE已经实现的Snappy压缩解压缩方案，制定了对应的性能测试计划。首先生成snappy测试数据，使用基于CPU和DPU的Spark分别对数据进行处理，记录各自的Snappy压缩解压缩阶段和Spark整体端到端的耗时和吞吐。执行的测试语句为：select * from table where a1 is not null and a2 is not null（尽量减少中间的计算过程，突出Snappy压缩解压缩的过程）。单独分析Snappy压缩解压缩阶段，基于CPU的Snappy解压缩，吞吐量为300MB/s。而将解压缩任务卸载到DPU后，DPU核内计算的吞吐量可达到1585MB/s。可以看到，基于DPU进行Snappy解压缩，相比基于CPU进行Snappy解压缩，性能可提升约5倍。基于CPU的Spark计算过程总体比基于DPU的Spark计算过程耗时减少了约50%。相当于基于DPU的端到端执行性能是基于CPU端到端性能的两倍。详细测试结果如下所示：性能方面，得益于DPU做算力卸载的高效性，相对于社区版本Spark具备较为明显的优势，尤其是单机场景下，该场景下由于更偏重于纯算力，优势更加明显。资源方面，得益于更优秀的数据结构设计，在内存、IO和网络资源使用上，都具备不同程度的优势，特别是内存资源上，较社区版本Spark优势明显。· 集群场景下性能提升较单机场景减弱，网络传输的性能损耗削弱了整体性能提升能力。· 功能覆盖上，目前主要围绕TPC-DS场景以及一些客户提出的业务场景，未来还需要覆盖更多的业务场景。· 优化和完善现有架构，继续完善基础功能覆盖。· 未来计划在加速纯计算场景的同时，也同步引入更多维度的加速方案（如存储加速、网络加速），提升集群模式下的加速性能。· 除了加速Spark，也同步探索更多的加速场景，如实时大数据、AI等算法场景加速。"
        ]
    },
    {
        "prompt": "vue   计算属性计算sku组合的数量",
        "doc": [
            " 前情摘要：本文是在基于 Vue3 的：v3.4.21 版本基础上进行整理的。后续官方如有版本更新有关 计算属性 (computed) 的新特性欢迎留言讨论。当我们有时候需要将模版中的某一个数据进行一系列处理后从而得到一个新的值，虽然 Vue 的模版中能够支持我们写一些表达式，来达到这样的目的，但是这样会使得我们的模板变得臃肿且不够灵活定制化，所以 Vue 也并不推荐我们在模板中写太多的表达式。因此 Vue 推荐我们使用计算属性（computed）来描述依赖响应式状态的复杂逻辑。computed ()接受一个 getter 函数，返回一个只读的响应式 ref 对象。该 ref 通过 .value 暴露 getter 函数的返回值。它也可以接受一个带有 get 和 set 函数的对象来创建一个可写的 ref 对象。创建一个只读的计算属性 ref：computed() 返回值为一个计算属性 ref和其它一般的 ref 类似，你可以通过 .value 访问计算结果。计算属性 ref 也会在模板中自动解包，因此在模板表达式中引用时无需添加 .value，并且 Vue 的计算属性会自动追踪响应式依赖。创建一个可写的计算属性 ref：计算属性默认是只读的。当你尝试修改一个计算属性时，你会收到一个运行时警告。只在某些特殊场景中你可能才需要用到“可写”的属性，你可以通过同时提供 getter 和 setter 来创建：当我们提供一个函数并返回一个处理后的值，同时创建一个计算属性也返回相同处理逻辑的值，那么它们会得到相同的的结果，倘若我们将同样的函数定义为一个普通方法而不是一个计算属性，两种方式在结果上确实是完全相同的，然而，不同之处在于计算属性值会基于其响应式依赖被缓存。一个计算属性仅会在其响应式依赖更新时才重新计算。相比之下，函数方法调用总是会在重渲染发生时再次执行函数，这会导致一个非常消耗性能并且非必要的行为,反之，计算属性，就恰恰不会存在这样的问题。它的每一次更新都是必要性的。我们可以向 computed() 传入第二个参数，是一个包含了 onTrack 和 onTrigger 两个回调函数的对象：查看计算属性调试Getter 不应有副作用计算属性的 getter 应只做计算而没有任何其他的副作用，这一点非常重要，请务必牢记。举例来说，不要改变其他状态、在 getter 中做异步请求或者更改 DOM！一个计算属性的声明中描述的是如何根据其他值派生一个值。因此 getter 的职责应该仅为计算和返回该值。避免直接修改计算属性值从计算属性返回的值是派生状态。可以把它看作是一个“临时快照”，每当源状态发生变化时，就会创建一个新的快照。直接更改快照是没有意义的，因此计算属性的返回值应该被视为只读的，并且永远不应该被更改。我们应该更新它所依赖的源数据状态以触发新的计算。点击查看计算属性新特性之性能优化🚵‍♂️ 博主座右铭：向阳而生，我还在路上！ —————————————————————————————— 🚴博主想说：将持续性为社区输出自己的资源，同时也见证自己的进步！ —————————————————————————————— 🤼‍♂️ 如果都看到这了，博主希望留下你的足迹！【📂收藏！👍点赞！✍️评论！】 ——————————————————————————————\\n        \\n    \\n                    旧梦星轨: \\n                    我越来越不知道你想表达什么了\\n                \\n                    Aelin_: \\n                    5aSn5L2s5Yqg5oiR5b6u5L+h77yMamF2YXNjcmlwdC1fLQ==   \\n\\n大佬  base64 解码\\n                \\n                    旧梦星轨: \\n                    还有一个开发中的行为规范，那就是永远不要在生命周期中去直接定义事件方法，方法或者事件应该单独的抽离维护，而生命周期的作用是，去控制事件方法在不同的生命周期时间段的依次调用而已，这样有助于开发语义化，避免一定层度的代码冗余，和良好的代码复用\\n                \\n                    旧梦星轨: \\n                    很明显，你这段代码，写法有问题，你想想，onMounted，都已经代表dom 渲染完成了，你在dom渲染完毕后，才定义方法函数，span 节点在渲染的时候发现一个未定义的函数方法，就代表null，而你在span都加载完了后，再告诉他，有一个函数方法，这时候不好意思，span已经不认了，可以理解为，找你要的时候你不给，你给的时候，我已经不需要了\\n                \\n                    旧梦星轨: \\n                    啥意思\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者旧梦星轨你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "欢迎关注 『VUE』 专栏，持续更新中 欢迎关注 『VUE』 专栏，持续更新中注意到了,方法没有return也可以以类似前面的数据变量的写法在模板中使用.ComputedDemo.vue请注意,前面的方法写法每一次渲染都是会重新执行方法进行一次计算的.大大增加了开销. 如果使用computed,则会缓存计算结果,只执行一次.除非有了变动.在 Vue 中，计算属性（computed）会在满足以下情况时再次执行：依赖的响应式数据发生变化： 当计算属性所依赖的响应式数据发生变化时，计算属性会重新计算。Vue 会追踪计算属性所依赖的数据，并在这些数据发生变化时自动触发计算属性的重新计算。计算属性被访问时： 当计算属性被访问时，Vue 会检查计算属性所依赖的响应式数据是否发生变化，如果有变化，则计算属性会重新计算。这确保了计算属性的值是响应式的，并且会在需要时更新。总的来说，计算属性会在它所依赖的数据发生变化、或者在模板中使用计算属性时被访问时重新执行。Vue 内部会智能地处理这些依赖关系，确保计算属性的值能够及时更新并保持响应式。注意到了使用了三个getResult_methods() 和三个 getResult_computed 结果在控制台中出现了三个a,一个b说明前者三次执行,后者一次执行.请注意computed必须带return!大家喜欢的话，给个👍，点个关注！给大家分享更多计算机专业学生的求学之路！版权声明：发现你走远了@mzh原创作品，转载必须标注原文链接Copyright 2024 mzhCrated：2024-3-1欢迎关注 『VUE』 专栏，持续更新中 欢迎关注 『VUE』 专栏，持续更新中 『未完待续』\\n        \\n    \\n                    坐等真相: \\n                    运行二维码登录这里，15个步骤，跑了半个多小时，依赖还没下完，但没卡住，慢慢等会再看看\\n                \\n                    yhxLOVESH: \\n                    博主您好！资源网站打不开看了，可以再分享一下吗？\\n                \\n                    怪我冷i: \\n                    路径只能填写/dav，成功了。\\n                \\n                    moshouhot: \\n                    瞎写的\\n                \\n                    发现你走远了: \\n                    太对了哥````感谢提醒```\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者发现你走远了你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "在 Vue 3 中，computed 是一个用于创建计算属性的工具，它基于组件的响应式依赖进行复杂的计算，并返回一个新的响应式引用。计算属性是 Vue 的一个核心概念，它提供了一种声明式的方式来执行基于其依赖的响应式数据的计算。计算属性与常规属性类似，但是它们是基于它们的依赖进行缓存的。只有当计算属性依赖的响应式数据发生变化时，它们才会重新求值。这意味着只要依赖没有变化，多次访问计算属性会立即返回之前缓存的结果，而不会重新执行计算逻辑。 使用方法：count 是一个响应式数据，而 doubleCount 是一个计算属性，它返回 count 的两倍。当 count 的值发生变化时，doubleCount 会自动更新。使用计算属性的好处是它们能够减少不必要的计算和渲染，提高性能。此外，它们还使得组件的逻辑更加清晰和易于维护。当你需要从响应式数据中派生出一个经过计算或转换的新值时，可以使用 computed。例如，你可能有一个日期对象，而你想在模板中显示格式化的日期字符串。如果你的计算属性依赖于多个响应式数据项，并且当这些数据项中的任何一个改变时，你都希望重新计算该属性，那么 computed 是非常有用的。在模板中直接编写复杂的逻辑表达式可能会导致代码难以阅读和维护。使用 computed 可以将这些逻辑封装起来，使模板更加简洁清晰。计算属性会缓存其值，只有当其依赖的响应式数据发生变化时，才会重新计算。这种缓存机制可以帮助避免不必要的计算和渲染，从而提高应用程序的性能虽然 watch 也可以用来观察和响应数据变化，但它主要用于执行异步操作或开销较大的操作。相比之下，computed 更适合用于同步计算，且由于它的缓存机制，通常比 watch 更高效。 computed函数的原理主要是基于Vue的响应式系统，通过getter和setter函数来创建和管理计算属性。1. 响应式依赖收集：当在组件中定义计算属性时，Vue会为该计算属性创建一个getter函数。这个getter函数的作用就是返回计算属性的值。在getter函数执行的过程中，它可能会访问其他响应式数据（如data中的属性或props等）。每当getter函数访问这些响应式数据时，Vue的响应式系统会记录下这些依赖关系，即计算属性依赖于哪些响应式数据。2. 缓存机制：计算属性的一个关键特性是它具有缓存机制。这意味着，只要计算属性所依赖的响应式数据没有发生变化，那么多次访问计算属性时，都会直接返回之前计算并缓存的结果，而不会重新执行getter函数中的计算逻辑。这种缓存机制大大提高了性能，避免了不必要的重复计算。3. 依赖更新与重新计算：当计算属性所依赖的响应式数据发生变化时，Vue的响应式系统会触发依赖更新。这个过程会标记计算属性为“脏”状态，表示其值可能不再是最新的。在下一个组件更新周期中，Vue会重新执行计算属性的getter函数，以获取最新的计算结果，并更新缓存。这样，组件中绑定计算属性的地方就能显示最新的数据。4. Setter函数：虽然大多数情况下我们主要关注计算属性的getter函数，但computed属性实际上也支持setter函数。setter函数在计算属性的值被显式修改时调用。然而，在实际开发中，我们通常会避免直接修改计算属性的值，因为这样会破坏其响应式依赖和缓存机制。如果需要修改计算属性的值，通常应该修改它所依赖的原始响应式数据。总结：computed函数的原理是通过getter和setter函数来实现计算属性的创建、缓存、依赖收集和更新。这使得计算属性能够自动响应其依赖的响应式数据的变化，并在需要时重新计算值，从而保持与数据的同步，并优化性能。\\n                    CSDN-Ada助手: \\n                    恭喜您撰写第12篇博客！标题“TypeScript从精通到入门3：ts中接口的使用”看起来非常吸引人。您对TypeScript的深入了解和分享给读者的知识是非常有价值的。接下来，我建议您可以考虑探讨一些实际应用场景下的TypeScript技巧，或者分享一些常见的问题和解决方法，这样可以让读者更好地理解和应用您所分享的知识。期待您更多的精彩内容！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第13篇博客！看到您对TypeScript的深入探索，我感到非常佩服。对于“ts中的类”这个话题，您的解释清晰易懂，让我受益匪浅。希望您能继续保持写作的热情和耐心，继续分享您的知识和经验。下一步，我建议您可以尝试结合实际案例或者更多的示例来展示类的应用，这样会更有助于读者的理解和学习。期待您更多精彩的文章！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您在TypeScript系列博客中发布了第14篇文章！阅读您的文章让我对函数在TypeScript中的运用有了更深入的了解。希望您能继续坚持创作，为大家分享更多有价值的内容。下一步，或许您可以考虑探讨TypeScript中其他重要概念的应用，比如模块化或类的使用等等。期待看到您更多的精彩文章！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜博主第15篇博客的成功发布！看到你已经深入探讨了TypeScript中的泛型使用，真的让人感到钦佩。接下来，或许可以考虑分享一些实际项目中如何应用泛型，或者探讨一些复杂场景下的泛型应用技巧，这样可以让更多读者受益。期待你的下一篇作品！愿你在创作道路上不断进步，共同成长。\\n                \\n                    CSDN-Ada助手: \\n                    恭喜作者在TypeScript学习系列博客中已经深入探讨了高级类型，展现了扎实的技术功底。希望作者能继续保持对技术的热情和探索精神，不断学习和总结，为读者带来更多有价值的内容。或许下一个主题可以考虑深入研究ts中的异步编程或者模块化设计，期待您的精彩分享。加油！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "模板中的表达式虽然方便，但也只能用来做简单的操作。如果在模板中写太多逻辑，会让模板变得臃肿，难以维护。比如说，有这样一个包含嵌套数组的对象：我们想根据 author 是否已有一些书籍来展示不同的信息：这里的模板看起来有些复杂。我们必须认真看好一会儿才能明白它的计算依赖于 author.books。更重要的是，如果在模板中需要不止一次这样的计算，我们可不想将这样的代码在模板里重复好多遍。因此我们推荐使用计算属性来描述依赖响应式状态的复杂逻辑。这是重构后的示例：我们在这里定义了一个计算属性 publishedBooksMessage。computed() 方法期望接收一个 getter 函数，返回值为一个计算属性 ref。和其他一般的 ref 类似，你可以通过 publishedBooksMessage.value 访问计算结果。计算属性 ref 也会在模板中自动解包，因此在模板表达式中引用时无需添加 .value。Vue 的计算属性会自动追踪响应式依赖。它会检测到 publishedBooksMessage 依赖于 author.books，所以当 author.books 改变时，任何依赖于 publishedBooksMessage 的绑定都会同时更新。你可能注意到在表达式中像这样调用一个函数也会获得和计算属性相同的结果：若我们将同样的函数定义为一个方法而不是计算属性，两种方式在结果上确实是完全相同的，然而，不同之处在于计算属性值会基于其响应式依赖被缓存。一个计算属性仅会在其响应式依赖更新时才重新计算。这意味着只要 author.books 不改变，无论多少次访问 publishedBooksMessage 都会立即返回先前的计算结果，而不用重复执行 getter 函数。这也解释了为什么下面的计算属性永远不会更新，因为 Date.now() 并不是一个响应式依赖：相比之下，方法调用总是会在重渲染发生时再次执行函数。为什么需要缓存呢？想象一下我们有一个非常耗性能的计算属性 list，需要循环一个巨大的数组并做许多计算逻辑，并且可能也有其他计算属性依赖于 list。没有缓存的话，我们会重复执行非常多次 list 的 getter，然而这实际上没有必要！如果你确定不需要缓存，那么也可以使用方法调用。计算属性默认是只读的。当你尝试修改一个计算属性时，你会收到一个运行时警告。只在某些特殊场景中你可能才需要用到“可写”的属性，你可以通过同时提供 getter 和 setter 来创建： 现在当你再运行 fullName.value = 'John Doe' 时，setter 会被调用而firstName和lastName会随之更新。计算属性的 getter 应只做计算而没有任何其他的副作用，这一点非常重要，请务必牢记。举例来说，不要改变其他状态、在 getter 中做异步请求或者更改 DOM！一个计算属性的声明中描述的是如何根据其他值派生一个值。因此 getter 的职责应该仅为计算和返回该值。在之后的指引中我们会讨论如何使用侦听器根据其他响应式状态的变更来创建副作用。从计算属性返回的值是派生状态。可以把它看作是一个“临时快照”，每当源状态发生变化时，就会创建一个新的快照。更改快照是没有意义的，因此计算属性的返回值应该被视为只读的，并且永远不应该被更改——应该更新它所依赖的源状态以触发新的计算。本站提供 编程入门菜鸟教程 | 在线实用工具 | 编程实例源码下载 | 源代码片段分享 | 编程技术问答 | 菜鸟自学教程 | 在线技能测验 等内容供大家免费学习和使用！"
        ]
    },
    {
        "prompt": "什么使用对象取属性用[]",
        "doc": [
            "Java的反射（reflection）机制是指在程序的运行状态中，可以构造任意一个类的对象，可以了解任意一个对象所属的类，可以了解任意一个类的成员变量和方法，可以调用任意一个对象的属性和方法。反射非常强大，JDBC以及主流的框架如Spring、Mybatis等等都使用到了反射机制，可以说只要使用Java，反射无处不在。本文详细介绍如何使用反射获取到Class对象，类的方法和属性。Class对象包括一个类的方法、变量、接口、类名、类修饰符等等信息，获取Class对象有三种方法。获取类名获取类修饰符获取包信息获取父类的Class对象获取接口信息获取构造函数Constructor上面的代码有点需要注意： 1.必须调用setAccessible(true)方法，这是针对私有变量而言，public和protected等都不需要。这个方法是允许通过反射访问类的私有变量或者私有方法。 2.getDeclaredFields为获取所有属性，getFields不能获取到私有属性。获取方法部分同理。 私有变量和私有方法也是不允许其他的类随意调用的，但是通过反射可以饶过这一限制。 反射功能非常强大，可以在运行时判断任意一个对象所属的类；在运行时构造任意一个类的对象；在运行时判断任意一个类所具有的成员变量和方法；在运行时调用任意一个对象的方法。Main类Test类接口interfacetest\\n        \\n    \\n                    HHi3s: \\n                    MySQL没有full join\\n                \\n                    susuzhezhe: \\n                    文件失效了\\n                \\n                    Adam`南帝·梁: \\n                    nice，赞一个！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "",
            "",
            "有些时候我们需要获取到一个对象中的所有属性名和属性值，对其值进行操作 这种时候我们可以选择使用反射来进行遍历对象中的所有属性名和属性值。在遍历中编写逻辑来对属性进行操作。 示例代码如下：控制台输出结果： \\n                    CSDN-Ada助手: \\n                    推荐 Java 技能树：https://edu.csdn.net/skill/java?utm_source=AI_act_java\\n                \\n                    Code In: \\n                    强\\n                \\n                    .予安: \\n                    检查一下bucket的读写权限\\n                \\n                    ,......: \\n                    请问为啥下载的文件里面只有· success，预览图片的图片出不来呀说This XML file does not appear to have any style information associated with it. The document tree is shown below.\\n                \\n                    .予安: \\n                    docker logs minio 中得S3-API后就是端口，访问得时候需要开放端口。\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。"
        ]
    },
    {
        "prompt": "vscode显示不可见字符快捷键",
        "doc": [
            "打开设置搜索  Unicode Highlight: Invisible Characters 将勾选去除\\n                    CSDN-Ada助手: \\n                    恭喜您写了第15篇博客！不断分享知识和经验真是令人钦佩的。对于vscode安装插件运行html文件这个话题，您已经介绍得非常详细了。接下来，或许可以考虑分享一些实际案例或者经验总结，让读者更容易理解和应用。期待您更多的精彩内容，加油！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第16篇博客！标题为“vscode常用快捷键”，内容一定很有用吧！希望您继续保持创作的热情和努力，不断分享有价值的知识给大家。或许下一步可以考虑写一些关于vscode插件的介绍或者使用技巧，这样可以更全面地帮助读者提升编程效率。期待您的下一篇作品！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第17篇博客！对于vscode突出显示不可见字符这一主题的探讨，相信对很多人都会有所帮助。希望您能继续保持创作的热情和耐心，为大家带来更多有价值的内容。下一步，可以考虑分享一些vscode的高级技巧或者实用插件的介绍，让读者们能够更加深入地了解这个工具的功能与优势。期待您的下一篇博客！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您撰写了第5篇博客！标题“在Linux集群上搭建hadoopHA”真是吸引人的！您的博客内容一直都非常有价值，对于想要在Linux集群上搭建hadoopHA的读者来说，这篇博客无疑是一份宝贵的指南。在下一步的创作中，或许您可以考虑添加一些实际操作中的注意事项或调优技巧，这样读者能够更好地应用您的指导。期待您更多博客的发布，谢谢您的分享！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您撰写了第6篇博客！标题“如何从U盘重装windows10/11”引人入胜。您对如何重新安装Windows系统的指导非常有帮助。不仅仅是标题吸引人，内容也很实用。我希望你能继续保持创作，分享更多有关电脑技巧和教程的文章。如果可能的话，我希望未来您能探索如何优化系统设置或解决常见软件问题等更深入的主题。感谢您的付出！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "Ctrl+Shift+P, F1 显示命令面板 Ctrl+P 快速打开，转到文件… Ctrl+Shift+N 新窗口/实例 Ctrl+Shift+W 关闭窗口/实例 Ctrl+, 用户设置 Ctrl+K Ctrl+S 键盘快捷方式Ctrl+X 剪切行（空选择） Ctrl+C 复制行（空选择） Alt+↑ / ↓ 向上/向下移动行 Shift+Alt+↓ / ↑ 向上/向下复制行 Ctrl+Shift+K 删除行 Ctrl+Enter 在下方插入行 Ctrl+Shift+Enter 在上方插入行 Ctrl+Shift+\\\\ 跳转到匹配的括号 Ctrl+] / [ 增加/减少缩进 Home / End 转到行首/行尾 Ctrl+Home 转到文件开头 Ctrl+End 转到文件结尾 Ctrl+↑ / ↓ 向上/向下滚动行 Alt+PgUp / PgDn 向上/向下翻页 Ctrl+Shift+[ 折叠（折叠）区域 Ctrl+Shift+] 展开（展开）区域 Ctrl+K Ctrl+[ 折叠（折叠）所有子区域 Ctrl+K Ctrl+] 展开（展开）所有子区域 Ctrl+K Ctrl+0 折叠（折叠）所有区域 Ctrl+K Ctrl+J 展开（展开）所有区域 Ctrl+K Ctrl+C 添加行注释 Ctrl+K Ctrl+U 移除行注释 Ctrl+/ 切换行注释 Shift+Alt+A 切换块注释 Alt+Z 切换自动换行Ctrl+T 显示所有符号 Ctrl+G 转到行... Ctrl+P 转到文件... Ctrl+Shift+O 转到符号... Ctrl+Shift+M 显示问题面板 F8 转到下一个错误或警告 Shift+F8 转到上一个错误或警告 Ctrl+Shift+Tab 导航编辑器组历史记录 Alt+← / → 后退 / 前进 Ctrl+M 切换 Tab 移动焦点Ctrl+F 查找 Ctrl+H 替换 F3 / Shift+F3 查找下一个/上一个 Alt+Enter 选择所有匹配项 Ctrl+D 添加下一个匹配项到选择 Ctrl+K Ctrl+D 将最后选择移至下一个匹配项 Alt+C / R / W 切换大小写敏感 / 正则表达式 / 整个单词Alt+Click 插入光标 Ctrl+Alt+↑ / ↓ 在上方/下方插入光标 Ctrl+U 撤销上一个光标操作 Shift+Alt+I 在所选每行末尾插入光标 Ctrl+L 选择当前行 Ctrl+Shift+L 选择所有当前选择的实例 Ctrl+F2 选择所有当前单词的实例 Shift+Alt+→ 扩展选择 Shift+Alt+← 收缩选择 Shift+Alt+ +（拖动鼠标）列（框）选择 Ctrl+Shift+Alt+（箭头键）列（框）选择 Ctrl+Shift+Alt+PgUp/PgDn 列（框）选择向上/向下翻页Ctrl+Space, Ctrl+I 触发建议 Ctrl+Shift+Space 触发参数提示 Shift+Alt+F 格式化文档 Ctrl+K Ctrl+F 格式化所选内容 F12 转到定义 Alt+F12 嵌入定义 Ctrl+K F12 在侧边打开定义 Ctrl+. 快速修复 Shift+F12 显示引用 F2 重命名符号 Ctrl+K Ctrl+X 删除尾随空白 Ctrl+K M 更改文件语言Ctrl+F4, Ctrl+W 关闭编辑器 Ctrl+K F 关闭文件夹 Ctrl+\\\\ 分割编辑器 Ctrl+1 / 2 / 3 聚焦到第1、2、3个编辑器组 Ctrl+K Ctrl+←/→ 聚焦到前一个/下一个编辑器组 Ctrl+Shift+PgUp / PgDn 左右移动编辑器 Ctrl+K ← / → 移动活动编辑器组Ctrl+N 新建文件 Ctrl+O 打开文件... Ctrl+S 保存 Ctrl+Shift+S 另存为... Ctrl+K S 保存所有 Ctrl+F4 关闭 Ctrl+K Ctrl+W 关闭所有 Ctrl+Shift+T 重新打开关闭的编辑器 Ctrl+K Enter 保持预览模式编辑器打开 Ctrl+Tab 打开下一个 Ctrl+Shift+Tab 打开上一个 Ctrl+K P 复制活动文件的路径 Ctrl+K R 在资源管理器中显示活动文件 Ctrl+K O 在新窗口/实例中显示活动文件F11 切换全屏 Shift+Alt+0 切换编辑器布局（水平/垂直） Ctrl+= / - 放大/缩小 Ctrl+B 切换侧边栏可见性 Ctrl+Shift+E 显示资源管理器/切换焦点 Ctrl+Shift+F 显示搜索 Ctrl+Shift+G 显示源控制 Ctrl+Shift+D 显示调试 Ctrl+Shift+X 显示扩展 Ctrl+Shift+H 在文件中替换 Ctrl+Shift+J 切换搜索详细信息 Ctrl+Shift+U 显示输出面板 Ctrl+Shift+V 打开 Markdown 预览 Ctrl+K V 在侧边打开 Markdown 预览 Ctrl+K Z 禅模式（Esc Esc 退出）F9 切换断点 F5 开始/继续 Shift+F5 停止 F11 / Shift+F11 单步进入/单步跳出 F10 单步越过 Ctrl+K Ctrl+I 显示悬停Ctrl+ 显示集成终端 Ctrl+Shift+ 创建新终端 Ctrl+C 复制选择 Ctrl+V 粘贴到活动终端 Ctrl+↑ / ↓ 向上/向下滚动 Shift+PgUp / PgDn 向上/向下翻页 Ctrl+Home / End 滚动到顶部/底部打开键盘快捷方式编辑器：在键盘快捷方式编辑器中搜索要修改的命令。单击想要修改的命令行右侧，弹出输入框。输入新的快捷键组合。如果冲突，VSCode 将提示。按 Enter 确认新的快捷键。若要删除或重置快捷键，可以点击编辑旁的垃圾桶或回退图标。所有更改都会自动保存到用户设置的 keybindings.json 文件中。\\n        \\n    \\n                    ha_lydms: \\n                    作者总是能够用简单的语言解释复杂的概念，让人不费吹灰之力就能理解。\\n                \\n                    u_0210: \\n                    <script>alert('hello')</script>\\n                \\n                    u_0210: \\n                    <script>alert('xss')</script>\\n                \\n                    征途黯然.: \\n                    这篇文章对于MySQL的数据锁表datalocks表提供了非常有价值的见解。\\n                \\n                    terrt: \\n                    引用「MySQL服务状态查看和监控方式置顶半桶水专家已于 2023-09-06 09:17:33 修改阅读」\\nok\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "shift+alt+↓ 复制本行到下一行\\n                    CSDN-Ada助手: \\n                    恭喜您写了第15篇博客！不断分享知识和经验真是令人钦佩的。对于vscode安装插件运行html文件这个话题，您已经介绍得非常详细了。接下来，或许可以考虑分享一些实际案例或者经验总结，让读者更容易理解和应用。期待您更多的精彩内容，加油！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第16篇博客！标题为“vscode常用快捷键”，内容一定很有用吧！希望您继续保持创作的热情和努力，不断分享有价值的知识给大家。或许下一步可以考虑写一些关于vscode插件的介绍或者使用技巧，这样可以更全面地帮助读者提升编程效率。期待您的下一篇作品！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第17篇博客！对于vscode突出显示不可见字符这一主题的探讨，相信对很多人都会有所帮助。希望您能继续保持创作的热情和耐心，为大家带来更多有价值的内容。下一步，可以考虑分享一些vscode的高级技巧或者实用插件的介绍，让读者们能够更加深入地了解这个工具的功能与优势。期待您的下一篇博客！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您撰写了第5篇博客！标题“在Linux集群上搭建hadoopHA”真是吸引人的！您的博客内容一直都非常有价值，对于想要在Linux集群上搭建hadoopHA的读者来说，这篇博客无疑是一份宝贵的指南。在下一步的创作中，或许您可以考虑添加一些实际操作中的注意事项或调优技巧，这样读者能够更好地应用您的指导。期待您更多博客的发布，谢谢您的分享！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您撰写了第6篇博客！标题“如何从U盘重装windows10/11”引人入胜。您对如何重新安装Windows系统的指导非常有帮助。不仅仅是标题吸引人，内容也很实用。我希望你能继续保持创作，分享更多有关电脑技巧和教程的文章。如果可能的话，我希望未来您能探索如何优化系统设置或解决常见软件问题等更深入的主题。感谢您的付出！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "VS Code不显示字符问题可能是由缺乏适当的字体支持、设置中的字体问题、或扩展冲突所引起的。特别地，缺乏适当的字体支持是最常见的原因，因为VS Code依赖特定的字体来呈现字符，如果系统中没有安装这些字体或字体损坏，将导致字符无法显示。\\nVS Code不显示字符问题可能是由缺乏适当的字体支持、设置中的字体问题、或扩展冲突所引起的。特别地，缺乏适当的字体支持是最常见的原因，因为VS Code依赖特定的字体来呈现字符，如果系统中没有安装这些字体或字体损坏，将导致字符无法显示。对于缺乏适当的字体支持的解决方案，首先应确认VS Code的设置中指定的字体是否安装在系统上。可以通过打开设置（通过文件>首选项>设置 或使用快捷键Ctrl+,）搜索“字体”，并检查“编辑器:字体系列”设置。确保此处列出的字体在系统中可用。如果不可用，可以尝试更换为系统上已安装的字体或下载并安装指定的字体文件。此外，确保系统的字体缓存是最新的，特别是在安装新字体后，可能需要重启VS Code或整个系统。\\n对于缺乏适当的字体支持的解决方案，首先应确认VS Code的设置中指定的字体是否安装在系统上。可以通过打开设置（通过文件>首选项>设置 或使用快捷键Ctrl+,）搜索“字体”，并检查“编辑器:字体系列”设置。确保此处列出的字体在系统中可用。如果不可用，可以尝试更换为系统上已安装的字体或下载并安装指定的字体文件。此外，确保系统的字体缓存是最新的，特别是在安装新字体后，可能需要重启VS Code或整个系统。一、确保正确的字体安装正确安装并选择适用字体对于解决VS Code不显示字符问题至关重要。首先，确认VS Code设置中指定的字体是否已在系统上安装。如果没有安装，你需要下载该字体并正确安装到你的电脑上。\\n正确安装并选择适用字体对于解决VS Code不显示字符问题至关重要。首先，确认VS Code设置中指定的字体是否已在系统上安装。如果没有安装，你需要下载该字体并正确安装到你的电脑上。二、检查VS Code设置在确认字体问题后，需要进一步检查VS Code的其他相关设置。这包括字体大小、行高等，这些都可能影响字符的正确显示。在VS Code的设置中，也可以尝试重置所有字体设置到默认状态，看是否能解决问题。\\n在确认字体问题后，需要进一步检查VS Code的其他相关设置。这包括字体大小、行高等，这些都可能影响字符的正确显示。在VS Code的设置中，也可以尝试重置所有字体设置到默认状态，看是否能解决问题。三、解决扩展冲突有时候，某些安装在VS Code的扩展可能会干扰正常的字符显示。特别是那些影响视觉效果、主题或代码格式化的扩展。逐个禁用这些扩展并重启VS Code，可以帮助识别是否有扩展冲突导致的问题。\\n有时候，某些安装在VS Code的扩展可能会干扰正常的字符显示。特别是那些影响视觉效果、主题或代码格式化的扩展。逐个禁用这些扩展并重启VS Code，可以帮助识别是否有扩展冲突导致的问题。四、调整编辑器渲染设置VS Code提供了多种编辑器渲染选项，例如“字形边距”或“亚像素字体平滑”。在某些情况下，调整这些设置可能会帮助解决显示问题。可以在设置中尝试启用或禁用这些选项，观察问题是否得到解决。\\nVS Code提供了多种编辑器渲染选项，例如“字形边距”或“亚像素字体平滑”。在某些情况下，调整这些设置可能会帮助解决显示问题。可以在设置中尝试启用或禁用这些选项，观察问题是否得到解决。五、系统字体缓存问题在极少数情况下，系统的字体缓存可能损坏，从而影响到VS Code中的字体显示。解决此类问题可能需要重建字体缓存。对于Windows系统，可以通过执行特定的命令行操作来重建字体缓存；而在Mac或Linux系统上，可能需要删除字体缓存文件并重新启动系统。\\n在极少数情况下，系统的字体缓存可能损坏，从而影响到VS Code中的字体显示。解决此类问题可能需要重建字体缓存。对于Windows系统，可以通过执行特定的命令行操作来重建字体缓存；而在Mac或Linux系统上，可能需要删除字体缓存文件并重新启动系统。通过以上方法，大多数关于VS Code不显示字符的问题可以得到解决。关键在于细致地排查问题所在的环节，是否是由字体本身、设置配置、扩展冲突，或是更深层次的系统问题导致的。通常，起步于检查和调整字体设置是最直接、最有效的解决路径。\\n通过以上方法，大多数关于VS Code不显示字符的问题可以得到解决。关键在于细致地排查问题所在的环节，是否是由字体本身、设置配置、扩展冲突，或是更深层次的系统问题导致的。通常，起步于检查和调整字体设置是最直接、最有效的解决路径。问题：为什么VS Code不显示字符？可能是文件编码问题。 如果您在VS Code中打开的文件编码与实际文件编码不匹配，可能会导致字符不显示。解决方法：确保将文件编码与实际文件编码匹配。您可以在VS Code底部的状态栏中查看目前使用的文件编码格式。如果错误，您可以通过点击状态栏并选择正确的编码格式来更改它。另外，还可以使用命令面板（按下Ctrl+Shift+P）并搜索\"Reopen With Encoding\"来重新打开文件，并选择正确的编码格式。可能是字体设置问题。 如果您的字体设置与所需的字符不兼容，可能导致字符显示不正常。解决方法：您可以在VS Code的设置中更改字体设置。按下Ctrl+逗号打开设置，然后搜索\"font\"以查找与字体相关的选项。确保选择一个支持所需字符的字体，并将其设置为默认字体。您还可以通过使用插件来扩展字体选项，例如\"Fonts\"插件可以提供更多的字体选择。可能是安装了错误的扩展程序。 一些扩展程序可能会干扰字符的显示，尤其是与编码和字体相关的扩展程序。解决方法：检查您所安装的扩展程序，并尝试禁用其中的一些扩展程序，特别是与编码和字体相关的扩展程序。您可以通过点击VS Code侧边栏中的扩展程序图标来访问扩展程序面板。在这里，您可以查看已安装的扩展程序并进行相应的禁用。总结：如果VS Code不显示字符，最常见的原因是文件编码问题、字体设置问题或错误的扩展程序。通过检查文件编码、更改字体设置以及禁用相关的扩展程序，您应该能够解决这个问题。文章标题：为什么vscode不显示字符，发布者：不及物动词，转载请注明出处：https://worktile.com/kb/p/703185区别是：数据包是TCP/IP协议通信传输中的数据单位，它包含发送者和接收者的地址信息。数据帧是数据链路层的协议数据单元，它包括三部分：帧头，数据部分，帧尾。IP数据报是TCP/IP协议定义的一个在因特网上传输的包，由首部和数据两部分组成。 数据包 包(Packet)是TCP/IP协议通信传输中的数据…提出一体化办公系统的组成要素包括集成通讯、工作流程管理、资源共享和数据管理，它可以提升组织效率、增强团队协作、保障数据安全并带来经济效益。集成通讯是系统的重要组成部分，它允许来自不同设备和平台的即时通讯和数据共享。通过统一的通讯界面，减少沟通障碍，加速信息交流。 一、集成通讯与协同工作环境的优化 集…开门见山直接解答问题，DevOps标准泛指在实现快速、高效软件交付与运维过程中遵循的一系列最佳实践和指南。这些标准内涵丰富，聚焦于1、加速软件交付、2、提升运维效率、3、增强产品质量以及4、促进跨职能团队协同。例如，在加速软件交付方面，DevOps标准强调持续集成（CI）和持续部署（CD）的实践，通…revit的基本设计流程是1、认识项目、全面理解图纸2、选择样板文件；3、绘制标高、轴网；4、创建基本模型5、与其他的软件进行交互使用。认识项目、全面理解图纸要求我们的初始模型要完全依据图纸进行创建，模型建立后再对模型中出现的问题集中提交给设计院。 1、认识项目、全面理解图纸 需要注意的是，如果在理…本篇主要介绍 Windows 端和 macOS 端上屏幕分享的实现方式与注意事项。这两套系统都是闭源的，主要信息来源于官方文档，以及加上各位技术前辈和个人的一些摸索，如有不当或者错误的地方，还请诸位不吝指正。 作者：刘国元 网易资深开发工程师 一、前言 实时音视频通信的整个流程，可以大致分为数据采集…VSCode运行慢可能是由于几个常见的原因造成的，包括硬件性能不足、扩展程序过多或存在冲突、程序的异常操作、同时开启过多的文件或者项目、Visual Studio Code版本过旧、以及系统的其它性能问题。尤其值得注意的是，扩展程序过多或存在冲突这一点，因为这常常是导致VSCode运行慢的主要原因。…随机森林分析是一个强大的机器学习方法，它使用多个决策树进行训练并预测结果。主要特征包括：1、多个决策树的集成；2、随机性的引入以提高模型的泛化能力；3、投票机制用于预测最终结果。随机森林分析在处理大规模数据集时表现优秀，它能够处理具有复杂交互作用的特征，且对于数据的异常值和未平衡数据具有一定的鲁棒性…数据库调优工具有：1、mysqltuner.pl；2、tuning-primer.sh；3、pt-variable-advisor；4、pt-qurey-digest。mysqltuner.pl是mysql一个常用的数据库性能诊断工具，主要检查参数设置的合理性包括日志文件、存储引擎、安全建议及性能分…Java项目管理是对使用Java语言开发的软件项目进行规划、组织、领导和控制的过程，目的在于确保项目按期、按质、按预算完成。项目管理主牵动多个元素：1、需求分析和定义、2、设计和架构搭建、3、编码和开发、4、测试阶段，以及5、部署和维护。需求分析是基石，它确保开发的产品完全对应用户的实际需要和期望。…标题：中国国内知名的OA（办公自动化）厂商 中国国内知名的OA厂商包括用友网络、金蝶国际、泛微网络和致远互联等。这些厂商针对各类企业提供了多样化、定制化的办公自动化解决方案。特别是用友网络，它创办于1988年，发展至今已成牢固的行业地位。用友网络的解决方案侧重于提升企业资源规划（ERP）与办公自动化…这个人很懒，什么都没有留下～哪些软件适合用来做企业知识管理2023年8月22日不错的在线看板工具软件有哪些2023年2月10日常用的协同办公系统有哪些2023年2月2日jira和禅道哪个比较好用2023年2月2日禅道项目管理软件怎么样2023年2月2日有哪些好用的需求管理工具2023年2月2日有哪些项目管理软件排行榜前十的产品2023年2月2日国内外好用的todolist软件有哪些2023年2月2日国内外9大优异多项目管理工具有哪些2023年2月2日有哪些好用的互联网行业项目管理工具2023年2月2日办公自动化oa需求2023年8月3日oa办公系统需要什么设备2023年5月28日oa办公系统需要什么硬件2023年5月28日i5和i7有什么区别2023年1月31日抖音是否可以同时在两个手机上登录？2023年8月3日okr和kpi的区别是什么2022年11月16日git切换分支命令的方法2023年3月16日k8s与docker的区别是什么2023年2月18日什么是 IP2022年10月24日ui设计主要用哪些软件2022年12月30日oa系统可行性分析2024年1月15日如何平衡研发项目的时间、成本和质量目标2023年11月15日阈值与阀值的区别是什么2023年2月13日R语言中，普通的R包和bioconductor的包有什么区别吗2023年2月17日mongodb compass怎么批量删除数据2023年5月30日弘玑Cyclone CEO高煜光：从RPA到超自动化，以客户需求构建战略纵深2022年3月20日建工oa系统2024年1月12日devops是什么认证2024年3月26日怎么去理解量子计算机的「量子」与传统计算机有什么区别2023年2月14日Jira登录问题的常见原因分析2024年1月3日PingCode：项目管理 产品管理 知识管理 效能管理 测试管理 协作空间 自动化 目录服务 万象方舟ICP：京B2-20192206 京ICP备13017353号 京公网安备11010802012357号| 违法和不良信息举报邮箱 abuse@worktile.com |© 2021 Worktile.com400-800-1024工作日9:30-21:00在线"
        ]
    },
    {
        "prompt": "\n\t\t\t<?php\n\n\t\t\t$city_id = $_GET['city_id'] ?? 0;\n\t\t\t$db = mysqli_connect('localhost', 'root', '', 'homestay');\n\t\t\t$sql = \"select * from city order by sort limit 0,6\";\n\t\t\t$result = mysqli_query($db, $sql);\n\t\t\t$arr = mysqli_fetch_all($result, MYSQLI_ASSOC);\n\t\t\tmysqli_free_result($result);\n\t\t\tmysqli_close($db);\n\t\t\tforeach ($arr as $item) :\n\t\t\t\textract($item);\n\n\n\n\n\n\n\n\t\t\t?>\n\t\t\t\t<div class=\"col-4 col-md-2\">\n\n\n\n\n\t\t\t\t\t<a class=\"btn btn-outline-info btn-block <?= $city_id == $id ? 'active' : ''  ?>\" href=\"index.html?city_id=<?= $id ?>\"><?= $name ?></a>\n\t\t\t\t</div>\n\n\t\t\t<?php endforeach ?>解释下\n```undefined\n\r\n\t\t\t<?php\r\n\r\n\t\t\t$city_id = $_GET['city_id'] ?? 0;\r\n\t\t\t$db = mysqli_connect('localhost', 'root', '', 'homestay');\r\n\t\t\t$sql = \"select * from city order by sort limit 0,6\";\r\n\t\t\t$result = mysqli_query($db, $sql);\r\n\t\t\t$arr = mysqli_fetch_all($result, MYSQLI_ASSOC);\r\n\t\t\tmysqli_free_result($result);\r\n\t\t\tmysqli_close($db);\r\n\t\t\tforeach ($arr as $item) :\r\n\t\t\t\textract($item);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t?>\r\n\t\t\t\t<div class=\"col-4 col-md-2\">\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t<a class=\"btn btn-outline-info btn-block <?= $city_id == $id ? 'active' : ''  ?>\" href=\"index.html?city_id=<?= $id ?>\"><?= $name ?></a>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t<?php endforeach ?>\n```",
        "doc": [
            "因为7.0后就不能用mysql_开头的命令了，所以改用mysqli_。首先使用mysqli_connect连接数据库，语法格式如下这些参数都是可空的，一般只用到前五个，即除了socket信息以外。因为上一节我把数据库删了，所以数据库参数那栏填空('')，等连上了创建一个。 而使用的数据库是在本地(127.0.0.1)，所以端口参数可填空(即省略，默认为3306)。所以然后再创建数据库， php中没有直接用于创建数据库的函数，也可能是我孤陋寡闻，只能借助用于执行sql语句的mysqli_query函数，语法格式很简单，就两个参数，连接句柄和sql语句，其实还有一个参数查询模式，但是目前不会用上。读取数据前，需要使用mysqli_select_db函数选择需要该数据库： 普通情况下也可以在使用mysqli_connect函数时就选择数据库因为是个空数据库，做不了什么查询，所以先手动创建一个表然后插入五条数据，这里重新创建一个php脚本本来想用五次insert，可是Query好像不支持这种操作(具体为啥也没认真探究) 然后查询数据输出如下：最后记得关闭连接其他(删、改)就不写了，都是用mysqli_query操作的。参考资料： [1] MySQL 创建数据库\\n        \\n    \\n                    James 哈登: \\n                    感觉也是玩工具，我到现在还没入门\\n                \\n                    CSDN-Ada助手: \\n                    多亏了你这篇博客, 解决了问题: https://ask.csdn.net/questions/8040491, 请多输出高质量博客, 帮助更多的人\\n                \\n                    小蘑菇~~~: \\n                    感谢\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            " PHP MySQLi 参考手册打开一个到 MySQL 服务器的新的连接：mysqli_connect() 函数打开一个到 MySQL 服务器的新的连接。取消",
            "在使用三丰云的免费云服务器做系统测试的过程中最常用到的就是PHP环境以及PHP类别的代码；今天介绍的是mysqli_connect()函数。一、mysqli_connect()简介mysqli_connect()函数是PHP中连接MySQL数据库的函数，其参数包含四个变量：数据库地址、用户名、密码和数据库名。连接成功返回一个连接标识符，连接失败返回FALSE。二、mysqli_connect()使用示例三、mysqli_connect()参数详解1. 数据库地址数据库地址参数指MySQL数据库所在的服务器地址，通常为本地（localhost）或其他IP地址。如果连接远程MySQL数据库，需填写服务器的IP地址，或者服务器域名。2. 用户名和密码用户名和密码用于验证用户身份，确保只有授权的用户才能进行操作。MySQL数据库默认用户名是root，密码为空。在实际应用中，应该使用有限制权限的用户，以提高安全性。3. 数据库名数据库名用于选择连接的数据库，每个连接只能选择一个数据库。如果连接成功，后续的CRUD操作都会在这个连接所选的数据库中进行。四、mysqli_connect()注意事项1. 编码问题在连接MySQL数据库时，需要设置正确的编码，才能正常进行中文存储、查询等操作。常用的编码方式有UTF-8、GBK等。2. 错误处理在使用mysqli_connect()函数连接MySQL数据库时，可能会出现连接失败、用户名密码错误等情况。为了及时发现问题并进行处理，需要添加错误处理机制。可以使用die()函数输出错误信息，也可以使用try...catch机制捕获异常。3. 连接池在高并发环境下，频繁地创建和关闭MySQL连接会消耗大量的系统资源，降低系统性能。因此，可以使用连接池技术，在系统初始化时建立一定数量的连接，供后续使用。",
            "只有查询的 sql 语句才需要解析结果增删改的 sql 语句不需要解析结果， 如果解析会报错\\n        \\n    请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。"
        ]
    },
    {
        "prompt": "函数有什么作用\n```undefined\n void elpa_cholesky_d(elpa_t handle, double *a, int *error);\n```",
        "doc": [
            "2.我在写的时候遇到的疑问就是明明没有涉及指针，y的值缺会发生改变3.这里要注意y是全局变量，所以加1是可以的，incxy函数会影响全局变量，但是x被局部覆盖也就是局部变量的屏蔽作用，所以这里只有y加1最后真诚感谢一位19级的学长总是对我指点迷津\\n        \\n    \\n                    CSDN-Ada助手: \\n                    恭喜你这篇博客进入【CSDN每天值得看】榜单，全部的排名请看 https://bbs.csdn.net/topics/617677641。 \\n                \\n                    卢永狂拽酷炫吊康: \\n                    博主好详细，果断关注\\n                \\n                    前端VC: \\n                    靠你了\\n                \\n                    小吴有想法: \\n                    \\n                \\n                    小吴有想法: \\n                    \\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者小吴有想法你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "在TypeScript的类型系统中，'void'、'never'、'null'和'undefined'是几种特殊的类型，它们各自具有独特的含义和用途。本文将探讨这些类型之间的相互关系，并提供具体的使用场景和示例，以帮助您更好地理解它们在实际编程中的应用。在TypeScript中，所有类型都可以从any类型继承，而void和never类型是any类型的子类型。同时，void和never类型也是所有其他类型的超类型，意味着它们可以接受任何类型的值。另一方面，null和undefined类型是所有类型的子类型，可以被赋值给任何类型的变量，但它们不会被其他具体类型继承。下面是这些类型之间关系的简化图示：void类型在TypeScript中表示没有返回值的函数。它是所有其他类型的超类型，因为它可以接受任何类型的值。通常，我们使用void类型来指定那些不返回任何值的函数的返回类型。'never'类型表示那些永不存在的值，通常用于函数的返回类型，表示该函数永远不会正常结束，比如总是抛出异常或进入无限循环。定义：undefined 是一个表示未初始化的变量的特殊字面量类型。在 TypeScript 中，undefined 类型的变量可以被赋值为 undefined 或 null。\\n使用场景：当你需要表示一个变量可能未被赋予值或者在某些条件下可能未被定义时，可以使用 undefined 类型。定义：null 是一个表示无值的特殊字面量类型。它可以被赋值给那些声明了允许 null 值的变量。\\n使用场景：当你需要表示一个变量可能没有任何值或者初始化时，可以使用 null 类型。'null'和'undefined'类型在TypeScript中表示无值。它们是所有类型的子类型，可以被赋值给任何类型的变量，除了那些明确声明不接受null或undefined的类型。理解'void'、'never'、'null'和'undefined'这些特殊类型在TypeScript中的关系和用途对于编写清晰、准确的代码至关重要。它们不仅有助于我们更好地管理代码中的类型关系，还可以在不同的场景下提供适当的类型注解，从而提高代码的可读性和可维护性。记住，合理使用这些类型可以避免潜在的类型错误，并确保代码的健壮性。在 TypeScript 中，函数的隐式返回类型取决于函数的返回类型声明。如果一个函数没有显式指定返回类型，或者返回类型被声明为 void，那么当函数到达末尾而没有遇到 return 语句时，它会隐式返回 undefined。这是因为 void 类型表示函数不返回任何值，而在 JavaScript 和 TypeScript 中，不返回任何值的函数默认返回 undefined。然而，如果你的函数确实需要在所有代码路径上都不返回任何值，你应该显式地将返回类型声明为 void。这样做可以提供更清晰的意图，并且有助于 TypeScript 编译器进行更准确的类型检查。在这个例子中，doSomething 函数没有显式声明返回类型，因此它隐式返回 undefined。在这个例子中，doNothing 函数显式声明了返回类型为 void，这意味着它不应该返回任何值。尽管在实际执行中，这个函数同样会隐式返回 undefined，但显式声明 void 可以提供更强的类型检查和代码意图。在 TypeScript 中，如果函数没有返回类型声明或者返回类型声明为 void，那么在没有显式 return 语句的情况下，函数将隐式返回 undefined。然而，为了代码的清晰性和类型安全性，建议显式声明函数的返回类型，特别是当函数确实不应该返回任何值时，应该使用 void 类型。这样做可以帮助避免潜在的类型错误，并提高代码的可读性和可维护性。",
            "此浏览器不再受支持。请升级到 Microsoft Edge 以使用最新的功能、安全更新和技术支持。WSACleanup 函数终止使用 Winsock 2 DLL (Ws2_32.dll) 。如果操作成功，则返回值为零。 否则，将返回值SOCKET_ERROR，并且可以通过调用 WSAGetLastError 检索特定的错误号。在多线程环境中， WSACleanup 终止所有线程的 Windows 套接字操作。应用程序或 DLL 需要执行成功的 WSAStartup 调用，然后才能使用 Windows 套接字服务。 完成 Windows 套接字的使用后，应用程序或 DLL 必须调用 WSACleanup 以从 Windows 套接字实现中注销自身，并允许实现释放代表应用程序或 DLL 分配的任何资源。调用 WSACleanup 时，将取消此进程中任何线程发出的任何挂起的阻止或异步 Windows 套接字调用，而不会发布任何通知消息或发出任何事件对象的信号。  (WSASend、WSASendTo、WSARecv 或 WSARecvFrom 的任何挂起的重叠发送或接收操作（例如，此进程中任何线程发出的) ）也会被取消，而无需设置事件对象或调用完成例程（如果指定了一个）。  在这种情况下，挂起的重叠操作会失败，WSA_OPERATION_ABORTED错误状态。调用 WSACleanup 时打开的套接字将重置并自动解除分配，就像调用 closesocket 一样。 调用 WSACleanup 时，已使用 closesocket 关闭但仍具有待发送数据的套接字可能会受到影响。 在这种情况下，如果在应用程序退出时从内存中卸载 WS2_32.DLL，则挂起的数据可能会丢失。 为了确保发送所有挂起的数据，应用程序应使用 关闭 来关闭连接，然后等待关闭完成，然后再调用 closesocket 和 WSACleanup。 必须解除分配所有资源和内部状态（如排队未发布或已发布的消息），以便可供下一个用户使用。每次成功调用 WSAStartup 时，都必须调用 WSACleanup。 只有最终 的 WSACleanup 函数调用才会执行实际清理。 前面的调用只是递减 WS2_32.DLL 中的内部引用计数。WSACleanup 函数通常会导致卸载特定于协议的帮助程序 DLL。 因此，不应从应用程序 DLL 中的 DllMain 函数调用 WSACleanup 函数。 这可能会导致死锁。 有关详细信息，请参阅 DLL 主函数。Windows Phone 8：Windows Phone 8 及更高版本上的 Windows Phone 应用商店应用支持此函数。Windows 8.1和Windows Server 2012 R2：Windows 8.1、Windows Server 2012 R2 及更高版本的 Windows 应用商店应用支持此函数。PNRP 命名空间提供程序 APIWSAStartupWinsock 函数Winsock 参考closesocketshutdown此页面是否有帮助？\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t即将推出：在整个 2024 年，我们将逐步取消以“GitHub 问题”作为内容的反馈机制，并将其替换为新的反馈系统。 有关详细信息，请参阅：https://aka.ms/ContentUserFeedback。\\t\\t提交和查看相关反馈",
            "在usart.c添加如下代码：报错：在usart.c文件中添加头文件包含再次编译无报错\\n        \\n    \\n                    鸿晓知: \\n                    如果没有智能pdf应该怎么添加这个功能呢\\n                \\n                    江湖上都叫我秋博: \\n                    很简单的问题啊， 你在define那里不添加__FPU_PRESENT的定义就可以了。  在源文件定义和在设置选项卡定义是一个作用，保留一处即可。\\n                \\n                    m0_62467223: \\n                    __FPU_PRESENT，且数值是1U(注意是1U，不能只写成1)\\n                \\n                    m0_46359684: \\n                    第十二届就考比较多逻辑，果然重算法。\\n                \\n                    阳排: \\n                    宏定义只要改成__FPU_PRESENT=1U,__FPU_USED=1U就行了，加两个U，不用到源文件里去注释掉\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者三点阳你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、C币套餐、付费专栏及课程。"
        ]
    },
    {
        "prompt": "将一个项目 推送到两个git仓库里",
        "doc": [
            "简介：本文将介绍如何使用Git命令将代码同时推送到多个远程仓库，适用于需要同步代码到不同服务器的场景。在软件开发中，我们经常会遇到需要将代码同步到多个远程仓库的情况。例如，你可能有一个用于开发的私有仓库和一个用于公开展示的公共仓库。在这种情况下，每次推送代码到远程仓库时，你可能需要重复执行git push命令，这无疑增加了工作流程的复杂性。幸运的是，Git提供了灵活的方式来处理这种情况。你可以通过配置多个远程仓库，并使用一个命令同时推送到它们。下面是如何实现的步骤：首先，你需要为每个远程仓库配置一个唯一的名称。这可以通过git remote命令完成。例如，假设你有两个远程仓库，一个名为origin（默认的远程仓库），另一个名为mirror。你可以通过git remote -v命令查看已配置的远程仓库列表和它们的URL。要同时推送到多个远程仓库，你可以使用git push命令结合--all和--mirror选项。这将推送所有分支和标签到所有配置的远程仓库。如果你只想推送当前分支，你可以使用以下命令：这会将当前分支推送到origin和mirror两个远程仓库。如果你希望自动化推送过程，你可以将上述命令添加到Git钩子（hook）中。例如，你可以将推送命令添加到post-commit钩子中，这样每次提交代码后，代码都会自动推送到多个远程仓库。在项目的.git/hooks目录下，找到post-commit文件（如果不存在，请创建一个）。然后，将以下命令添加到该文件中：确保文件具有可执行权限（使用chmod +x .git/hooks/post-commit命令）。通过遵循上述步骤，你可以轻松地将代码同时推送到多个远程仓库，从而提高工作效率和代码同步的灵活性。希望这对你有所帮助！",
            "\\n            mob64ca13f50747\\n            2024-04-07 10:04:48\\n                                \\n                            \\n                    文章标签\\n                                            git\\n                                            推送\\n                                            远程库\\n                                    \\n                                        \\n                    文章分类\\n                                                                        云原生\\n                                                                                                云计算\\n                                                            \\n                                 我想这个问题，是大家关注的问题，这个问题，我非常关注。背景：在公司开发项目，我们一般都要把项目推送到公司领导创建的一个远程仓库里边去，但是我们同时也有自己的小仓库，这样的话，如何方便的将我们的代码，给公司仓库推送一次，然后给自己的仓库推送一份呢？1.在我们项目根目录打开git 终端现在这个项目的远程库指向的是公司的2.在github上创建一个我们自己的仓库3.下面执行这行命令git remote set-url origin --push --add git@github.com:TopGuo/ShareT.git//git remote set-url origin --push --add '你的远程库地址'此时你就将远程库地址成功切换过来了4.为了避免我们的代码是否完全添加，我们可以执行git add .\\n//添加所有代码5.然后再次commit一次git commit -m '提交备注信息'6.最后推送到远程库git push7.那么我们刚才的 那个仓库里就成功推进取了我们刚才的代码  \\n上一篇：unity AvatarMask 遮罩部分不生效 unity 图层遮挡关系下一篇：ISTIO 如何实现注册中心的 issuu怎么注册 在我们的项目文件中，如果有大文件，那么我们在使用git push的时候会遇到文件过大的问题，本博文就是教大家如何解决git无法push大文件的问题。 jenkins添加Git项目时报错Failed to connect to repository : Error performing git command: git ls-remote -h ​​git clone​ 与 git 安装 1. 首先是安装一下 git 工具node.js2. 创建文件夹  3.cd  到 文件夹里面 4. 仓库初始化git init这个时候文件里面就会出现 .git 这个文件夹，说明你的git 是成功了           如果没有看见，点击 查看 ，勾选 隐藏文件 5.创建一些文件的 .t 1. 进入项目主目录，打开Git Bash，执行以下命令，将项目变为一个git管理的项目： $ git init 执行成功后，会在项目根目录生成一个.git的文件夹。 可以执行以下命令查看项目状态： $ git status 上述状态表明，项目还没有条件，并且没有添加到索引库中。 2. 将当前目录的 gitee 和 github 一起推送，多仓库维护代码 ⛳ 将本地已有的项目上传到 git 仓库有两种方法：\\t\\t一、克隆 + 拷贝\\t\\t二、强行合并两个仓库? 一、克隆 + 拷贝\\t\\t直接用把远程仓库拉到本地，然后再把自己本地的项目拷贝到仓库中去。然后push到远程仓库上去即可。此方法适用于本地项目不是一个git仓库的情况。具体步骤：克隆远程仓库git clone git@github.com:yuanmingchen/tensorflow_study.g 1.在本地的文件夹中进行git初始化localhost:demo-kafka gaoxinfu$ git initInit 1.前言&emsp;&emsp;用GitHub管理自己的开源项目有几年了，最近一年更新得比较多，仓库也越来越多越来越大。有时候感觉GitHub太慢，尤其是最近感觉更为明显，于是萌生了再找个国内类似GitHub的代码托管平台的想法，同时我也还想持续更新GitHub上的仓库，于是需要一个本地仓库（我自己的开发机）多个远程仓库（Github、码云、coding）。2.一个远程仓库的gitconfig&e ## 项目方案：Android Studio项目的上传到Git在开发Android应用程序的过程中，使用Git进行版本控制是一个非常重要的环节。Git可以帮助开发者追踪项目中的每一个代码变更，并且可以轻松地与团队成员合作。本文将提供一种简单的方案，介绍如何将Android Studio项目上传到Git。### 准备工作在开始之前，我们需要确保以下几个条件已经满足：1. 安装Git： 要一个github账号，所有还没有的话先去注册吧！https://github.com/我们使用git需要先安装git工具，这里给出下载地址，下载后一路直接安装即可：https://git-for-windows.github.io/1.进入Github首页，点击New reposi... git项目代码一次push,同时上传到多个git仓库地址，并保证多个仓库代码同步一致问题背景:就我 git项目代码一次push,同时上传到多个git仓库 方法一 在配置文件里边配置 配置如下 [core] repositoryformatversion = 0 filemode = false bare = false logallrefupdates = true symlinks = fals ... 前言在开发过程中，我们工作的时候难免会使用到两个不同的仓库，但是正常来说一电脑默认一个参考，直接会用全局命令git config --global user.name \"yourName\"但是这样只能配置一个仓库了，本文介绍在一台电脑上配置多个仓库前提：您已经掌握了git仓库命令，不需要很会，有过配置用 CA证书 拉取/推送仓库即可。1、配置文件 编辑config文件如下：Host gitee.c 缘起大家在开发的过程中，可能会遇到多个项目同时开发，合并代码的事情。通常的做法是，一个项目建立一个本地链接，也就是说如果有10个项目，我们本地需要10个文件夹来对应，不仅麻烦，而且混乱。同事给了个可视化工具的解决方案，小编呕心沥血搞个命令行的吧。现在，给大家个福利吧，且看下文。git本地关联多个远程一个本地文件夹，关联远程多个项目，可以让你在本地自由切换不同的项目，不多说了，上代码。git rem 方法一1、首先在gitee上新建仓库2、在本地磁盘新建一个文件夹，上传代码。2.1、在本地新建upload文件夹2.2、在该文件夹中打开git Bash2.3、输入命令1：git init2.4、使用命令添加远程仓库2.5、输入命令2： git pull origin master2.6、将要上传的文件添加到upload文件夹中2.7、输入命令3：git add .2.8、输入命令4：git co 1.下载安装Git到电脑上（这里我之前已经安装好了，就不细说了）2.进入控制台安装好后右键点击桌面空白部分会多出两个菜单选项，点击第二个Git Bash Here（点击第一个你会爆炸）         会弹出一个git控制台，如果嫌小可以调整字号大小程序图标→options→text→select3.配置如果是初次配置接下来需要配置用户名和邮箱，git config --global user.n 本地项目目录下右键 git bash here github上创建项目 本地项目与git项目关联 git pull 处理冲突 git add . git commit m 'init' git push origin master 1、首先在gitee上面创建一个仓库 2、在本地找到需要上传到远程仓库的项目的根目录，然后点击鼠标右键打开Git Bash Here 3、在命令行输入 git init #初始化 4、在命令行输入git remote add origin 仓库地址 #与远程仓库进行关联 5、在命令行输入git pu ... git本地仓库关联远程仓库的两种方式：1. Git上传文件(夹)步骤(远程的代码clone到本地仓库)在github网站上新建仓库(确保万无一失把~/.ssh/id_rsa.pub文件的公开密钥添加到github上)git clone xxxxxx   //这里的应该是仓库的网址。作用：拷贝一个 Git 仓库到本地，让自己能够查看该项目，或者进行修改；cd到clone的仓库路径下进行操作gi \\n\\n\\n                     \\n  \\n6121A是具有音频信号产生和音频信号分析功能的测试仪器，适用于语音性能测试和音频功放测试等领域，满足电台、移动通信、音响设备和水声通信设备对频响、谐波失真和信噪比等指标的测试需求，是音频信号性能测试的常备仪器。 \\n6121A音频分析仪具有高精度音频信号分析功能，集失真计、SINAD计、频率计数器、交流电压表、直流电压表和FFT分析仪的功能于 最近项目中有一个高并发的更新数据库单表单记录的功能，为了避免数据库压力，采取了更新该记录时候发送mq，进行流量消峰。但是该记录的更新要和其他表更新一起，就会有分布式事务的问题。所以就采用了RocketMQ的事务消息来实现分布式事务的一致性。RocketMQ前文中的阿里的rocketMq集成的ons框架配置以及普通、延时、定时消息实现的文章一、事务消息类型RockectMQ事务消息提供了X/Open 一、TypeScript概述1.1 TypeScript的概念TypeScript是拥有类型的JavaScript超集，它可以编译成普通、干净、完整的JavaScript代码。上面的官方概念可以理解为：可以将TypeScript理解成加强版的JavaScript。\\nJavaScript所拥有的特性，TypeScript全部都是支持的，并且它紧随ECMAScript的标准，所以ES6、ES7、ES8 本节开始进入到进程的话题在正式进行多进程代码编写前，还需要修改一下本工程运行之后在终端显示的进程名称，根据之前几节的内容，在main函数中添加一个死循环，保证程序运行后不退出，以便观察进程名称。for(;;)\\n{\\n    sleep(1);\\n}重新编译运行后，在终端查看进程名称ps aux | grep -E 'bash|PID|nginx' 可以看到，在未作任何修改前，进程名称显示为 ./ngi 记录下在Linux CentOS7.6系统中如何布署python项目的步骤1，登录到服务器（ssh root@127.***.*.*）2，修改CentOS中的selinux安全服务程序，它在/ect/selinux/config目录下，修改它的SELINUX=disabled属性cd / 进入根目录vi /ect/selinux/config\\ni\\nSELINUX=disabled\\nesc\\n:w\\n:举报文章请选择举报类型具体原因原文链接（必填）补充说明0/200上传截图格式支持JPEG/PNG/JPG，图片不超过1.9MCopyright © 2005-2024 51CTO.COM\\n                    版权所有 京ICP证060544号",
            "简介：本文介绍了如何使用Git命令将项目一键推送到多个远程仓库，通过实际操作和步骤解析，让读者轻松掌握Git多仓库推送的方法。在软件开发中，使用Git进行版本控制是非常常见的做法。但是，有时候我们可能需要将代码推送到多个远程仓库，例如既有公开仓库又有私有仓库。这时候，如何一键推送多个远程仓库成为了一个问题。本文将介绍如何使用Git命令实现这一功能，让你轻松实现代码同步。首先，我们需要了解Git远程仓库的概念。远程仓库是指托管在服务器上的仓库，我们可以将本地仓库的代码推送到远程仓库进行备份和协作。默认情况下，一个Git仓库只能关联一个远程仓库，但是通过一些设置，我们可以实现一键推送多个远程仓库。接下来，我们将按照以下步骤进行操作：一、查看远程仓库首先，我们需要查看当前仓库已经关联的远程仓库。在命令行中执行以下命令：这将列出所有已经关联的远程仓库及其地址。二、添加远程仓库如果还没有关联其他远程仓库，我们可以使用git remote add命令添加。例如，假设我们要添加一个名为gitee的远程仓库，其地址为https://gitee.com/user/repo.git，则可以执行以下命令：再次执行git remote -v命令，你将看到新添加的远程仓库。三、推送代码到多个远程仓库现在，我们已经将多个远程仓库添加到了本地仓库的配置中。接下来，我们可以使用git push命令同时推送代码到多个远程仓库。但是，由于Git默认只推送到一个远程仓库，我们需要稍作修改。首先，我们需要使用git push命令推送代码到第一个远程仓库，例如默认的origin仓库。执行以下命令：然后，我们可以使用git push命令的--mirror选项来推送代码到其他远程仓库。执行以下命令：这将推送所有分支和标签到gitee远程仓库。如果你只想推送当前分支，可以使用--all选项：如果你想同时推送代码到多个远程仓库，可以重复执行git push命令，并为每个远程仓库指定相应的选项。四、删除远程仓库如果需要删除某个远程仓库，可以使用git remote rm命令。例如，要删除刚才添加的gitee远程仓库，可以执行以下命令：执行完以上步骤后，你已经成功地将代码一键推送到了多个远程仓库。在实际应用中，你可以根据自己的需求调整远程仓库的数量和推送策略。总结：通过本文的介绍，你应该已经掌握了如何使用Git命令将项目一键推送到多个远程仓库。这种方法不仅提高了代码同步的效率，还方便了多仓库的协作和管理。在实际开发中，你可以根据自己的需求灵活应用这一技巧，让代码管理变得更加轻松和高效。希望本文对你有所帮助！如果你有任何疑问或建议，欢迎在评论区留言讨论。祝你编程愉快！文心一言是百度打造出来的人工智能大语言模型，具备跨模态、跨语言的深度语义理解与生成能力本文整理自  QCon 全球软件开发大会 -从 MLOps 到 LMOps 分论坛的同名主题演讲Sugar BI教你怎么做数据可视化 - 拓扑图，让节点连接信息一目了然百度百舸·AI 异构计算平台，是百度智能云将百度内部强大的 AI 工程能力面向市场推出的解决方案。今天跟大家的演讲主题，主要是想交流如何去构建这样两个自动驾驶的数据闭环链路。\\nLMOps 相关的概念以及关键技术登录后可评论，请前往 登录 或 注册全国首批获得可信云服务认证对象存储服务:N002002 云数据库服务:N003002© 2022 Baidu 使用百度前必读 ｜ 京ICP证030173",
            "简介：本文将介绍如何使用Git命令将代码同时推送到多个远程仓库，适用于需要同步代码到不同服务器的场景。在软件开发中，我们经常会遇到需要将代码同步到多个远程仓库的情况。例如，你可能有一个用于开发的私有仓库和一个用于公开展示的公共仓库。在这种情况下，每次推送代码到远程仓库时，你可能需要重复执行git push命令，这无疑增加了工作流程的复杂性。幸运的是，Git提供了灵活的方式来处理这种情况。你可以通过配置多个远程仓库，并使用一个命令同时推送到它们。下面是如何实现的步骤：首先，你需要为每个远程仓库配置一个唯一的名称。这可以通过git remote命令完成。例如，假设你有两个远程仓库，一个名为origin（默认的远程仓库），另一个名为mirror。你可以通过git remote -v命令查看已配置的远程仓库列表和它们的URL。要同时推送到多个远程仓库，你可以使用git push命令结合--all和--mirror选项。这将推送所有分支和标签到所有配置的远程仓库。如果你只想推送当前分支，你可以使用以下命令：这会将当前分支推送到origin和mirror两个远程仓库。如果你希望自动化推送过程，你可以将上述命令添加到Git钩子（hook）中。例如，你可以将推送命令添加到post-commit钩子中，这样每次提交代码后，代码都会自动推送到多个远程仓库。在项目的.git/hooks目录下，找到post-commit文件（如果不存在，请创建一个）。然后，将以下命令添加到该文件中：确保文件具有可执行权限（使用chmod +x .git/hooks/post-commit命令）。通过遵循上述步骤，你可以轻松地将代码同时推送到多个远程仓库，从而提高工作效率和代码同步的灵活性。希望这对你有所帮助！文心一言是百度打造出来的人工智能大语言模型，具备跨模态、跨语言的深度语义理解与生成能力本文整理自  QCon 全球软件开发大会 -从 MLOps 到 LMOps 分论坛的同名主题演讲Sugar BI教你怎么做数据可视化 - 拓扑图，让节点连接信息一目了然百度百舸·AI 异构计算平台，是百度智能云将百度内部强大的 AI 工程能力面向市场推出的解决方案。今天跟大家的演讲主题，主要是想交流如何去构建这样两个自动驾驶的数据闭环链路。\\nLMOps 相关的概念以及关键技术登录后可评论，请前往 登录 或 注册全国首批获得可信云服务认证对象存储服务:N002002 云数据库服务:N003002© 2022 Baidu 使用百度前必读 ｜ 京ICP证030173"
        ]
    },
    {
        "prompt": "输入一个整型数组，数组中的一个或连续多个整数组成一个子数组。求所有子数组的和的最大值。\n用c++暴力搜索",
        "doc": [
            "昨天（2021年5月29日）参加了软考软件设计师的考试，试卷上出现了一道算法题，问：连续子数组最大和的分治解法的时间复杂度，考完正好记录总结一下这道算法题。题目描述： 输入一个整型数组，数组里有正数也有负数。 数组中连续的一个或多个整数组成一个子数组，每个子数组都有一个和。 比如上面这个数组的子数组的最大和为187,从下标3到下标7的位置。（本文中数组下标从1开始）比较常规的思路是暴力（O(n3)）、前缀和数组（O(n2)）两种，但是时间复杂度比较高，这题也可以用分治的策略做，时间复杂度O(nlogn)，还有两种时间复杂度为O(n)的做法，一种是动态规划，另一种是扫描法。这题需要掌握O(n)的解法。所谓分治法，是指将一个问题分解为两个子问题，然后分而解决之。具体步骤如下： 先将数组分为两个等长的子数组a, b； 分别求出两个数组a，b的连续子数组之和；  还有一种情况（容易忽略）：有可能最大和的子数组跨越两个数组； 最后比较ma, mb, mc，取最大即可。在计算mc时，注意：mc必定包含总区间的中间元素，因此求mc等价于从中间元素开始往左累加的最大值 + 从中间元素开始往右累加的最大值。dp[i]表示以下标i指向的元素结尾的所有子数组的最大和 状态转移方程：dp[i] = max(dp[i-1]+nums[i],nums[i]) 最后的答案：ans=max(dp[i]) 这题的dp思路和最长上升子序列类似，倒像是简化版的，这里第i个状态只从第i-1个状态转移过来。当我们加上一个正数时，和会增加；当我们加上一个负数时，和会减少。如果当前得到的和是个负数，那么这个和在接下来的累加中应该抛弃并重新清零，不然的话这个负数将会减少接下来的和。\\n        \\n    \\n                    huahuaxiaonou: \\n                    我试过，开始两次有效现在没用了。是梯子问题？\\n                \\n                    Mr-吕: \\n                    1111111\\n                \\n                    xlk1790577446: \\n                    好的 s我\\n                \\n                    weiambt: \\n                    这个100是十进制下的，十进制的100转成二进制就是01100100\\n                \\n                    whirligigw: \\n                    这个100是什么进制啊？求大佬解答，为什么第一个字节是100，转成二进制就是0110 0100啊\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者weiambt你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、C币套餐、付费专栏及课程。",
            "",
            "",
            ""
        ]
    },
    {
        "prompt": "这是定义ts数据类型的代码，为什么要这么写呢\n```TypeScript\n//定义首页模块的数据类型\r\nexport interface ResponseData {\r\n    code: number,\r\n    message: string,\r\n    ok: boolean\r\n}\r\n\r\n//代表医院数据的ts类型\r\nexport interface Hospital {\r\n    \"id\": string,\r\n    \"createTime\": string,\r\n    \"updateTime\": string,\r\n    \"isDeleted\": number,\r\n    \"param\": {\r\n        \"hostypeString\": string,\r\n        \"fullAddress\": string\r\n    },\r\n    \"hoscode\": string,\r\n    \"hosname\": string,\r\n    \"hostype\": string,\r\n    \"provinceCode\": string,\r\n    \"cityCode\": string,\r\n    \"districtCode\": string,\r\n    \"address\": string,\r\n    \"logoData\": string,\r\n    \"intro\": string,\r\n    \"route\": string,\r\n    \"status\": number,\r\n    \"bookingRule\": {\r\n        \"cycle\": number,\r\n        \"releaseTime\": string,\r\n        \"stopTime\": string,\r\n        \"quitDay\": number,\r\n        \"quitTime\": string,\r\n        \"rule\": string[]\r\n    }\r\n}\r\n\r\n//存储全部医院数组的数据类型content\r\nexport type Content = Hospital[]\n```",
        "doc": [
            "外观自述体验简介基本用法any 类型类型系统数组元组symbol 类型函数对象interface类泛型Enum 类型类型断言模块namespace装饰器装饰器（旧语法）declare 关键字d.ts 类型声明文件运算符类型映射类型工具注释指令tsconfig.json 文件tsc 命令React 支持本章是 TypeScript 类型系统的总体介绍。TypeScript 继承了 JavaScript 的类型，在这个基础上，定义了一套自己的类型系统。JavaScript 语言（注意，不是 TypeScript）将值分成 8 种类型。TypeScript 继承了 JavaScript 的类型设计，以上 8 种类型可以看作 TypeScript 的基本类型。注意，上面所有类型的名称都是小写字母，首字母大写的Number、String、Boolean等在 JavaScript 语言中都是内置对象，而不是类型名称。另外，undefined 和 null 既可以作为值，也可以作为类型，取决于在哪里使用它们。这 8 种基本类型是 TypeScript 类型系统的基础，复杂类型由它们组合而成。以下是它们的简单介绍。boolean类型只包含true和false两个布尔值。上面示例中，变量x和y就属于 boolean 类型。string类型包含所有字符串。上面示例中，普通字符串和模板字符串都属于 string 类型。number类型包含所有整数和浮点数。上面示例中，整数、浮点数和非十进制数都属于 number 类型。bigint 类型包含所有的大整数。上面示例中，变量x和y就属于 bigint 类型。bigint 与 number 类型不兼容。上面示例中，bigint类型赋值为整数和小数，都会报错。注意，bigint 类型是 ES2020 标准引入的。如果使用这个类型，TypeScript 编译的目标 JavaScript 版本不能低于 ES2020（即编译参数target不低于es2020）。symbol 类型包含所有的 Symbol 值。上面示例中，Symbol()函数的返回值就是 symbol 类型。symbol 类型的详细介绍，参见《Symbol》一章。根据 JavaScript 的设计，object 类型包含了所有对象、数组和函数。上面示例中，对象、数组、函数都属于 object 类型。undefined 和 null 是两种独立类型，它们各自都只有一个值。undefined 类型只包含一个值undefined，表示未定义（即还未给出定义，以后可能会有定义）。上面示例中，变量x就属于 undefined 类型。两个undefined里面，第一个是类型，第二个是值。null 类型也只包含一个值null，表示为空（即此处没有值）。上面示例中，变量x就属于 null 类型。注意，如果没有声明类型的变量，被赋值为undefined或null，它们的类型会被推断为any。如果希望避免这种情况，则需要打开编译选项strictNullChecks。上面示例中，打开编译设置strictNullChecks以后，赋值为undefined的变量会被推断为undefined类型，赋值为null的变量会被推断为null类型。JavaScript 的 8 种类型之中，undefined和null其实是两个特殊值，object属于复合类型，剩下的五种属于原始类型（primitive value），代表最基本的、不可再分的值。上面这五种原始类型的值，都有对应的包装对象（wrapper object）。所谓“包装对象”，指的是这些值在需要时，会自动产生的对象。上面示例中，字符串hello执行了charAt()方法。但是，在 JavaScript 语言中，只有对象才有方法，原始类型的值本身没有方法。这行代码之所以可以运行，就是因为在调用方法时，字符串会自动转为包装对象，charAt()方法其实是定义在包装对象上。这样的设计大大方便了字符串处理，省去了将原始类型的值手动转成对象实例的麻烦。五种包装对象之中，symbol 类型和 bigint 类型无法直接获取它们的包装对象（即Symbol()和BigInt()不能作为构造函数使用），但是剩下三种可以。以上三个构造函数，执行后可以直接获取某个原始类型值的包装对象。上面示例中，s就是字符串hello的包装对象，typeof运算符返回object，不是string，但是本质上它还是字符串，可以使用所有的字符串方法。注意，String()只有当作构造函数使用时（即带有new命令调用），才会返回包装对象。如果当作普通函数使用（不带有new命令），返回就是一个普通字符串。其他两个构造函数Number()和Boolean()也是如此。由于包装对象的存在，导致每一个原始类型的值都有包装对象和字面量两种情况。上面示例中，第一行是字面量，第二行是包装对象，它们都是字符串。为了区分这两种情况，TypeScript 对五种原始类型分别提供了大写和小写两种类型。其中，大写类型同时包含包装对象和字面量两种情况，小写类型只包含字面量，不包含包装对象。上面示例中，String类型可以赋值为字符串的字面量，也可以赋值为包装对象。但是，string类型只能赋值为字面量，赋值为包装对象就会报错。建议只使用小写类型，不使用大写类型。因为绝大部分使用原始类型的场合，都是使用字面量，不使用包装对象。而且，TypeScript 把很多内置方法的参数，定义成小写类型，使用大写类型会报错。上面示例中，Math.abs()方法的参数类型被定义成小写的number，传入大写的Number类型就会报错。上一小节说过，Symbol()和BigInt()这两个函数不能当作构造函数使用，所以没有办法直接获得 symbol 类型和 bigint 类型的包装对象，因此Symbol和BigInt这两个类型虽然存在，但是完全没有使用的理由。TypeScript 的对象类型也有大写Object和小写object两种。大写的Object类型代表 JavaScript 语言里面的广义对象。所有可以转成对象的值，都是Object类型，这囊括了几乎所有的值。上面示例中，原始类型值、对象、数组、函数都是合法的Object类型。事实上，除了undefined和null这两个值不能转为对象，其他任何值都可以赋值给Object类型。上面示例中，undefined和null赋值给Object类型，就会报错。另外，空对象{}是Object类型的简写形式，所以使用Object时常常用空对象代替。上面示例中，变量obj的类型是空对象{}，就代表Object类型。显然，无所不包的Object类型既不符合直觉，也不方便使用。小写的object类型代表 JavaScript 里面的狭义对象，即可以用字面量表示的对象，只包含对象、数组和函数，不包括原始类型的值。上面示例中，object类型不包含原始类型值，只包含对象、数组和函数。大多数时候，我们使用对象类型，只希望包含真正的对象，不希望包含原始类型。所以，建议总是使用小写类型object，不使用大写类型Object。注意，无论是大写的Object类型，还是小写的object类型，都只包含 JavaScript 内置对象原生的属性和方法，用户自定义的属性和方法都不存在于这两个类型之中。上面示例中，toString()是对象的原生方法，可以正确访问。foo是自定义属性，访问就会报错。如何描述对象的自定义属性，详见《对象类型》一章。undefined和null既是值，又是类型。作为值，它们有一个特殊的地方：任何其他类型的变量都可以赋值为undefined或null。上面代码中，变量age的类型是number，但是赋值为null或undefined并不报错。这并不是因为undefined和null包含在number类型里面，而是故意这样设计，任何类型的变量都可以赋值为undefined和null，以便跟 JavaScript 的行为保持一致。JavaScript 的行为是，变量如果等于undefined就表示还没有赋值，如果等于null就表示值为空。所以，TypeScript 就允许了任何类型的变量都可以赋值为这两个值。但是有时候，这并不是开发者想要的行为，也不利于发挥类型系统的优势。上面示例中，变量obj等于undefined，编译不会报错。但是，实际执行时，调用obj.toString()就报错了，因为undefined不是对象，没有这个方法。为了避免这种情况，及早发现错误，TypeScript 提供了一个编译选项strictNullChecks。只要打开这个选项，undefined和null就不能赋值给其他类型的变量（除了any类型和unknown类型）。下面是 tsc 命令打开这个编译选项的例子。上面示例中，打开--strictNullChecks以后，number类型的变量age就不能赋值为undefined和null。这个选项在配置文件tsconfig.json的写法如下。打开strictNullChecks以后，undefined和null这两种值也不能互相赋值了。上面示例中，undefined类型的变量赋值为null，或者null类型的变量赋值为undefind，都会报错。总之，打开strictNullChecks以后，undefined和null只能赋值给自身，或者any类型和unknown类型的变量。TypeScript 规定，单个值也是一种类型，称为“值类型”。上面示例中，变量x的类型是字符串hello，导致它只能赋值为这个字符串，赋值为其他字符串就会报错。TypeScript 推断类型时，遇到const命令声明的变量，如果代码里面没有注明类型，就会推断该变量是值类型。上面示例中，变量x是const命令声明的，TypeScript 就会推断它的类型是值https，而不是string类型。这样推断是合理的，因为const命令声明的变量，一旦声明就不能改变，相当于常量。值类型就意味着不能赋为其他值。注意，const命令声明的变量，如果赋值为对象，并不会推断为值类型。上面示例中，变量x没有被推断为值类型，而是推断属性foo的类型是number。这是因为 JavaScript 里面，const变量赋值为对象时，属性值是可以改变的。值类型可能会出现一些很奇怪的报错。上面示例中，等号左侧的类型是数值5，等号右侧4 + 1的类型，TypeScript 推测为number。由于5是number的子类型，number是5的父类型，父类型不能赋值给子类型，所以报错了（详见本章后文）。但是，反过来是可以的，子类型可以赋值给父类型。上面示例中，变量x属于子类型，变量y属于父类型。y不能赋值为子类型x，但是反过来是可以的。如果一定要让子类型可以赋值为父类型的值，就要用到类型断言（详见《类型断言》一章）。上面示例中，在4 + 1后面加上as 5，就是告诉编译器，可以把4 + 1的类型视为值类型5，这样就不会报错了。只包含单个值的值类型，用处不大。实际开发中，往往将多个值结合，作为联合类型使用。联合类型（union types）指的是多个类型组成的一个新类型，使用符号|表示。联合类型A|B表示，任何一个类型只要属于A或B，就属于联合类型A|B。上面示例中，变量x就是联合类型string|number，表示它的值既可以是字符串，也可以是数值。联合类型可以与值类型相结合，表示一个变量的值有若干种可能。上面的示例都是由值类型组成的联合类型，非常清晰地表达了变量的取值范围。其中，true|false其实就是布尔类型boolean。前面提到，打开编译选项strictNullChecks后，其他类型的变量不能赋值为undefined或null。这时，如果某个变量确实可能包含空值，就可以采用联合类型的写法。上面示例中，变量name的值可以是字符串，也可以是null。联合类型的第一个成员前面，也可以加上竖杠|，这样便于多行书写。上面示例中，联合类型的第一个成员one前面，加上了竖杠。如果一个变量有多种类型，读取该变量时，往往需要进行“类型缩小”（type narrowing），区分该值到底属于哪一种类型，然后再进一步处理。上面示例中，参数变量id可能是数值，也可能是字符串，这时直接对这个变量调用toUpperCase()方法会报错，因为这个方法只存在于字符串，不存在于数值。解决方法就是对参数id做一下类型缩小，确定它的类型以后再进行处理。上面示例中，函数体内部会判断一下变量id的类型，如果是字符串，就对其执行toUpperCase()方法。“类型缩小”是 TypeScript 处理联合类型的标准方法，凡是遇到可能为多种类型的场合，都需要先缩小类型，再进行处理。实际上，联合类型本身可以看成是一种“类型放大”（type widening），处理时就需要“类型缩小”（type narrowing）。下面是“类型缩小”的另一个例子。上面示例中，函数体内部对参数变量scheme进行类型缩小，根据不同的值类型，返回不同的结果。交叉类型（intersection types）指的多个类型组成的一个新类型，使用符号&表示。交叉类型A&B表示，任何一个类型必须同时属于A和B，才属于交叉类型A&B，即交叉类型同时满足A和B的特征。上面示例中，变量x同时是数值和字符串，这当然是不可能的，所以 TypeScript 会认为x的类型实际是never。交叉类型的主要用途是表示对象的合成。上面示例中，变量obj同时具有属性foo和属性bar。交叉类型常常用来为对象类型添加新属性。上面示例中，类型B是一个交叉类型，用来在A的基础上增加了属性bar。type命令用来定义一个类型的别名。上面示例中，type命令为number类型定义了一个别名Age。这样就能像使用number一样，使用Age作为类型。别名可以让类型的名字变得更有意义，也能增加代码的可读性，还可以使复杂类型用起来更方便，便于以后修改变量的类型。别名不允许重名。上面示例中，同一个别名Color声明了两次，就报错了。别名的作用域是块级作用域。这意味着，代码块内部定义的别名，影响不到外部。上面示例中，if代码块内部的类型别名Color，跟外部的Color是不一样的。别名支持使用表达式，也可以在定义一个别名时，使用另一个别名，即别名允许嵌套。上面示例中，别名Greeting使用了模板字符串，读取另一个别名World。type命令属于类型相关的代码，编译成 JavaScript 的时候，会被全部删除。JavaScript 语言中，typeof 运算符是一个一元运算符，返回一个字符串，代表操作数的类型。上面示例中，typeof运算符返回字符串foo的类型是string。注意，这时 typeof 的操作数是一个值。JavaScript 里面，typeof运算符只可能返回八种结果，而且都是字符串。上面示例是typeof运算符在 JavaScript 语言里面，可能返回的八种结果。TypeScript 将typeof运算符移植到了类型运算，它的操作数依然是一个值，但是返回的不是字符串，而是该值的 TypeScript 类型。上面示例中，typeof a表示返回变量a的 TypeScript 类型（{ x: number }）。同理，typeof a.x返回的是属性x的类型（number）。这种用法的typeof返回的是 TypeScript 类型，所以只能用在类型运算之中（即跟类型相关的代码之中），不能用在值运算。也就是说，同一段代码可能存在两种typeof运算符，一种用在值相关的 JavaScript 代码部分，另一种用在类型相关的 TypeScript 代码部分。上面示例中，用到了两个typeof，第一个是类型运算，第二个是值运算。它们是不一样的，不要混淆。JavaScript 的 typeof 遵守 JavaScript 规则，TypeScript 的 typeof 遵守 TypeScript 规则。它们的一个重要区别在于，编译后，前者会保留，后者会被全部删除。上例的代码编译结果如下。上面示例中，只保留了原始代码的第二个 typeof，删除了第一个 typeof。由于编译时不会进行 JavaScript 的值运算，所以 TypeScript 规定，typeof 的参数只能是标识符，不能是需要运算的表达式。上面示例会报错，原因是 typeof 的参数不能是一个值的运算式，而Date()需要运算才知道结果。另外，typeof命令的参数不能是类型。上面示例中，Age是一个类型别名，用作typeof命令的参数就会报错。typeof 是一个很重要的 TypeScript 运算符，有些场合不知道某个变量foo的类型，这时使用typeof foo就可以获得它的类型。TypeScript 支持块级类型声明，即类型可以声明在代码块（用大括号表示）里面，并且只在当前代码块有效。上面示例中，存在两个代码块，其中分别有一个类型T的声明。这两个声明都只在自己的代码块内部有效，在代码块外部无效。TypeScript 的类型存在兼容关系，某些类型可以兼容其他类型。上面示例中，变量a和b的类型是不一样的，但是变量a赋值给变量b并不会报错。这时，我们就认为，b的类型兼容a的类型。TypeScript 为这种情况定义了一个专门术语。如果类型A的值可以赋值给类型B，那么类型A就称为类型B的子类型（subtype）。在上例中，类型number就是类型number|string的子类型。TypeScript 的一个规则是，凡是可以使用父类型的地方，都可以使用子类型，但是反过来不行。上面示例中，hi是string的子类型，string是hi的父类型。所以，变量a可以赋值给变量b，但是反过来就会报错。之所以有这样的规则，是因为子类型继承了父类型的所有特征，所以可以用在父类型的场合。但是，子类型还可能有一些父类型没有的特征，所以父类型不能用在子类型的场合。🎉 限时抢推荐机场 -> 25元/月，500G 购买。最后更新: 阮一峰typescript,阮一峰 typescript 教程,typescript阮一峰,typescript中文教程阮一峰,typescript教程阮一峰Copyright © 2023 阮一峰 TypeScript 教程(typescript.p6p.net).",
            "从历史上看，JavaScript已经成为了在Internet上编写网页和应用程序脚本语言的主要语言。但是否能通过JavaScript创建大型复杂Web应用系统呢？可能那么容易。不过值得庆幸的是，我们还有一个解决方案TypeScript。在过去的几年中，TypeScript的受欢迎程度一直在增长。在2020年最有前途的五种语言中，它也是其中之一。目前最大的前端框架之一的Angular正在使用TypeScript，而在大约60％的前端程序员正在使用或曾使用过TypeScript，而另外22％的开发者希望尝试使用。在本文中，我们将向您介绍TypeScript，并引导您开始向JavaScript代码添加类型。以下是我们本文中要介绍的一些要点：简而言之，TypeScript是JavaScript的超集，具有可选的类型并可以编译为纯JavaScript。从技术上讲TypeScript就是具有静态类型的 JavaScript 。那么，向JavaScript添加静态类型的原因是什么？我想原因至少有三个：实际上，一项研究表明，TypeScript可以检测到所有JavaScript错误的15％。动态类型的自由特性经常会导致错误，这些错误不仅会降低程序员的工作效率，而且还会由于增加新代码行的成本增加而使开发陷入停顿。因此，JavaScript无法合并类型以及编译时缺乏错误检查，使它不适合作为企业和大型代码库中服务器端代码。TypeScript本质上是一个JS linter。因此，与其他语言（例如CoffeeScript（添加语法糖）或PureScript（完全不像JavaScript））不同，TypeScript和JavaScript语法没有明显的区别，意味着你无需学习很多知识就可以开始无缝编写TypeScript代码。TypeScript中的类型是可选的，并且每个JavaScript文件都是有效的类型脚本文件。尽管如果初始文件中存在类型错误，编译器会发出警告，但编译器仍然会给您返回一个正常的JavaScript文件。TypeScript可以被编译为JavaScript。因此，TypeScript可以在任何可以使用JavaScript的地方使用：包括前端和后端。JavaScript是用于为应用程序和网页的前端实现脚本的最流行的语言。因此，TypeScript可以用于相同的目的，但是它在服务器端的复杂企业项目中很有用。JavaScript本是为应用程序和网页前端等客户端开发时的语言而设计。所以，TypeScript也同样可以用于完全相同的目的，但在复杂企业项目中的服务端的表现更令它大放异彩。类型是在我们运行程序之前通过在代码中描述我们计划如何使用数据来区分正确程序的方法。它们可以从简单的类型(如数字和字符串) 到为我们的问题域完美建模的复杂结构。编程语言分为两类：静态类型或动态类型。在使用静态类型的语言中，变量的类型在编译时必须是已知的。如果我们声明一个变量，编译器应该知道(或可推断) 该变量是数字、字符串或布尔值。在动态类型的语言中，这不一定是这样。只有在运行程序时才知道变量的类型。TypeScript可以支持静态类型，而JavaScript不支持。TypeScript具有多种基本类型，例如Boolean，Number，String，Array，Tuple等。您可以在TypeScript文档中了解有关它们的更多信息。除了这些，我们还希望介绍其他一些类型来展示TypeScript的表达能力：虽然any作为类型可以涵盖您想要的任何内容，但unknown是其类型安全的对应对象。每当你想要转义类型时，any都允许你将任何JavaScript变量赋给它。它经常用于对尚未检查且类型未知的传入变量时。UNKNOWN与ANY非常相似，但是在显式类型检查之前，它不允许您对变量执行任何操作。void在没有返回值时使用，例如，用作不返回任何值的函数的返回类型。Never 类型表示的是那些永不存在的值的类型，例如将引发异常的函数。交叉类型（Intersection Types）可以将几种基本类型合并为同一种类型。例如，您可以创建具有name：string和phone_number：number的自定义类型Person。联合类型（Union Types）表示可以采用多个基本类型其中之一。我们用竖线（ |）分隔每个类型，所以number | string | boolean表示一个值可以是number，string，或boolean。TypeScript中的类型可以是隐式的也可以是显式的。如果您未明确编写类型，则编译器将使用类型推断来推断您正在使用的类型。但是，显式地编写它们会带来很多好处，例如帮助其他开发人员阅读您的代码，并确保您所看到的就是编译器所看到的。让我们看一下以下这个图表：在2020年第一季度的GitHub拉取请求中，TypeScript从无到有地排在第7位，高于PHP和C语言。虽然这在很大程度上是因为微软和谷歌等公司对TypeScript的支持，但支持它是有充分的理由的。与JavaScript相比，TypeScript代码更可靠、更容易重构。这使开发人员可以更轻松地避免错误并进行重写。类型的定义和编译器的引入，可使你避免掉代码中的大多数愚蠢错误。显式类型使我们代码可读性更高，所以我们的注意力将会更集中在我们的系统究竟是如何构建的，以及系统的不同部分如何相互作用。在大型系统中，能够在记住上下文的同时抽象出系统的其余部分是很重要的。类型的定义使我们能够做到这一点。由于JavaScript是TypeScript的子集，因此您可以在TypeScript代码中使用您想要的所有JavaScript库和代码。要编译您的TypeScript代码，您需要安装tsc（TypeScript编译器的缩写）。最简单的方法是通过npm使用以下命令轻松完成此操作：npm install -g typescript如果要在VS Code中使用TypeScript，你能够在其网站上找到相应的指南。安装完成后tsc，您可以使用命令编译文件tsc filename.ts。假设我们要将以下JavaScript代码更改为TypeScript：从技术上讲，任何JavaScript文件都可以是TypeScript文件，因此您只需将文件扩展名从.js切换到.ts即可。TypeScript具有类型推断功能，这意味着它可以自动推断您使用的某些类型。但如果只想对数字求和，则可以对my_sum函数添加类型以使其仅接受数字类型的变量。要在浏览器中运行TypeScript，需要使用TypeScript编译器（tsc）将其转换为JavaScript。在这种情况下，请tsc根据.ts代码创建一个新的.js文件，您可以使用使用JavaScript文件的任何方式使用该文件。这个免费的Web资源提供了您从TypeScript开始所需的一切，包括我们已经在此处介绍的部分的更详细的说明。这是一门实用的3小时课程，涵盖TypeScript的所有基本功能，如何使用它与某些JavaScript框架进行交互以及在编写JavaScript时如何利用TypeScript的功能。总体而言，TypeScript是一个很好的工具，即使您没有使用过它，也可以将其纳入你的学习计划中。从点滴开始学起，慢慢的你就会很快上手的，因为TypeScript的学习曲线对初学者非常友好，所以你无需担心。最后，希望本文对你的TypeScript学习带来一些帮助。",
            "TypeScript 2.2 引入了被称为 object 类型的新类型，它用于表示非原始类型。在 JavaScript 中以下类型被视为原始类型：string、boolean、number、bigint、symbol、null 和 undefined。所有其他类型均被视为非基本类型。新的 object 类型表示如下：让我们看看 object 类型，如何让我们编写更精确的类型声明。随着 TypeScript 2.2 的发布，标准库的类型声明已经更新，以使用新的对象类型。例如，Object.create() 和Object.setPrototypeOf() 方法，现在需要为它们的原型参数指定 object | null 类型：将原始类型作为原型传递给 Object.setPrototypeOf() 或 Object.create() 将导致在运行时抛出类型错误。TypeScript 现在能够捕获这些错误，并在编译时提示相应的错误：object 类型的另一个用例是作为 ES2015 的一部分引入的 WeakMap 数据结构。它的键必须是对象，不能是原始值。这个要求现在反映在类型定义中：也许令人困惑的是，TypeScript 定义了几个类型，它们有相似的名字，但是代表不同的概念：我们已经看到了上面的新对象类型。现在让我们讨论 Object 和 {} 表示什么。TypeScript 定义了另一个与新的 object 类型几乎同名的类型，那就是 Object 类型。该类型是所有 Object 类的实例的类型。它由以下两个接口来定义：下面我们来看一下上述两个接口的相关定义：1、Object 接口定义2、ObjectConstructor 接口定义Object 类的所有实例都继承了 Object 接口中的所有属性。我们可以看到，如果我们创建一个返回其参数的函数：传入一个 Object 对象的实例，它总是会满足该函数的返回类型 —— 即要求返回值包含一个 toString() 方法。而 object 类型，它用于表示非原始类型（undefined, null, boolean, number, bigint, string, symbol）。使用这种类型，我们不能访问值的任何属性。有趣的是，类型 Object 包括原始值：为什么？Object.prototype 的属性也可以通过原始值访问：感兴趣的读者，可以自行了解一下 “JavaScript 装箱和拆箱” 的相关内容。相反，object 类型不包括原始值：需要注意的是，当对 Object 类型的变量进行赋值时，如果值对象属性名与 Object 接口中的属性冲突，则 TypeScript 编译器会提示相应的错误：而对于 object 类型来说，TypeScript 编译器不会提示任何错误：另外在处理 object 类型和字符串索引对象类型的赋值操作时，也要特别注意。比如：在上述例子中，最后一行会出现编译错误，这是因为 { [key: string]: string } 类型相比 object 类型更加精确。而 header = strictTypeHeaders; 这一行却没有提示任何错误，是因为这两种类型都是非基本类型，object 类型比 { [key: string]: string } 类型更加通用。还有另一种类型与之非常相似，即空类型：{}。它描述了一个没有成员的对象。当你试图访问这样一个对象的任意属性时，TypeScript 会产生一个编译时错误：但是，你仍然可以使用在 Object 类型上定义的所有属性和方法，这些属性和方法可通过 JavaScript 的原型链隐式地使用：在 JavaScript 中创建一个表示二维坐标点的对象很简单：然而以上代码在 TypeScript 中，每个赋值语句都会产生错误：这是因为第 A 行中的 pt 类型是根据它的值 {} 推断出来的，你只可以对已知的属性赋值。这个问题怎么解决呢？有些读者可能会先想到接口，比如这样子：很可惜对于以上的方案，TypeScript 编译器仍会提示错误。那么这个问题该如何解决呢？其实我们可以直接通过对象字面量进行赋值：而如果你需要一步一步地创建对象，你可以使用类型断言（as）来消除 TypeScript 的类型检查：但是更好的方法是声明变量的类型并一次性构建对象：另外在使用 Object.assign 方法合并多个对象的时候，你可能也会遇到以下问题：这时候你可以使用对象展开运算符 ... 来解决上述问题：我们除了可以通过 Object 和 object 类型来描述对象之外，也可以通过对象的属性来描述对象：在 TypeScript 中有两种定义对象类型的方法，它们非常相似：在以上代码中，我们使用分号或逗号作为分隔符。尾随分隔符是允许的，也是可选的。好的，那么现在问题来了，对象字面量类型和接口类型之间有什么区别呢？下面我从以下几个方面来分析一下它们之间的区别：对象字面量类型可以内联，而接口不能：含有重复名称的类型别名是非法的：TypeScript 2.6 支持在 .ts 文件中通过在报错一行上方使用 // @ts-ignore 来忽略错误。\\n// @ts-ignore 注释会忽略下一行中产生的所有错误。建议实践中在 @ts-ignore之后添加相关提示，解释忽略了什么错误。\\n请注意，这个注释仅会隐藏报错，并且我们建议你少使用这一注释。相反，含有重复名称的接口将会被合并：对于映射类型（A行），我们需要使用对象字面量类型：多态 this 类型仅适用于接口：相信很多刚接触 TypeScript 的读者，看到 Object、object 和 {} 这几种类型时，也会感到疑惑。因为不知道它们之间的有什么区别，什么时候使用？为了让读者能更直观的了解到它们之间的区别，最后我们来做个总结：object 类型是：TypeScript 2.2 引入的新类型，它用于表示非原始类型。Object 类型：它是所有 Object 类的实例的类型。它由以下两个接口来定义：它由以下两个接口来定义：Object 类的所有实例都继承了 Object 接口中的所有属性。{} 类型：它描述了一个没有成员的对象。当你试图访问这样一个对象的任意属性时，TypeScript 会产生一个编译时错误。但是，你仍然可以使用在 Object 类型上定义的所有属性和方法。本文分享自 作者个人站点/博客 前往查看如有侵权，请联系 cloudcommunity@tencent.com 删除。本文参与 腾讯云自媒体分享计划  ，欢迎热爱写作的你一起参与！扫码关注腾讯云开发者领取腾讯云代金券Copyright © 2013 - 2024 Tencent Cloud. All Rights Reserved. 腾讯云 版权所有 深圳市腾讯计算机系统有限公司 ICP备案/许可证号：粤B2-20090059 深公网安备号 44030502008569腾讯云计算（北京）有限责任公司 京ICP证150476号 |  京ICP备11018762号 | 京公网安备号11010802020287Copyright © 2013 - 2024 Tencent Cloud.All Rights Reserved. 腾讯云 版权所有",
            "热门"
        ]
    },
    {
        "prompt": "c++ vector 存的结构体 怎么删除里面的某个值",
        "doc": [
            "目录一、前言二、 深度理解vector 的二维数组（重点！） 三、vector 二维数组的空间理解（重点！）✨问题分析✨如何合理定制vector的内存空间 四、vector 二维数组的初始化五、vector 二维数组的 添加与删除✨添加一行✨添加一列✨删除一行✨删除一列六、常考面试题 七、共勉    最近在刷 Leetcode 的时候，发现 vector 的二维数组操作 都还没弄明白吗，但是STL的强大是众所周知滴，早晚都是要解决滴，因此专门写下这篇文章，以供自己复习和各位老铁使用，快速的回忆vector的用法，让你找回自信，不用再竞赛的时候颜面尽失。     vector 的一维操作可以看看之前这篇文章哦：vector 详解     在解决大部分算法问题的时候，通常都会遇到二维数组 vector<vector<int>> table, 但是不知道怎么对其进行初始化（初始化时指定二维容器的大小），于是通过查阅了很多资料，将其总结如下： 代码说明：声明一个名为 table 的容器，其元素为 vector的容器。简单来说类似一个int型的二维数组。这样，就得到了一个如下图所示的二维容器。  具体代码的内容，可以这样理解： 图中，我将外围容器table的初始化参数分成了两部分 A、B 观察规律，可以得出如下的初始化格式：容器（大小，内容）      我们都知道，在 C语言 中，创建一维数组或者更高维度的数组时，都是需要提前给他分配大小的。       而在 C++的 vector 容器 中我们并不需要那么做，我们可以直接push进去后，根据下标访问它，如： 由此处诞生出了两个问题：错误原因： 首先要明白，我们第二个问题的出现，其实就是因为第一个问题，那么我们逐个分析一下： 如何理解这两个函数接口呢？ 【总结】上述两方法的区别所以针对问题二出现的原因：vector 直接根据下标访问必须要先push，存在数才行。而上面的代码想直接对第一行里面的各个元素进行访问或者修改时绝对不行的。但是相反，如果我们先对第一行进行赋值，然后再访问，这样又是可以的，如： 因此，想要直接对第一行第一列的进行调整，就需要我们预先给他点空间了！！首先，要先知道：二维 vector 如何获得行数和列数。 方法一：定义时，直接初始化 （1）下面定义的是行为r，列为c的二维数组（2）下面定义的是行为r，列为c的二维数组，初始值为0方法二：用resize来提前构建（下面定义的是行为r，列为c的二维数组，初始值为0–因为resize默认为0）方法三：每行不一定几个数，就是想对每行的列进行操作 题目：杨辉三角形 链接：118. 杨辉三角 以下就是我对【C++ STL】vector 二维数组 的理解，如果有不懂和发现问题的小伙伴，请在评论区说出来哦，同时我还会继续更新对C++STL库的理解，请持续关注我哦！！！\\n        \\n    \\n                    猫头虎: \\n                    🌈🐅 💻🌟📊 深入浅出🔥，本文将复杂的科技话题以通俗易懂的方式呈现，让每位读者都能轻松领略科技的魅力。🐅🐾\\n                \\n                    落鱼.: \\n                    博主文章写的十分细致，结构严谨。感谢博主分享\\n                \\n                    青花锁: \\n                    High quality and excellent article, and details are well done, balancing practicality and operability, supporting the blogger.\\n                \\n                    猫头虎: \\n                    🌈🐅 📱🎉🌍 科技与生活，通过分析科技如何影响日常生活的各个方面，本文让我们看到科技进步给生活带来的积极变化。🐅🐾\\n                \\n                    空空bye: \\n                    博主的写作风格流畅而有趣, 并且能够用简洁明了的语言将复杂的概念传达给读者, 期待阅读更多博主文章.\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "",
            "map容器是C++ STL中的重要一员，平时会遇到删除map容器中value为指定元素的问题，例如删除所有字符串为\"123\"或者能整除3的元素。由于map容器下的方法较多，这里只列举代码中用到的几个方法：insert()方法：1\\n2\\n3\\n4\\n5\\n6//插入val到pos的后面，然后返回一个指向这个元素的迭代器\\niterator insert( iterator pos, const pair<KEY_TYPE,VALUE_TYPE> &val );\\n//插入start到end的元素到map中\\nvoid insert( input_iterator start, input_iterator end );\\n//只有在val不存在时插入val。返回值是一个指向被插入元素的迭代器和一个描述是否插入的bool值\\npair<iterator, bool> insert( const pair<KEY_TYPE,VALUE_TYPE> &val );erase()方法：1\\n2\\n3\\n4//erase()函数删除在pos位置的元素，或者删除在start和end之间的元素，或者删除那些值为key的所有元素\\nvoid erase( iterator pos );\\nvoid erase( iterator start, iterator end );\\nsize_type erase( const KEY_TYPE &key );iterator迭代器。下面代码中map容器的value对应的是一个string类型的指针，在初始化时类似于string *p = new string(\"123\");。1\\n 2\\n 3\\n 4\\n 5\\n 6\\n 7\\n 8\\n 9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71/**\\n * @FileName    map_del_str.cpp\\n * @Describe    A simple example for deleting an element of string in map.\\n * @Author      vfhky 2016-06-26 10:26 https://typecodes.com/cseries/mapdelintstring.html\\n * @Compile     g++ map_del_str.cpp -o map_del_str\\n * @Reference   \\n */\\n#include <iostream>\\n#include <map>\\n\\nusing namespace std;\\n#define TOTAL 10\\n#define DEL_STR \"123\"\\n\\n\\n/**\\n * 删除map中所有元素为str的数据\\n */\\nvoid fun( map<int, string *> &map1, const string str )\\n{\\n    map<int, string *>::iterator it;\\n    int i_Total = 0;\\n    for( it=map1.begin(); it!=map1.end(); )\\n    {\\n        if( *(it->second) == str )\\n        {\\n            /**\\n             * 123 123 123 123 123 123 123 123 123 123 \\n             */\\n            cout << *(it->second) << \" \";\\n\\n            //一定要先释放内存的控制\\n            delete it->second;\\n            it->second = NULL;\\n\\n            //再删除迭代\\n            map1.erase(it++);\\n            ++i_Total;\\n        }\\n        else\\n        {\\n            it++;\\n        }\\n    }\\n\\n    //i_Total=10\\n    cout << endl << \"i_Total=\" << i_Total << \"\" << endl;\\n}\\n\\nint main( int argc, char **argv )\\n{\\n    map<int, string *> map1;\\n\\n    //初始化map1\\n    for( int i=0; i<TOTAL; i++ )\\n    {\\n        map1.insert( pair<int, string *>(i,new string(\"123\")) );\\n        //map1i = new string(\"123\");\\n    }\\n\\n    //删除为DEL_STR的元素\\n    fun( map1, DEL_STR );\\n\\n    //查看最后的数据\\n    map<int, string *>::iterator it1;\\n    for( it1=map1.begin(); it1!=map1.end(); ++it1 )\\n    {\\n        cout << \"map1\" << it1->first << \"=\" << *(it1->second) << \"\" << endl;\\n    }\\n    return 0;\\n}效果如下图所示：下面代码中map容器的value对应的是一个int数据，在初始化时可以直接使用map1[i] = i语句。1\\n 2\\n 3\\n 4\\n 5\\n 6\\n 7\\n 8\\n 9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63/**\\n * @FileName    map_del_int.cpp\\n * @Describe    A simple example for deleting an element of interger in map.\\n * @Author      vfhky 2016-06-26 10:26 https://typecodes.com/cseries/mapdelintstring.html\\n * @Compile     g++ map_del_int.cpp -o map_del_int\\n * @Reference   \\n */\\n#include <iostream>\\n#include <map>\\n\\nusing namespace std;\\n#define TOTAL 100\\n#define DEL_INT 3\\n\\n\\n/**\\n * 删除map中所有值整除NUM的元素\\n */\\nvoid fun( map<int,int> &map1, const int NUM )\\n{\\n    map<int, int>::iterator it;\\n    int i_Total = 0;\\n    for( it=map1.begin(); it!=map1.end(); )\\n    {\\n        if( it->second % NUM == 0 )\\n        {\\n            /**\\n             * 0 3 6 9 12 15 18 21 24 27 30 33 36 39 42 45 48 51 54 57 60 63 66 69 72 75 78 81 84 87 90 93 96 99 \\n             */\\n            cout << it->second << \" \";\\n            map1.erase(it++);\\n            ++i_Total;\\n        }\\n        else\\n        {\\n            it++;\\n        }\\n    }\\n    cout << endl << \"i_Total=\" << i_Total << \"\" << endl;\\n}\\n\\nint main( int argc, char **argv )\\n{\\n    map<int, int> map1;\\n\\n    //初始化map1\\n    for( int i=0; i<TOTAL; i++ )\\n    {\\n        map1.insert(pair<int, int>(i,i));\\n        //map1i = i;\\n    }\\n\\n    //删除整除3的元素\\n    fun( map1, DEL_INT );\\n\\n    //查看最后的数据\\n    map<int, int>::iterator it1;\\n    for( it1=map1.begin(); it1!=map1.end(); ++it1 )\\n    {\\n        cout << \"map1\" << it1->first << \"=\" << it1->second << \"\" << endl;\\n    }\\n    return 0;\\n}效果如下图所示：STL容器分顺序容器Sequence Container（包含vector，deque，list容器）和关联容器Associative Container（包含set，multiset，map，multimap容器）。C++标准中，Sequence Container的erase函数会返回iterator，但Associative Container不返回iterator。所以在小节2、小节3中使用map1.erase(it++)而不是直接map1.erase(it)。本文分享自 作者个人站点/博客 前往查看如有侵权，请联系 cloudcommunity@tencent.com 删除。本文参与 腾讯云自媒体分享计划  ，欢迎热爱写作的你一起参与！扫码关注腾讯云开发者领取腾讯云代金券Copyright © 2013 - 2024 Tencent Cloud. All Rights Reserved. 腾讯云 版权所有 深圳市腾讯计算机系统有限公司 ICP备案/许可证号：粤B2-20090059 深公网安备号 44030502008569腾讯云计算（北京）有限责任公司 京ICP证150476号 |  京ICP备11018762号 | 京公网安备号11010802020287Copyright © 2013 - 2024 Tencent Cloud.All Rights Reserved. 腾讯云 版权所有",
            "目录写在前面：一、题目：二、思路：1.关于结构体：2.关于数组：3.关于函数：4.关于思想：三、程序：Step1：在主函数内完成单一简单结构体的输入输出。Step2：编写input函数完成单一简单结构体的输入。Step3：编写output函数完成单一简单结构体的输出。Step4：改进input和output函数完成结构体数组的输入。Step5：编写check函数完成结构体的查找。Step6：优化输出四、致谢：哈哈哈~ sgq周五又留新作业啦~踢到我，你算是踢到棉花啦~（笔芯.gif）今天又学了一天的程序设计呢~爷爷奶奶可高兴了~给了我最爱吃的大笔豆~建立一个学生结构类型，包括：学生的学号，姓名，性别，三门成绩。要求实现以下功能：input()函数输入若干学生信息，学生人数由主函数提供，输入的信息保存到数组中。output()输出函数，输出学生的信息。check()实现输入学号可以查询学生信息。首先由题目可知，我们需要自定义一个结构体类型student，定义好元素类型（学号，姓名为字符型数组，性别为字符型，三门成绩为双精度浮点型）（1）学号要使用字符型，因为通常情况下学号超过了长整型的范围大小。（2）数组的长度要适当长些，输入的时候可以随时使用回车键终止输入，但过短可能会出现“\\\\0”没有地方存储的情况，进而出现数组溢出或学号和姓名连在一起输出的情况。报错原因2由tjl倾情提供        上面就是一个比较简单的输入输出程序，我们想要输入的学号为11位，如果把数组的长度正好定义为11的话，后面的姓名也会跟在一起输出，如左图所示：        而如果把number[11]的长度稍微调多一些，就可以顺利输出，如右图所示：        一个学生就是一个结构体，我们想要输入多个学生，就需要用到结构体数组，因此我们要在主调函数中定义一个结构体数组。        输入函数选择结构体指针型函数，返回一个结构体数组。        输出函数可以通过指针遍历进行输出，再加const关键字修饰，防止其指向的值被篡改。        至于编程的思想，我们依旧采用模块化的思想，将整个问题拆分成多个小模块，逐步解决实现，最后完成整个程序。        这个应该是结构体很入门的知识了，这里不再赘述，参见上方程序即可。        因为函数并不能改变形参的值，因此我们选择通过返回值在主函数为结构体赋值。由于我们将输出单独编写成了一个函数放在了主函数的外面，因此我们需要在主函数定义结构体时将其初始化。程序如下：        由于我们需要用到指针，所以函数的形参需要取结构体s的地址（&s）传入到output中，再用*s作为实参进行遍历输出。同时在实参前加const修饰代表其为指向常量的指针。结构体指针运算符为\"->\"，灵活运用它就可以利用指针完成结构体的输出。程序如下：Step1.2.3的输出均相同，如下图所示：        这一步，类比整型和整型数组即可,在主函数的结构体定义时加上长度，循环调用input函数即可完成数组的输入。结构体数组的输出，我们将每个结构体的首地址传给输出函数后循环调用即可，程序如下：输出如下图所示：        由于要查找的字符串为字符型，因此我想到之前字符串操作系统的strcmp，这个是一个字符串的比较的函数，如果相同就返回0，否则返回非零值，原文链接挂在下面了：点我复习strcmp~        所以我选择调用这个函数在结构体数组中对学号进行字符串的比较，如果相等就输出，如果遍历结束仍未找到就输出提示。        具体思路为：将结构体数组，输入的字符数组学号和结构体数组的长度作为形参传入check函数中，外层for循环用于数组的遍历，这个的思路依然和找素数的思路极为相似，需要注意的是，这里的循环判断条件为i<=n，因为我希望i==n的时候如果还没有找到学号相同的学生的话输出提示语。内层if语句用来判断是否完整遍历了结构体数组，再内层的if语句用来判断学生的学号与输入的学号是否相等，如果相等则输出返回主函数，否则执行空语句进入下一次循环。程序如下图：代码执行如下：程序的框架到这里大概已经成型啦！（printf(\"撒花\"））~这之后我们只需要完善结构体的类型，优化我们的输出与提示，让我们的程序更丝滑就可以啦，完整程序如下：        这么严谨的博客怎么能少的了珍贵的致谢环节呢，先感谢一下sgq吧，谢谢她又让我度过了一个充实的周六，从下午打开教材，b站大学，CSDN开始学习再到编程运行调试再到写完这篇博客，整整耗时8个小时^=^。再感谢一下一直陪伴在我身边的各位，你们是我坚持下去的动力（感动.jpg）\\n                    CSDN-Ada助手: \\n                    恭喜用户发布第8篇博客！标题“更适合滑湿宝宝的类的定义与使用笔记”听起来很有趣呢。希望您能继续保持创作的热情和动力，为读者带来更多有价值的内容。或许下一步可以考虑分享一些实际案例或者经验分享，让读者更容易理解和应用您的知识。期待您的下一篇作品！愿您的创作之路越走越宽广。\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第6篇博客！看了您关于C++结构体输入和输出函数的笔记，收获颇丰。希望您能继续保持创作的热情，不断分享自己的学习心得。接下来，您可以考虑深入探讨C++中其他常用的数据结构或算法，这将有助于提升您的编程技能。期待您的下一篇作品！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜你在博客中分享了新的链表输入思路！不断探索和尝试新的方法是非常值得称赞的。接下来，或许你可以考虑深入分析getchar()在链表输入中的应用，结合实际案例进行演示，让读者更容易理解和应用。希望你能继续保持创作热情，为大家带来更多有趣和有用的内容！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜作者在动态链表学习笔记中深入探讨了查找、插入与删除的相关知识！不断学习、总结与分享是非常宝贵的，期待看到更多作者的精彩内容。建议作者在下一篇博客中可以尝试结合实际案例或者代码示例，更加直观地展示所学知识。加油！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者蜜汁博哥我是大学生，给钱您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。"
        ]
    },
    {
        "prompt": "刷新dns缓存",
        "doc": [
            "Mac清除DNS缓存,一键刷新的工具你值得拥有在信息高速公路上，你的Mac就像一辆豪华跑车，而DNS缓存则像是导航系统。但有时候，导航会出错，让你的跑车开上了歪路。这时候，Mac清除DNS缓存，就像是重置导航，让你的Mac重新找到最快的路线。DNS缓存对Mac的影响：为什么你的Mac会迷路DNS（域名系统）缓存，就是你的电脑为了加快访问速度而保存的网站地址簿。但当网站的地址发生变化，而你的缓存还没更新时，就会导致网页加载错误或者访问速度慢。这就像你的导航还没更新，却试图通过一个已经不存在的路口，结果可想而知。Mac清除DNS缓存：手动调校你的导航系统Mac清除DNS缓存通常涉及在终端中使用特定的命令。这些步骤可能会根据你的操作系统版本有所不同。以下是一些常见的MacOS版本及其相应的清除DNS缓存的方法：macOS Sierra (10.12) 及更高版本：打开“终端”应用（通常可在启动台的实用工具文件夹中找到，或者使用Spotlight搜索）。输入以下命令：sudo killall -HUP mDNSResponder按下回车键。当系统提示时，输入你的管理员密码并回车。这是必要的，因为sudo命令允许你以超级用户身份执行命令。macOS Yosemite (10.10) 到 macOS El Capitan (10.11):打开“终端”，输入以下命令：sudo dscacheutil -flushcache;sudo killall -HUP mDNSResponder按下回车，输入管理员密码。macOS Mavericks (10.9):打开“终端”，输入以下命令：dscacheutil -flushcache;sudo killall -HUP mDNSResponder按下回车，输入管理员密码。温馨提示：在执行这些命令后，你可能不会看到任何确认消息。如果没有错误出现，通常这意味着命令已成功执行。清除DNS缓存不会影响你的日常网络活动，但在短时间内可能会略微减慢初始的域名解析速度。确保你输入的命令与你的MacOS版本相匹配。以上操作步骤对于技术达人来说小菜一碟，但对于普通用户来说，可能就像是在解读古埃及象形文字。Mac清除DNS缓存：CleanMyMac X一键搞定，高效便捷这时，CleanMyMac X就像是一个翻译古文字的专家，把复杂的操作简单化，提供直观的操作界面，帮你一键完成Mac清除DNS缓存。到官网下载【https://www.cleanmymac.cn/download/】，安装成功后打开，点击菜单栏的【维护】，查看任务在任务列表中勾选“刷新DNS缓存”，然后执行。就这样，Mac清除DNS缓存完成了。CleanMyMac X的其他优化功能：不仅仅是清除DNS缓存CleanMyMac X的魅力不止于此！它不仅可以帮你的Mac清除DNS缓存，还能进行系统垃圾清理，释放空间；隐私清理能帮你消除浏览痕迹，保护个人信息；优化功能还可以帮你提升系统运行速度。总之，CleanMyMac X就是你的Mac最贴心的管家。结语：让你的Mac永远不迷路Mac清除DNS缓存，如果你厌倦了手动清除的繁琐步骤，或是想让你的Mac运行得更加顺畅，不妨试试CleanMyMac X。让这个强大的工具成为你的得力助手，保证你的Mac永远在信息高速公路上疾驰不误。",
            "Linux系统中刷新DNS缓存的命令是”systemd-resolve –flush-caches”。使用该命令可以清空系统中的DNS缓存，并使其重新获取最新的DNS解析结果。另外，由于不同的Linux发行版可能使用不同的DNS解析服务，所以还可以通过以下命令来刷新DNS缓存：1. 对于使用systemd的发行版（如Ubuntu、Fedora）：   – 使用”systemctl restart systemd-resolved”命令重启systemd-resolved服务。2. 对于使用dnsmasq的发行版（如Debian、CentOS）：   – 使用”systemctl restart dnsmasq”命令重启dnsmasq服务。3. 对于使用nscd（Name Service Caching Daemon）的发行版：   – 使用”service nscd restart”或”/etc/init.d/nscd restart”命令重启nscd服务。通过以上命令，可以有效地刷新Linux系统中的DNS缓存，以便获取最新的DNS解析结果。在进行网络调试或更改DNS配置后，刷新DNS缓存是一个常用的操作。在Linux系统中，可以通过以下命令刷新DNS缓存：1. `systemd-resolve –flush-caches`：这是使用systemd-resolve工具刷新DNS缓存的命令。systemd-resolve是systemd提供的DNS解析器和缓存管理器，在最新的Linux发行版中默认安装。2. `sudo service network-manager restart`：这是使用Network Manager服务重启来刷新DNS缓存的命令。Network Manager是大多数Linux发行版中默认使用的网络管理工具，通过重启Network Manager服务可以刷新DNS缓存。3. `sudo /etc/init.d/nscd restart`：这是使用nscd（Name Service Cache Daemon）服务重启来刷新DNS缓存的命令。nscd是一个负责缓存DNS解析结果的守护进程，通过重启nscd服务可以刷新DNS缓存。4. `sudo systemctl restart nscd`：这是使用systemctl工具重启nscd服务来刷新DNS缓存的命令。systemctl是systemd提供的服务管理工具，可以通过重启nscd服务来刷新DNS缓存。5. `sudo /etc/init.d/dns-clean restart`：这是使用dns-clean服务重启来刷新DNS缓存的命令。dns-clean是一个DNS缓存清理工具，可以通过重启dns-clean服务来刷新DNS缓存。在Linux系统中，你可以使用以下命令来刷新DNS缓存：1. systemd-resolve命令（适用于Systemd发行版，如Ubuntu 16.04及更高版本）：可以使用以下命令刷新DNS缓存：“`shellsudo systemd-resolve –flush-caches“`2. nscd服务命令（适用于使用nscd服务的发行版，如CentOS）：可以使用以下命令重启nscd服务来刷新DNS缓存：“`shellsudo systemctl restart nscd“`3. nscd服务命令（适用于使用nscd服务的发行版，如Ubuntu 14.04及更低版本）：可以使用以下命令重启nscd服务来刷新DNS缓存：“`shellsudo service nscd restart“`4. NetworkManager服务命令：对于使用NetworkManager服务的发行版，可以使用以下命令来刷新DNS缓存：“`shellsudo systemctl restart NetworkManager“`5. /etc/init.d/networking服务命令：对于较旧的发行版，你可以使用以下命令来刷新DNS缓存：“`shellsudo /etc/init.d/networking restart“`以上方法可以根据你的Linux发行版和所使用的服务来选择使用。执行上述命令后，系统将会刷新DNS缓存并清除旧的解析信息，从而获取最新的DNS记录。PingCode：项目管理 产品管理 知识管理 效能管理 测试管理 协作空间 自动化 目录服务 万象方舟ICP：京B2-20192206 京ICP备13017353号 京公网安备11010802012357号| 违法和不良信息举报邮箱 abuse@worktile.com |© 2021 Worktile.com400-800-1024工作日9:30-21:00在线",
            "此浏览器不再受支持。请升级到 Microsoft Edge 以使用最新的功能、安全更新和技术支持。试用我们的虚拟代理 - 它可以帮助你快速识别和修复常见的 DNS 问题。此解决方案旨在帮助对域名系统 (DNS) 方案进行故障排除。 可以将 DNS 故障排除分解为服务器端和客户端问题。此问题可能有以下任一原因。如果 DNS 区域中缺少 DNS 记录，则清理是最常见的原因。 即使是具有静态分配服务器的基于 Windows 的计算机，也每 24 小时注册一次记录。 检查 NoRefresh 和刷新间隔是否太低。 例如，如果这些值都“小于 24 小时”，则会丢失 DNS 记录。若要排查此问题，请参阅 使用 DNS 老化和清理。有时，在新配置的 DNS 服务器 IP 地址上注册主机“A”记录后，会在原始 DNS 服务器上删除主机“A”记录， (Active Directory 集成 DNS) 。 从用户的角度来看，依赖于名称解析的任何内容都已中断。 当客户端上的 DNS 服务器 IP 地址发生更改时，客户端会发送 SOA 更新以从旧 DNS 服务器中删除其“A”记录。 然后，它会发送另一个更新，以将其“A”记录注册到新的 DNS 服务器。问题发生在 Active Directory 集成区域中。 在客户端上更改 DNS 服务器 IP 地址时，会出现问题。 当 IP 地址更改时，客户端会向新服务器发送注册请求，并将删除请求发送到旧服务器。 由于两台服务器都已同步，因此不会注册记录。 但是，由于 Active Directory 复制，“A”记录在旧服务器上删除，然后在两台服务器上将其删除。如果定义了选项 81 并且存在 ISATAP 或 6to4 接口，则会出现此问题。 DNS 动态更新协议更新错误地将 TTL 设置为 0。 这会触发 IPv6 记录注册的记录删除。对现有记录的 DNS 动态更新协议更新失败。 因此，清理过程会将记录视为过期，并删除这些记录。NETLOGON 服务为 SRV 记录的记录注册失败记录了 NETLOGON“事件 577X”。 记录主机“A”和 PTR 记录注册失败的其他事件。 检查系统日志中是否存在这些故障。 注册这些记录的客户端可能会记录此类事件。 或者，它们可能由代表客户端注册记录的 DHCP 服务器记录。此行为是设计使然。  (“A”或“PTR) 的 DNS 记录在客户端的下一个 DHCP 续订请求期间自动更新。如果网络适配器配置为在 DNS 中注册连接地址，则 DHCP/DNS 客户端服务在 DNS 中注册记录。 应将不需要的网卡配置为不在 DNS 中注册连接地址。若要防止此问题，请确保未在 DNS 中注册不需要的网络适配器地址。 请按照下列步骤操作：如果 DNS 服务器将查询转发到无法访问的转发器或根提示，DNS 查询请求可能会超时。 要解决此问题，请执行下列步骤：事件消息：DNS 服务器无法打开 Active Directory。 此 DNS 服务器配置为使用目录服务信息，在没有访问目录的情况下无法运行。 DNS 服务器将等待目录启动。 如果 DNS 服务器已启动，但尚未记录相应的事件，则 DNS 服务器仍在等待目录启动。若要排查此问题，请参阅 排查 AD DS 问题并重启 DNS 服务器服务。使用 Active Directory 集成区域 (名为 contoso.com 的默认区域范围) 以及与特定子网关联的地理位置区域范围。 使用 Windows PowerShell Add-DnsServerQueryResolutionPolicy cmdlet 配置 DNS 解析策略。所需的结果是客户端尝试查找请求的资源，先在本地区域范围，然后是默认区域范围。 但是，在组织配置这些策略后，来自已定义子网的客户端无法成功解析托管在默认区域范围 (contoso.com) 的记录。 例如，客户端无法解析 hostA.contoso.com。 DNS 服务器收到此类请求时，会返回“服务器故障”消息。若要排查此问题，请参阅 DNS 服务器地理位置策略未按预期工作。你使用的是第三方 DNS 服务器解决方案，在使用条件转发时无法一致地解析名称。本地 DNS 服务器 (10.100.100.70) 可以连接到配置为条件转发器 (10.133.3.250) 的 DNS 服务器。 从 DNS 服务器向条件转发器发出的第一个请求成功解析 (名称，例如，nbob1.contoso.com) 。 一段时间后，名称解析将停止工作。 对条件转发器的 nslookup 查询返回“不存在域”错误消息。如果清除转发计算机上的 DNS 服务器缓存 (本地 DNS 服务器) ，则名称解析会恢复。 但是，此修复是暂时的。若要排查此问题，请参阅 双堆栈查询的转发 DNS 名称解析失败。请考虑以下情况：重启 DNS 服务器后，Windows 会删除设置。 DNS 服务器再次开始侦听所有 IP 地址。发生此更改时，Windows 会在 DNS 服务器事件日志中记录事件 ID 410：受限制接口的 DNS 服务器列表不包含服务器计算机的有效 IP 地址。 DNS 服务器将使用计算机上的所有 IP 接口。 使用 DNS 管理器服务器属性和接口对话框验证和重置 DNS 服务器应侦听的 IP 地址。 有关详细信息，请参阅联机帮助中的“将 DNS 服务器限制为仅侦听所选地址”。若要解决此问题，请参阅 DNS 服务器还原为侦听所有 IP 地址，而不是配置的 NIC 组合 IP 地址。你有一个基础结构，该基础结构使用 Windows 动态主机配置协议 (DHCP) 客户端和 Microsoft DHCP 服务器来分配和管理 IP 地址。 在 DHCP 服务器上， 根据以下设置选择“启用 DNS 动态更新 ”和“ 始终动态更新 DNS 记录”。 在此配置中，你希望 DHCP 服务器管理 A 记录和 PTR 记录的动态 DNS 更新。 但是，你会看到客户端和服务器都创建了 DNS 记录。 根据配置，此行为具有以下影响：若要解决此问题，请参阅 DHCP 服务器设置为“始终动态更新 DNS 记录”时的 DNS 记录注册行为。在联系 Microsoft 支持人员之前，可以收集有关你的问题的信息。注意如果当前 PowerShell 执行策略不允许运行 TSSv2，请执行下列操作：在所有节点上下载 TSSv2 并将其解压缩到 C：\\\\tss_tool 文件夹中。在提升的 PowerShell 命令提示符下打开 C：\\\\tss_tool 文件夹。使用以下 cmdlet 在客户端和服务器上启动跟踪：客户：服务器：如果跟踪首次在服务器或客户端上运行，请接受 EULA。允许录制 (PSR 或视频) 。在输入 Y 之前重现问题。注意如果在客户端和服务器上收集日志，请在两个节点上等待此消息，然后再重现问题。在重现问题后，输入 Y 以完成日志收集。跟踪存储在 C：\\\\MSDATA 文件夹中的压缩文件中。 可以将其上传到工作区进行分析。此页面是否有帮助？",
            "DNS（Domain Name System）是互联网中用于将域名转换为对应 IP 地址的系统。在 Linux 系统中，DNS 缓存是一种将域名和 IP 地址映射关系缓存在本地的机制，可以加快域名解析速度，并减轻 DNS 服务器的负载。本文将深入探讨如何在 Linux 上查看和刷新 DNS 缓存，以及相关的详细内容和示例代码。DNS 缓存在 Linux 系统中起着至关重要的作用。它可以减少 DNS 解析的时间，提高网络访问速度，并降低对 DNS 服务器的负载。当系统访问某个域名时，如果已经存在该域名的解析结果在本地缓存中，系统就无需再次向 DNS 服务器发送查询请求，而是直接从缓存中获取结果，从而节省了时间和网络带宽。在 Linux 系统中，有多种方法可以查看 DNS 缓存的内容。dig 命令是一种功能强大的 DNS 工具，可以用来查询 DNS 信息，包括域名解析结果和 DNS 缓存内容。输出结果：nscd（Name Service Cache Daemon）是一个负责管理系统名称服务缓存的守护进程。可以使用 nscd命令来查看 DNS 缓存的内容。输出结果：systemd-resolved 是一个负责解析 DNS 查询的系统服务，它也会维护一个 DNS 缓存。可以使用 systemd-resolve 命令来查看缓存内容。输出结果：有时候，可能需要手动刷新 DNS 缓存，以确保系统使用最新的 DNS 解析结果。可以使用 systemd-resolved 命令来刷新 systemd-resolved 服务的 DNS 缓存。如果系统上运行了 nscd 服务，您可以尝试通过重启服务来刷新 DNS 缓存。还可以手动删除 DNS 缓存文件来清除 DNS 缓存。DNS 缓存可以显著提高域名解析的速度，减少对 DNS 服务器的请求压力。通过合理配置 DNS 缓存，可以进一步优化系统性能和网络连接速度。可以调整 DNS 缓存的大小和超时时间来满足需求。在刷新 DNS 缓存时，需要注意确保所有相关的 DNS 缓存都被刷新，以避免出现 DNS 缓存不一致的情况。这可能会导致应用程序无法访问特定的域名或者连接到错误的 IP 地址。虽然刷新 DNS 缓存可以解决一些 DNS 相关的问题，但是过于频繁地刷新 DNS 缓存可能会影响系统性能和网络连接速度。建议在必要时才刷新 DNS 缓存，并在刷新之前确保了解刷新操作的影响。在 Linux 系统中，查看和刷新 DNS 缓存是管理网络连接和优化系统性能的重要步骤。通过使用命令行工具如 dig、nscd 和 systemd-resolved，可以轻松地查看当前系统的 DNS 缓存信息，并采取必要的措施来刷新缓存以确保最新数据的可用性。了解如何正确地管理 DNS 缓存，可以帮助大家更有效地管理网络资源，提高系统的稳定性和性能。如果你觉得文章还不错，请大家 点赞、分享、留言 ，因为这将是我持续输出更多优质文章的最强动力！"
        ]
    },
    {
        "prompt": "sh 中sleep随机",
        "doc": [
            "Linux内核支持四种系统睡眠状态即 memstandbyfreeze and disk 可通过文件 syspowerstate 进行读写访问，区别如下在 RockPI 4A 单板 Debian 系统 Linux 44 内核中，查看电源状态，仅支持 freeze和mem 两种。首先进入应用程序，打开系统工具，选择设置进入设置界面在设置中，选择privacy，选择锁屏系统默认打开自动息屏，手动将锁屏关闭即可linux设备休眠的方式常用的休眠方式有freeze，standby，mem，disk freeze冻结IO设备，将它。voidSleepDWORDdwMilliseconds也就是说，Linux下使用的gcc的库，sleep函数是以秒为单位的，sleep1就是休眠1秒而MFC下的sleep函数是以微秒为单位的，sleep1000才是休眠1秒原来如此啊而如果在Linux。S2 一个比S1更深的睡眠状态，不过已经不给CPU 供电了然而，通常这种模式并不被采用 S3 在BIOS中叫做quot挂到内存 quot Suspend to RAMSTR，在Windows XP 以后的Windows 版本和一些Linux 发行版中叫做quot待机 Stan。linux sleep 命令用来睡眠一段时间，sleep 可以用来将目前动作延迟一段时间时间的单位有秒s，分钟m，小时h，天d用法如下sleep Numbersuffix默认单位是秒ssleep 1 == sleep 1s sleep 001 查看。在Windows操作系统中，电脑的睡眠模式可以在电脑的“电源选项”中进行设置以下是具体的设置步骤1 首先打开“控制面板”，可以直接在Windows任务栏的搜索框中输入“控制面板”进行查找2 在控制面板中选择“电源选项”。S2 一个比S1更深的睡眠状态，不过已经不给CPU 供电了然而，通常这种模式并不被采用S3 在BIOS中叫做quot挂到内存 quot Suspend to RAMSTR，在Windows XP 以后的Windows 版本和一些Linux 发行版中叫做quot待机。获取linux系统是否休眠，可通过以下方法1使用命令行查看系统状态，打开终端，输入以下命令catsyspowerstate，返回结果为“mem”或“sleep”，则表示系统处于休眠状态，返回结果为其他值，如“on”或“off”，则表示。linux shell 中的sleep命令 在有的shell比如linux中的bash中sleep还支持睡眠分，小时sleep 1#160 #160 睡眠1秒 sleep 1s#160 #160 睡眠1秒 sleep 1m#160 睡眠1分 sleep 1h#160 睡眠1。n %MEM 进程使用的物理内存百分比q RES 进程使用的未被换出的物理内存大小，单位kbt SHR 共享内存大小，单位kbw S 进程状态D=不可中断的睡眠状态R=运行S=睡眠T=跟踪停止Z=僵尸进程可以通过下面的。sleep 睡眠，参数为时间，单位秒 shell中，用法sleep seconds，表示睡眠多少秒 代码中，用法include ltunistdh unsigned int sleepunsigned int seconds视实际需要，有时需要睡眠若干秒后继续执行，如执行某一。用户程序中的睡眠sleepusleepnanosleepsleep和nanosleep都是使进程睡眠一段时间后被唤醒，但是二者的实现完全不同#160#160Linux中并没有提供系统调用sleep，sleep是在库函数中实现的，它是通过。hdidle无论怎样设置都无法使用硬盘在空闲时休眠，实在找不到原因在查找相关资料时发现在linux操作系统还有个叫hdparm的硬盘控制软件，然后在OPENWRT软件搜索果真有这个软件，然后就安装试试不想真能让我的硬盘在设置好的。如此一来，即使参数为0，也至少要睡眠一个jiffies单位的时间，因此导致严重的性能问题该问题的解决方法是既然ZeroSleep的目的是释放cpu资源，那么就可以通过调用schedule函数替换msleep 而且实际上msleep本身也是通过调用。1 Linux进程的睡眠和唤醒 在Linux中，仅等待CPU时间的进程称为就绪进程，它们被放置在一个运行队列中，一个就绪进程的状 态标志位为TASK_RUNNING一旦一个运行中的进程时间片用完， Linux 内核的调度器会剥夺这个进程对CPU的控制权，并且。 标签：本文链接：https://www.hello-linux.com/linux/30351.html版权声明：本网站内容均来源于网络，如涉及侵权，请联系作者！\\r\\n                                                上一篇：支持linux外置无线网卡有哪些-支持linux外置无线网卡有哪些型号\\r\\n                                            \\r\\n                                                下一篇：长城uf716能装linux系统吗-长城终端tc8870装系统\\r\\n                                            linux系统延迟网络连接(linux 网络延迟测试工具)什么笔记本可以带linux-什么笔记本可以带动原神8510dnlinux的简单介绍前端页面操作linux系统(前端页面操作linux系统设计)linux系统未来的发展和应用(linux系统未来的发展和应用方向) 还没有评论，快来说点什么吧~热门排行热评榜单随机文章学生党的老师，程序猿的天堂，打工人的教堂，上班仔的救赎。Copyright 2018-2024 https://www.hello-linux.com/ All Rights Reserved Powered by 成都莉凡传媒有限公司 · (蜀ICP备2023002899号)   Powered by Z-BlogPHP 1.7.3 · themeolrs",
            "",
            "在Linux中，sleep命令用于让程序在指定的时间内暂停运行。它的常见用途是用于编写脚本，让脚本在执行过程中暂停一段时间。下面我来详细介绍一下sleep命令的用法和一些注意事项。sleep命令的基本语法如下：sleep [选项] 时间其中，时间可以是一个整数，也可以是一个带有单位的时间值。常用的单位有s（秒）、m（分钟）、h（小时）和d（天）。下面是一些示例：1. 让程序暂停1分钟：sleep 1m2. 让程序暂停5秒钟：sleep 5s3. 让程序暂停2小时：sleep 2h4. 让程序暂停3天：sleep 3d使用sleep命令时，还可以加上一些选项来控制其行为，常用的选项有：-n 或 –no-cloak：使得sleep不用隐藏功能。–help：显示帮助信息。–version：显示版本信息。例如，使用-n选项可以让sleep命令在运行时不隐藏。除了暂停一定的时间，sleep命令还可以结合其他命令使用。比如，可以在脚本中使用sleep命令延时执行某个命令，或者在循环中使用sleep命令来控制循环的速度。需要注意的是，sleep命令会暂停整个程序的执行，包括所有的进程。在睡眠期间，系统资源可能会被占用，因此在使用sleep命令时应慎重考虑。综上所述，sleep命令在Linux中是一个非常实用的工具，可以用于控制程序执行的时间间隔。通过合理地使用sleep命令，我们可以编写出更加灵活和高效的脚本程序。在Linux中，sleep命令用于在一定的时间间隔后暂停当前进程的执行。它是一个非常有用的命令，在脚本编程和系统管理中经常用到。下面是关于sleep命令的五个重要点。1. 基本语法：sleep命令的基本语法是`sleep <时间>`，其中时间可以是以秒、分钟、小时为单位的整数或小数。例如，`sleep 5`表示暂停执行5秒，`sleep 1m`表示暂停执行1分钟，`sleep 2h`表示暂停执行2小时。2. 延时执行：sleep命令可以用于在脚本中创建延时执行的效果。例如，如果希望脚本在执行某个操作后等待一段时间再执行下一步操作，可以使用sleep命令来实现。比如，`sleep 10`表示脚本会在执行到这一行时暂停执行10秒。3. 循环控制：sleep命令也可以结合循环语句使用，用于控制循环的执行间隔。例如，在脚本中使用while循环每隔一秒输出一次信息，可以这样写：`while true; do echo “Hello”; sleep 1; done`。这样会每隔一秒输出一次”Hello”，直到循环被终止。4. 非交互式等待：在执行某些操作时，有时需要等待一段时间后再执行下一步操作。使用sleep命令可以方便地实现这种非交互式等待。例如，当执行一个命令后发现结果还没有到达预期时，可以使用sleep命令暂停一段时间再继续检查。在脚本中使用这种等待可以提高执行效率。5. 时钟同步：在某些情况下，可能需要控制一些操作在精确的时间点执行。使用sleep命令可以实现简单的时钟同步效果。例如，在脚本中如果需要在下一分钟的开始时执行某个任务，可以使用sleep命令暂停一段时间，直到下一分钟开始时再执行。这样可以保证任务在下一分钟的确切开始时执行。在Linux中，sleep命令用于暂停一段时间后再继续执行后面的命令。它的使用方法非常简单，只需指定需要暂停的时间即可。下面是sleep命令的具体使用方法和操作流程。## 1. 基本语法“`shellsleep NUMBER[SUFFIX]“`其中，NUMBER表示需要暂停的时间，可以为一个整数或者一个带有浮点数的小数，单位可以使用以下几种：– s：秒（默认单位）– m：分钟– h：小时– d：天SUFFIX为可选参数，表示单位，默认为秒。## 2. 示例以下是一些在Linux中使用sleep命令的示例：### 暂停5秒“`shellsleep 5“`这个命令将暂停5秒钟，然后继续执行后面的命令。### 暂停1分钟“`shellsleep 1m“`这个命令将暂停1分钟（60秒），然后继续执行后面的命令。### 暂停半小时“`shellsleep 30m“`这个命令将暂停30分钟（1800秒），然后继续执行后面的命令。### 暂停一天“`shellsleep 1d“`这个命令将暂停一天（86400秒），然后继续执行后面的命令。## 3. 注意事项– 使用sleep命令时，可以将其与其他命令结合使用，例如在运行一个脚本中，暂停一段时间后再继续执行下一条命令。– sleep命令可以用于实现一些定时任务，例如通过设置定时器来定时执行某个脚本或命令。– 在使用sleep命令时，可以使用Ctrl+C来中断正在执行的暂停，然后继续执行后续的命令。以上就是在Linux中使用sleep命令的方法和操作流程。通过指定需要暂停的时间，可以在脚本或命令中实现一定的时间间隔。PingCode：项目管理 产品管理 知识管理 效能管理 测试管理 协作空间 自动化 目录服务 万象方舟ICP：京B2-20192206 京ICP备13017353号 京公网安备11010802012357号| 违法和不良信息举报邮箱 abuse@worktile.com |© 2021 Worktile.com400-800-1024工作日9:30-21:00在线",
            "sleep命令是一条常见的Linux命令，用于在脚本中暂停一段时间。它以秒为单位指定要休眠的时间。下面我来详细介绍一下sleep命令的使用。在命令行终端中，可以使用以下的语法来使用sleep命令：sleep [秒]或者sleep [小时:分钟:秒]其中，[秒]表示需要暂停的时间，可以是一个整数或者小数。如果需要暂停的时间超过了一小时，可以使用[小时:分钟:秒]的格式来指定。下面是一些具体的示例：1. 暂停5秒钟：sleep 52. 暂停1分钟30秒：sleep 1m 30s或者sleep 1:303. 暂停2小时：sleep 2h需要注意的是，sleep命令的时间参数可以是小数，例如0.5表示暂停0.5秒，1.5表示暂停1.5秒。sleep命令的使用场景很多，例如在脚本中设置延时执行、模拟程序运行时间、控制循环次数等。总结一下，sleep命令是一条简单而实用的Linux命令，用于暂停脚本执行的时间。我们可以通过指定秒数或者小时、分钟和秒数来控制暂停的时间。希望以上内容对你理解和使用sleep命令有所帮助。sleep命令是Linux系统中一个非常有用的命令，它用于在一段时间间隔后暂停当前进程的执行。当需要在脚本或命令中添加延迟时间时，可以使用sleep命令来实现。下面是关于Linux中sleep命令的五个重要点：1. 语法和用法：   sleep命令的基本语法如下：   sleep NUMBER[SUFFIX]   其中NUMBER表示需要休眠的时间，SUFFIX可以是s（秒）、m（分钟）、h（小时）、d（天）等。例如，sleep 5表示休眠5秒。2. 延迟脚本执行：   使用sleep命令可以在脚本中添加延迟，以控制命令的执行时间。例如，如果有一个需要每隔5分钟执行一次的脚本，可以在每次执行完后加上sleep 5m，让脚本暂停5分钟。3. 执行定时任务：   在Linux中，可以使用crontab来创建定时任务。通过在crontab中设置指定的时间和命令，可以实现定时执行任务的功能。如果需要在任务执行前进行一些准备工作，可以使用sleep命令来添加一定的延迟。4. 实例：   下面是一些实例，展示了如何使用sleep命令实现一些常见的操作：   – sleep 10：休眠10秒钟。   – sleep 1m：休眠1分钟。   – sleep 2h：休眠2小时。   – sleep 1d：休眠1天。   – sleep 2s && echo “Hello”：休眠2秒钟后输出”Hello”。5. 注意事项：   在使用sleep命令时，需要注意以下几点：   – sleep命令的精度受到系统调度的影响，实际休眠时间可能会略有不同。   – 如果需要更精确的休眠时间，可以使用其他工具或编程语言来实现，如C语言的usleep函数。   – 在执行sleep命令时，进程会被挂起，不会占用任何CPU资源。一、概述在Linux系统中，sleep是一个用于使进程暂停指定时间的命令。它可以用于等待指定的时间间隔，也可以用于延时执行脚本等场景。本文将详细介绍sleep命令在Linux中的使用方法和操作流程。二、使用方法sleep命令的基本用法为：“`sleep NUMBER[SUFFIX]“`其中，NUMBER表示要暂停的时间，单位为秒（默认的单位），SUFFIX表示可选的后缀，用于指定计时的单位。具体的后缀有：– s：秒（默认值）– m：分钟– h：小时– d：天例如，要让进程暂停5秒，可以执行以下命令：“`sleep 5“`或者使用后缀指定时间单位：“`sleep 5s“`三、操作流程在Linux系统中，使用sleep命令非常简单，只需按照以下操作流程进行即可：1. 打开终端：在图形界面中，打开终端应用程序；在命令行界面中，直接使用当前的终端。2. 输入命令：在终端中输入sleep命令，并指定要暂停的时间。3. 执行命令：按下回车键执行命令，进程将会在指定的时间间隔内暂停。4. 完成操作：当指定的时间间隔过去后，进程将继续执行后续的操作。下面将结合几个实际的例子来详细介绍sleep命令的使用方法和操作流程。四、示例1. 等待指定时间后执行命令在Linux系统中，我们经常需要在执行某个命令之前，等待一段时间以确保前面的操作完成。这时，可以使用sleep命令来实现。比如，我们想要在执行一个备份任务之前等待30秒，可以使用如下命令：“`sleep 30 && backup.sh“`这条命令表示先等待30秒，然后执行backup.sh脚本。2. 倒计时在一些脚本或者程序中，我们可能需要进行倒计时的操作。比如，在一个脚本中，我们想要实现每隔1秒向屏幕输出当前的倒计时时间，可以使用如下脚本：“`bash#!/bin/bashfor i in {5..1}do    echo “倒计时：$i”    sleep 1doneecho “Go!”“`上述脚本中使用了for循环来实现倒计时的效果，每次循环都会输出当前的倒计时时间，并使用sleep命令让脚本暂停1秒。3. 延时执行脚本有时候，我们可能希望在系统启动后延时执行一些脚本。比如，我们想要在系统启动后延时30秒执行一个脚本，可以将以下命令添加到开机启动脚本中：“`(sleep 30 && /path/to/script.sh) &“`上述命令中，使用了小括号将sleep和脚本命令包裹起来，并在后台运行。这样，在系统启动后，会先等待30秒，然后执行指定的脚本。五、总结本文介绍了在Linux中使用sleep命令使进程暂停指定时间的方法和操作流程。通过sleep命令，我们可以实现等待指定时间后执行命令、倒计时、延时执行脚本等功能。使用sleep命令可以方便地对进程进行时间控制，提高脚本和程序的灵活性和效率。PingCode：项目管理 产品管理 知识管理 效能管理 测试管理 协作空间 自动化 目录服务 万象方舟ICP：京B2-20192206 京ICP备13017353号 京公网安备11010802012357号| 违法和不良信息举报邮箱 abuse@worktile.com |© 2021 Worktile.com400-800-1024工作日9:30-21:00在线"
        ]
    },
    {
        "prompt": "python实现学生管理系统",
        "doc": [
            "Python的开发方向有很多，比如爬虫采集、数据分析、机器学习等，因此Python给大家的印象都是处理数据的。实际上，Python也可以开发带有GUI界面的软件应用。这里，我就是使用Python+Tkinter写一个带有GUI界面的学生管理系统，功能齐全，代码仅200行左右。学生管理系统的界面分为主界面和信息输入框两部分，绝大多数操作在主界面中完成，只有增加或修改学生数据时会显示信息输入框。我将主界面分为上中下三部分：上部分为搜索条件区，用来输入搜索条件；中部分为操作按钮区，用来进行增删改查操作；下部分为数据展示区，用来展示结果数据。信息输入框的原型设计就比较简单，八个接收输入的输入框，一个保存按钮。信息输入框只有点击增加或者修改按钮是才会显示。根据解耦设计原则，我将学生管理系统的GUI界面和学生数据处理分别在ui.py和student_manager.py两个源码文件中实现。公众号（愤怒的it男）后台回复三位数字：001，即可获取源码资源包。",
            "Python的开发方向有很多，比如爬虫采集、数据分析、机器学习等，因此Python给大家的印象都是处理数据的。实际上，Python也可以开发带有GUI界面的软件应用。这里，我就是使用Python+Tkinter写一个带有GUI界面的学生管理系统，功能齐全，代码仅200行左右。学生管理系统的界面分为主界面和信息输入框两部分，绝大多数操作在主界面中完成，只有增加或修改学生数据时会显示信息输入框。我将主界面分为上中下三部分：上部分为搜索条件区，用来输入搜索条件；中部分为操作按钮区，用来进行增删改查操作；下部分为数据展示区，用来展示结果数据。信息输入框的原型设计就比较简单，八个接收输入的输入框，一个保存按钮。信息输入框只有点击增加或者修改按钮是才会显示。根据解耦设计原则，我将学生管理系统的GUI界面和学生数据处理分别在ui.py和student_manager.py两个源码文件中实现。用Python写一个学生管理系统（附源码）公众号（愤怒的it男）后台回复三位数字：001，即可获取源码资源包。\\n                    iamxcd: \\n                    推荐试试Tkinter布局助手 在线拖拽布局, 并且支持ttkbootstrap\\n                \\n                    CSDN-Ada助手: \\n                    Python入门 技能树或许可以帮到你：https://edu.csdn.net/skill/python?utm_source=AI_act_python\\n                \\n                    CSDN-Ada助手: \\n                    恭喜你写了第20篇博客！看了你关于wordcloud库的介绍，觉得很有意思。你对python的运用真的很厉害，能够用一个超酷的库来实现文本可视化，很有创意。希望你继续保持创作的热情，也可以考虑分享一些实际项目中的应用经验，让更多人受益。加油！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第19篇博客！标题看起来很吸引人呢。对于Python爬虫，我也有一些经验，但我想听听您的看法。希望能在下一篇博客中分享一些实用的爬虫技巧和经验，这样对于像我这样的初学者来说会非常受益。期待您的下一篇作品！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写下了第18篇博客！标题中的“jieba，一个结巴的Python库”吸引了我的注意，让我对这个库产生了浓厚的兴趣。您对jieba库的介绍非常清晰，让我对它的功能和用法有了更深入的了解。感谢您分享了这样有价值的信息。\\n\\n在您持续创作的过程中，我想提供一些建议。首先，您可以考虑从实际应用的角度出发，分享一些使用jieba库解决实际问题的案例。这样的实例可以帮助读者更好地理解jieba库的潜力和实用性。另外，如果可能的话，您可以探索一些与jieba库相似的其他Python库，并进行比较和分析，帮助读者选择适合自己需求的最佳解决方案。\\n\\n再次恭喜您的持续创作，并期待您未来更多精彩的博客！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "这篇文章主要介绍了python控制台程序学生信息管理系统，具有一定借鉴价值，需要的朋友可以参考下。希望大家阅读完这篇文章后大有收获，下面让小编带着大家一起了解一下。Source code download: 本文相关源码用python实现一个学生信息管理系统 实现学生信息管理。 学生信息管理系统包括：录入学生信息，查找学生信息，删除学生信息，修改学生信息，排序，统计学生总人数，显示所有学生信息python好玩简单的代码。主模块根据所排序的需求，按照用户输入的数字调用该模块，实现对学生信息的管理。当用户输入学生信息时，将学生信息文件保存，如路径下未存在该文本文件，则创建文本文件，如已有该文本文件，则将用户输入的信息保存到文本文件中；当用户输入选择1时，调用录入学生信息模块，模块中包含输入学生学号，学生姓名，学生成绩等参数；当用户搜索学生信息时，需将学生信息显示，如无该学生信息，则打印输出无该学生信息，如有该学生信息，则显示该学生信息；当用户输入2时搜索学生信息，可通过学号和姓名查找该学生信息，如无该学生信息则打印输出未找到该学生信息，如找到该学生信息，则显示该学生信息；当用户输入6时调用显示所有学生信息模块，显示输出所有学生信息；当用户选择3调用删除学生信息模块，删除该学生信息后重新显示所有学生信息当用户选择4时调用修改学生信息模块，先显示所有学生信息，输入要修改的学生的学号，根据学号找到该学生信息并修改信息；当用户输入5调用排序模块，先显示所有学生信息，可以按照升序或者降序排列，再通过各科成绩进行排列；当用户输入6时调用统计学生总人数模块，结果显示输入共多少名学生；总结：这个项目主要是对模块的使用，了解了模块化操作的简便性。其中有很多不足，对python基础没有完全的掌握。自己的一个小作业。\\n                    2401_83736511: \\n                    Process finished with exit code 0\\n                \\n                    CSDN-Ada助手: \\n                    不知道 Python入门 技能树是否可以帮到你：https://edu.csdn.net/skill/python?utm_source=AI_act_python\\n                \\n                    ha_lydms: \\n                    这篇博客真是一次精神的洗礼，让我感到内心清爽而舒畅。\\n                \\n                    CSDN-Ada助手: \\n                    恭喜你这篇博客进入【CSDN每天最佳新人】榜单，全部的排名请看 https://bbs.csdn.net/topics/618035430。 \\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "Python实战：打造学生信息管理系统简介：本文将介绍如何使用Python编写一个功能齐全的学生信息管理系统，包括添加、删除、修改和查询学生信息的基本操作。通过本教程，您将学习到如何运用Python编程知识解决实际问题的技巧和方法。学生信息管理系统是学校日常管理中不可或缺的一部分，它能够帮助管理人员快速、准确地管理学生信息，提高工作效率。在本文中，我们将使用Python编程语言来构建一个简单但功能强大的学生信息管理系统。一、系统需求分析在开始编写代码之前，我们需要先明确系统的功能需求。本系统将具备以下基本功能：二、系统设计为了实现上述功能，我们可以设计一个包含学生信息的字典，并使用函数来封装各个操作。具体的系统设计如下：三、代码实现接下来，我们将根据上述设计来实现代码。首先，定义一个空字典来存储学生信息：然后，实现添加学生信息的函数：接下来，实现删除学生信息的函数：然后，实现修改学生信息的函数：最后，实现查询学生信息的函数：四、系统测试现在，我们可以测试一下系统是否按预期工作。添加学生信息：查询学生信息：修改学生信息：删除学生信息：五、总结与展望通过本教程，我们构建了一个简单的学生信息管理系统，实现了基本的添加、删除、修改和查询功能。当然，这个系统还有很多可以改进和扩展的地方，比如添加用户界面、增加数据持久化功能、支持批量操作等。希望这个教程能对您在Python编程和实际应用方面有所帮助，激发您进一步学习和探索的兴趣。\\n        \\n    \\n                    征途黯然.: \\n                    对Python数据可视化用Matplotlib和Seaborn绘制精美图表的解释真的很好！我学到了很多新东西。\\n                \\n                    程序员不想YY啊: \\n                    👉精彩绝伦！您的文章给予了我新的启示和思考，拓宽了我对这个领域的认识，真的是一篇让人收益匪浅的好文，在这个信息爆炸的时代，有您这样用心创作的作者，真是令人欣慰，期待您的更多作品的出现，让我们共同进步，共同分享知识和智慧！\\n                \\n                    白话机器学习: \\n                    文章内容通俗易懂，适合不同层次的读者。无论是初学者还是资深从业者，都能从中获得不同层次的收获\\n                \\n                    666HZ666: \\n                    dev c++集合\\n                \\n                    征途黯然.: \\n                    I'm impressed by this article about 使用FFmpeg将视频转换为GIF动画的技巧. The expertise is impressive.\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者清水白石008你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。"
        ]
    },
    {
        "prompt": "解释一下\n```PHP\n if (!empty($classify_id = $this->input->get_post('classify'))) {\n            if($classify_id == 2){\n                $classify_id = 3;\n            }\n            $builder->where('n.classify_id', $classify_id);\n        } \n```",
        "doc": [
            "最近打算再做一版服务器状态查看的dashboard，采用“子服务器主动向主服务器推送自己的状态”的方案。一种方案是用php写，Apache作为后台服务器。简单写一下构建过程。github有个docker compose做的lamp全套环境，只需要git clone 和 docker compose up -d两个命令就能直接搭好linux端的apache+mysql+php环境。试了下确实直接能用，可以参考https://github.com/sprintcube/docker-compose-lamp。以下均为Ubuntu 22.04的服务器，以root运行。配置apache2需要apr、apr-util的runtime包，可以从https://apr.apache.org/download.cgi下载，以及正则、压缩传输、加密、xml的库。从https://www.php.net/downloads.php下载最新的php包，从https://pkgconfig.freedesktop.org/releases/下载最新的php-config包，比如参考官网，我这里选择了最简单的apt安装方法。更多详细配置可以参考官网原文。先在这里获取最新的apt包，然后点击download，新页面里拷贝下“No thanks, just start my download.”的链接地址，比如mysql默认用3306端口，暂时不用管其他配置phpmyadmin是一款管理数据库的web端应用，用了以后感觉就回不去了hhh不需要安装，直接从官网下载zip包，解压缩到网站目录里，以下是一个例子：初次使用前需要修改一下配置文件（即config.inc.php），主要是为$cfg['blowfish_secret'] 填充一个32字节的随机字符串用来加密流量，然后把$cfg['Servers'][$i]['host']改为127.0.0.1，否则登录时容易出现2002的报错。最后，在浏览器里访问xxx/myphp0x29341995/index.php，然后输入之前安装mysql时的用户名密码即可。如果按以上方式安装，则修改/usr/local/apache2/conf/httpd.conf文件的ServerName选项到实际ip和端口。比如ServerName 172.19.202.144:80。这里的ip可以运行ifconfig看一下。为了使apache对php文件进行解释执行，在httpd.conf文件添加：设置文档目录，比如检查下php模块是不是打开了：最后启动Apache2服务器随后浏览器直接访问即可。除了apache2，也可以使用nginx服务器。比如可以从源码编译，或使用apt 源由于nginx本身不解析php文件，所以需要启用转发，在对应的nginx.conf文件启用：\\n                    c01dkit: \\n                    天呢，三年前的文章了现在还有这个问题（乐）建议用wsl2或者（云）服务器。vmware还是卡卡的。\\n                \\n                    F.FIGHT: \\n                    一次性解决问题，困扰了两个小时！！！！！！！\\n                \\n                    DBH200208085: \\n                    卧槽，我也是这样！谢谢大佬\\n                \\n                    c01dkit: \\n                    不如用wsl2或者直接装ubuntu系统。vmware搞虚拟机性能有点拉\\n                \\n                    fruge365: \\n                    按照要求改了不行，不知道哪里的问题\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者c01dkit好可怜一博主，都没人打赏>_<您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "        上文使用脚手架初始化了yaf框架，并根据github上yar的demo打了两个微服务的镜像运行进行联调。代码规范检查&修复、语法报错检查、单元测试是几乎所有互联网公司上线流程中必须通过的过程，本教程通过安装 php_codesniffer 进行代码规范的检查与修复，phpstan 进行语法报错的检查，phpunit 进行单元测试，依据yaf框架的特征设置配置文件，达成上述目的。填写的内容如下安装  依据yaf框架制定php-cs的标准文件 phpcs.xml这时候，我们可以运行以下命令进行php代码规范的检查运行以下命令尝试自我修复如果还有一些没有自动修复的格式规范问题，则需要进行手动修复可以在一段代码的开始和结尾处加上以下内容忽略这个区间的代码报错检查 安装创建php-cs-fixer 修复规则文件 ​​​​​​.php-cs-fixer.php运行以下命令进行代码规范修复 为了方便记住phpcs 和 phpcbf 命令的内容，可以在composer.json中添加 scripts 片段  以后可以用下面两个命令进行php cs规范检查和 cs-fix自动修复安装依据yaf框架特点，设置配置文件 phpstan.neon ，忽略一些报错这时候，我们可以运行以下命令进行php语法报错的检查根据报错提示内容自己手动修复为了方便记住phpstan 检查报错命令的内容，可以在composer.json中scripts片段添加以下内容以后可以运行 composer analyse 命令进行php语法检查了安装单元测试代码放在 tests 目录下，依据yaf框架特点 单元测试的入口文件 tests/index.php 内容如下创建单元测试文件 tests/models/SampleTest.php内容如下运行这个函数的测试用例，方法如下手把手教你部署nginx+phpphp和nginx镜像合并 && 代码打包到镜像 nginx-php镜像安装常用软件 yaf && yar微服务/hprose微服务 镜像初始化 常用开发工具：php_codesniffer代码规范检查&修复、phpstan语法检查、phpunit单元测试 .gitlab-ci.yaml自动镜像打包&&互联网企业规范化上线流程（上） kustomize/kubectl自动镜像部署&&互联网企业规范化上线流程（下） apisix网关、JMeter压测  prometheus/grafana监控数据收集与展示 k8s容器网络性能调优 supervisor进程管理 安装opcache和apcu APM性能监测工具skywalking 链路跟踪工具zipkinphpfpm和nginx配置php整合apollo配置中心php rdkafka操作kafka消息队列\\n        \\n    \\n                    CSDN-Ada助手: \\n                    哇, 你的文章质量真不错，值得学习！不过这么高质量的文章, 还值得进一步提升, 以下的改进点你可以参考下: (1)提升标题与正文的相关性；(2)使用更多的站内链接；(3)增加除了各种控件外，文章正文的字数。\\n                \\n                    CSDN-Ada助手: \\n                    大数据包含结构化数据，非结构化数据，半结构化数据，怎么理解结构化？\\n                \\n                    CSDN-Ada助手: \\n                    哇, 你的文章质量真不错，值得学习！不过这么高质量的文章, 还值得进一步提升, 以下的改进点你可以参考下: (1)增加条理清晰的目录；(2)提升标题与正文的相关性；(3)增加除了各种控件外，文章正文的字数。\\n                \\n                    CSDN-Ada助手: \\n                    哇, 你的文章质量真不错，值得学习！不过这么高质量的文章, 还值得进一步提升, 以下的改进点你可以参考下: (1)增加除了各种控件外，文章正文的字数；(2)增加条理清晰的目录；(3)提升标题与正文的相关性。\\n                \\n                    CSDN-Ada助手: \\n                    哇, 你的文章质量真不错，值得学习！不过这么高质量的文章, 还值得进一步提升, 以下的改进点你可以参考下: (1)增加除了各种控件外，文章正文的字数；(2)使用更多的站内链接；(3)提升标题与正文的相关性。\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者fanghailiang2016扔个包子砸我一下吧～您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "我大概构思了一下，有两个方案：1. Javascript判断来访者的浏览器语言，如果是中文系统，自然使用者都是中国人，跳中文网站；如果是非中文系统，默认使用者非中国人，跳英文网站。优点：判断反映速度快。 \\n缺点：不准确，有可能中国用户喜欢用英文版系统，或者外国人使用中文系统的情况。代码2.使用IP库来进行来访IP的判断优点：判断准确。 \\n缺点：响应速度没Javascript快。 \\n需要引用一个PHP的IP库 ip_php.zip \\n我在网站头部引用jquery进行判断checkip.php页面的代码：两种方法都可以完美实现判断来访IP，选择哪种就看你的具体需求了。ThinkPHP自身提供了success方法与error方法用于实现带提示信息的页面跳转功能,可实现添加数据后显示提示信息并跳转的效果.success 方法用于操作成功后的提示,error 用于操作失败后的提示,二者使用方法完全一致,下面以success 方法来进行说明. 1.success方法   success方法语法如下: success(message, ajax)  参数说明message可选.页面提示信息.ajax可选.是否AJAX 方式提交,默认为false . 如果是AJAX 方直接上代码: 复制代码 代码如下: /*返回一个302地址*/     function  curl_post_302($url, $vars) { $ch = curl_init();          curl_setopt($ch,  CURLOPT_RETURNTRANSFER, 1);          curl_setopt($ch, CURLOPT_URL,  $url);          curl_setopt($ch, CURLOPT_POST, 1);          c如果左边的记录条数小于$space(页码区段)的值,页码$start从1开始向右增值.如果左则的记录条数多于$left(左右各显示页数)的值,$start将从左边记录数减去$left值开始记数. 复制代码 代码如下: <?php /** 实现同类产品翻页 **/ class pager { protected $space; protected $left; protected $DB; protected $pageName; public function setSpace($num) {本文以实例讲解了ThinkPHP跳转页面的success与error方法所对应的视图与控制器的实现方法,通过本实例教程可以帮助读者更好的掌握success方法与error方法的使用. 首先是控制器中,可以使用下代码: <?php // 本文档自动生成,仅供测试运行 class IndexAction extends Action { /** +---------------------------------------------------------- * 默认操作 +----------URL跳转代码 1.代码: <? $url=$_GET[\"url\"];header(\"Location:\".\"http://\".$url);?> 如保存为aaa.php,可以实现aaa.php?url=www.baidu.com跳转到百度的效果. 这个简单的调用了默认的$_GET变量.以及php默认跳转Location: 2.实例升级:增加if循环 代码: 复制代码 代码如下: <? $url=$_GET[\"url&qPHP的header函数 可以很少代码就能实现HTML代码中META 标签这里只说用 header函数来做页面的跳转 1. HTML代码中页面的跳转的代码HTML meta refresh 刷新与跳转(重定向)页面refresh 属性值 -- 刷新与跳转(重定向)页面* refresh用于刷新与跳转(重定向)页面* refresh出现在http-equiv属性中,使用content属性表示刷新或跳转的开始时间与跳转的网址* 引用网址:http://www.dreamdu.com/xhtml/re上传头像,界面无跳转的方式很多,我用的是加个iframe那种.下面直接上代码. html: 复制代码 代码如下: //route 为后端接口 //upload/avatar 为上传的头像的保存地址 //imgurl=/upload/avatar/<?=$uid?> 这里最后的<?=$uid?>是为了后面用js实现即时显示最新的更换后的头像用的,参照下面的js部分的代码 //头像保存名称为uid.type,如1.jpg,2.png等 //$user['avatar'] 用户如果上传过这两天写一个demo,需要用到提示并跳转,主要页面要求不高,觉得没必要使用AJAX,JS等,于是研究了下怎么在PHP提示并跳转. 开始先是用了下面这种: 复制代码 代码如下: echo \"<script> alert('sucess');parent.location.href='/user/index'; </script>\"; alert里面是提示的消息,href是提示后跳转的页面. 后来想起TP框架里面有个redirect()重定向的方法,就去看了看. 不复制代码 代码如下: <?php num = rand(1,5); witch($num){ case 1: $fp1=fopen(\"f1.dat\",'r'); $oname = fgets($fp1); $nname = date(\"YmdHis\"); rename($oname,$nname); fclose($fp1); unlink(\"f1.dat\"); $fp1=fopen(\"f1.dat\",'w'); fwr复制代码 代码如下: <?php /* * Created on 2007-6-8 * Programmer : Alan , Msn - haowubai@hotmail.com * PHP100.com Develop a project PHP - MySQL - Apache * Window - Preferences - PHPeclipse - PHP - Code Templates */ //为了避免重复包含文件而造成错误,加了判断函数是否存在的条件: if(!function复制代码 代码如下: <?php class Page { private $pageSize;//每一页多少行 private $absolutePage;//当前页 private $pageCount;//总页码数 private $totalNum;//总行数 private $prePage;//上一页 private $nextPage; //下一页 private $sqlStr; private $baseUrl; //不带GET参数的URL get传输网址 function _复制代码 代码如下: <?php function ff_page($content,$page) { global $expert_id; $PageLength = 2000; //每页字数 $CLength = strlen($content); $PageCount = floor(($CLength / $PageLength)) + 1; //计算页数 $PageArray=array(); $Seperator = array(\"\\\\n\",\"\\\\r\"项目需求 访问网站页面时,有的页面需要授权才能访问,这时候就会要求用户登录,跳转到登录页面login.php,怎么实现登录后返回到刚才访问的页面. 解决思路1: 在跳转到登录页面之前要将当前访问页面的url保存到cookie里面,登录验证授权通过后,从cookie中取出这个url值,跳转到该url指定的页面. 具体实现 我现在的程序是基于ThinkPHP框架的,我们会有一个父类控制器,下面我就把这个设置cookie的代码加到这个BaseAction里面的_initialize()函数中,这样程序在mysq中介绍翻页的文章不少,而文本数据表格式的翻页介绍的很少,这里我就简单的说一下翻页 主要介绍以下翻页思想1.留言本的翻页2.文本论坛的翻页 ------------------------留言本的翻页:------------------------------这个在文本数据表中的翻页是最简单的翻页,这样说明一下 golbal file    Data.dat    ---    NOTE FILE USE    user.dat    ---     Forum File useDatPHP 301跳转的小代码 复制代码 代码如下: <?php    $the_host = $_SERVER['HTTP_HOST']; $request_uri = isset($_SERVER['REQUEST_URI']) ? $_SERVER['REQUEST_URI'] : ''; if($the_host !== 'www.jb51.net') {     //echo $_SERVER['HTTP_HOST'].$_SERVER['PHP_SELF'];    header('HT获取IP地址 复制代码 代码如下: <?phpfunction GetIP() {    if ($_SERVER[\"HTTP_X_FORWARDED_FOR\"])        $ip = $_SERVER[\"HTTP_X_FORWARDED_FOR\"];    else if ($_SERVER[\"HTTP_CLIENT_IP\"])        $ip = $_SERVER[\"HTTP_CLIENT_IP\"];  1.meta标签实现 只需在head里加上下面这一句就行了,在当前页面停留0.1秒后跳转到目标页面 复制代码 代码如下: <meta http-equiv=\"refresh\" content=\"0.1; url=http://jb51.net/\"> 2.Javascript实现 方法一: 这个方法比较常用 复制代码 代码如下: window.location.href = \"http://jb51.net/\"; 方法二: 复制代码 代首先在ACTION中新建一个文件EmptyAction.class.php,其代码如下: <?php class EmptyAction extends Action{ function _empty(){ header(\"HTTP/1.0 404 Not Found\");//使HTTP返回404状态码 $this->display(\"Public:404\"); } } ?> 使用apache服务器的情况下需在apache中的网站配置中加入 Err我们都知道用php+mysql在web 页实现数据库资料全部显示是非常简单而有趣的,数据库资料很少的情况下页面显示还是让人满意的,但是当数据库资料非常多的情况下,页面的显示情况将会变的非常糟糕,下面就来介绍一下如何实现当前页面数据资料显示数量及如何实现动态的翻转功能. 这里将介绍两种翻页显示功能的实现: 先介绍一下在翻页中用到的数据库语法: mysql_query(\"select * from table order by id desc\"); 这条数据库语句再熟悉不过了,是用来搜索记通常情况下,浏览器会收到一个网页,该页面含有自动加载一其它网页的代码.该页面有可能在服务器端被转换,这样的话,浏览器只收到一个页面,而自动转向往往意味着浏览器收到的页面具有自动将访问用户送至其它页面的功能. 对自动转向技术的合理应用包括:将用户转向到指定浏览器的网页版本:当网站的域名变更或删除后将人们转向到新域名下,等等.但现在这种技术却往往被搜索引擎优化人士用来作为提高网站的搜索引擎排名的一种手段.例如,先专门针对搜索引擎做一个高度优化的网页,也就是我们通常所说的\"桥页\",然后把这个代码很简单,涉及到header函数的使用,代码如下 复制代码 代码如下: <?php if (!empty($_SERVER['HTTPS']) && ('on' == $_SERVER['HTTPS'])) { $uri = 'https://'; } else { $uri = 'http://'; } $uri .= $_SERVER['HTTP_HOST']; header('Location: '.$uri.'/demo/'); exit; ?> 代码解释 :我先判断1.header()函数 header()函数是PHP中进行页面跳转的一种十分简单的方法.header()函数的主要功能是将HTTP协议标头(header)输出到浏览器. header()函数的定义如下: void header (string string [,bool replace [,int http_response_code]]) 可选参数replace指明是替换前一条类似标头还是添加一条相(www.jb51.net)同类型的标头,默认为替换. 第二个可选参数http_respons一.用HTTP头信息 也就是用PHP的HEADER函数.PHP里的HEADER函数的作用就是向浏览器发出由HTTP协议规定的本来应该通过WEB服务器的控制指令,例如声明返回信息的类型(\"Context-type: xxx/xxx\"),页面的属性(\"No cache\", \"Expire\")等等. 用HTTP头信息重定向到另外一个页面的方法如下: 复制代码 代码如下: <? if (isset($url)) { Header(\"HTT跳转核心代码实现. 复制代码 代码如下: if (isset($link))                 {                     Header(\"HTTP/1.1 303 See Other\");                     Header(\"Location: $link\");                     exit;                 } 下面是国外的一篇文章说明.Hey Chris: On Wed, J•PHP页面跳转一.header()函数header()函数是PHP中进行页面跳转的一种十分简单的方法.header()函数的主要功能是将HTTP协议标头(header)输出到浏览器.header()函数的定义如下:void header (string string [,bool replace [,int http_response_code]])可选参数replace指明是替换前一条类似标头还是添加一条相同类型的标头,默认为替换.第二个可选参数http_response_code强制将HT本文讨论网页自动跳转的几种实现方法.方法一:使用meta标签meta标签是html不可或缺的标签之一,它负责提供文档的元信息,其参数主要有: ① http-equiv: 与 文档中数据相关的HTTP文件首部 ② content: 与命名HTTP首部相关的数据 ③ name: 文档描述 ④ url: 与元信息相联系的URL当我们定义属性http-equiv为refresh,打开此Web页时系统将根据content规定的值在一定时间内跳转到相应页面,content=\"秒数;url=网址\"就© 2024 张生荣",
            "(PHP 4, PHP 5, PHP 7)empty — Determine whether a variable is empty\\n   Determine whether a variable is considered to be empty. A variable is considered empty if it does not exist or if its value equals FALSE. empty() does not generate a warning if the variable does not exist.\\n  \\n   \\n\\n    \\n     \\nvar\\n\\n     \\n\\n      \\n       Variable to be checked\\n      \\n      Note: \\n       \\n        Prior to PHP 5.5, empty() only supports variables;\\n        anything else will result in a parse error. In other words, the\\n        following will not work: empty(trim($name)).\\n        Instead, use trim($name) == false.\\n       \\n      \\n      \\n       No warning is generated if the variable does not exist.\\n       That means empty() is essentially the\\n       concise equivalent to !isset($var) || $var == false.\\n      \\n     \\n\\n    \\n   \\n\\n  \\n       Variable to be checked\\n      Note: \\n       \\n        Prior to PHP 5.5, empty() only supports variables;\\n        anything else will result in a parse error. In other words, the\\n        following will not work: empty(trim($name)).\\n        Instead, use trim($name) == false.\\n       \\n      \\n        Prior to PHP 5.5, empty() only supports variables;\\n        anything else will result in a parse error. In other words, the\\n        following will not work: empty(trim($name)).\\n        Instead, use trim($name) == false.\\n       \\n       No warning is generated if the variable does not exist.\\n       That means empty() is essentially the\\n       concise equivalent to !isset($var) || $var == false.\\n      \\n   Returns FALSE if var exists and has a non-empty, non-zero value.\\n   Otherwise returns TRUE.\\n  \\n   The following values are considered to be empty:\\n   \\n    \"\" (an empty string)\\n    0 (0 as an integer)\\n    0.0 (0 as a float)\\n    \"0\" (0 as a string)\\n    NULL\\n    FALSE\\n    array() (an empty array)\\n   \\n  \\n   \\n    \\n     \\n      \\n       Version\\n       Description\\n      \\n\\n     \\n\\n     \\n      \\n       5.5.0\\n       \\n        \\n         empty() now supports expressions, rather than only\\n         variables.\\n        \\n       \\n      \\n\\n      \\n       5.4.0\\n       \\n        \\n         Checking non-numeric offsets of strings returns TRUE.\\n        \\n       \\n      \\n\\n     \\n    \\n   \\n\\n  \\n         empty() now supports expressions, rather than only\\n         variables.\\n        \\n         Checking non-numeric offsets of strings returns TRUE.\\n        \\n   \\n    Example #1 \\n     A simple empty() / isset()\\n     comparison.\\n      \\n    \\n\\n<?php$var = 0;// Evaluates to true because $var is emptyif (empty($var)) {    echo '$var is either 0, empty, or not set at all';}// Evaluates as true because $var is setif (isset($var)) {    echo '$var is set even though it is empty';}?>\\n\\n\\n    \\n\\n   \\n  Example #1 \\n     A simple empty() / isset()\\n     comparison.\\n    Example #2 empty() on String Offsets\\n    PHP 5.4 changes how empty() behaves\\n    when passed string offsets.\\n   Output of the above example in PHP 5.3:Output of the above example in PHP 5.4:Note: Because this is a\\nlanguage construct and not a function, it cannot be called using\\nvariable functions.\\nNote: \\n   \\n    When using empty() on inaccessible object properties,\\n    the __isset()\\n    overloading method will be called, if declared.\\n   \\n  \\n    When using empty() on inaccessible object properties,\\n    the __isset()\\n    overloading method will be called, if declared.\\n   \\n   \\n    isset() - Determine if a variable is declared and is different than NULL\\n    __isset()\\n    unset() - Unset a given variable\\n    array_key_exists() - Checks if the given key or index exists in the array\\n    count() - Count all elements in an array, or something in an object \\n    strlen() - Get string length\\n    The type comparison tables\\n   \\n  "
        ]
    },
    {
        "prompt": "用awit async来写\n```undefined\n session.defaultSession.cookies.get({ url: 'https://www.bilibili.com/' })\r\n    .then((cookies) => {\r\n        console.log(cookies.length)   \r\n        }).catch((error) => {\r\n        console.log(error)\r\n    })\n```",
        "doc": []
    },
    {
        "prompt": "js从下列地址路径中获取文件名\nhome\\kamfu\\kfdataplatform-file\\demo_project\\job\\test_work_file_awslll.kjb",
        "doc": [
            "\\n        \\n    \\n                    扶苏1002: \\n                    R和RStudio的安装是个超链接地址哦\\n                \\n                    一念既出万山无阻: \\n                    超级详细，保姆级教学！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了这篇关于“JS的组成”的博客，内容非常有深度，对于想了解JavaScript的读者来说一定会受益匪浅。希望您能继续保持创作的热情和动力，不断分享更多关于编程和技术的知识。或许下一步可以考虑写一些实际案例或者应用场景，让读者更好地理解JS的实际运用。谢谢您的分享，期待您更多精彩的作品！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜你写了第6篇博客！看来你对JS的理解越来越深了。不过我觉得下一步可以尝试写一些关于JS的实际应用案例，让读者更容易理解和接受你的观点。加油！期待你的下一篇作品。\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第7篇博客！JS的变量是一个很重要的主题，您讲得很清楚易懂。希望您能继续分享关于JS的知识，也可以考虑写一些关于JS的实际应用案例或者是一些进阶的内容，这样能让读者更加深入地了解JS的知识。期待您的下一篇文章！加油！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "Node.js 执行 JS 代码时，代码中的路径都是以终端所在文件夹出发查找相对路径，而不是以我们认为的从代码本身出发，会遇到问题，所以在 Node.js 要执行的代码中，访问其他文件，建议使用绝对路径实例：问题原因：就是从代码文件夹出发，使用../text.txt解析路径，找不到目标文件，报错了！解决方案：使用模块内置变量 __dirname配合 path.join() 来得到绝对路径使用再次执行查看问题就被修复了！以后在 Node.js 要执行的 JS 代码中访问其他文件的路径，都建议使用绝对路径。\\n        \\n    \\n                    白话机器学习: \\n                    内容丰富图文并茂，认真看完收获很大。思路清晰细节满满，支持大佬优质好文。\\n                \\n                    zj285489862: \\n                    引用「https://unpkg.com/redux@latest/dist/redux.min.js\">」\\n这个网址找不到\\n                \\n                    优码梦想家: \\n                    没有统一配置的吗，这个还要去一个个语句中Alt+Enter去设置吗?\\n                \\n                    Yang Mufa: \\n                    为啥我的出不来,但也没报错,还有:particlesLoaded=\"particlesLoaded\"是什么东西\\n                \\n                    默o。: \\n                    文章写的很详细，条理清晰，很容易看进去，\\n学到了很多知识，感谢博主分享，\\n支持博主.希望博主也支持我的博客，一起进步\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者小秀_heo你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "浏览器的权限是很低的，是不能与操作系统实现交互，只有少量的api可以与操作系统交互，例如文件上传。但是，软件是有很高的权限的，例如，迅雷下载就可以轻松实现，下载到指定目录。\\n                    GUO_YYDS: \\n                    弹出文件名的那个框 应该就能选择格式吧\\n                \\n                    失忆。: \\n                    这个要怎么保存xlsx格式\\n                \\n                    黄轩133: \\n                    去 MDN 看一下兼容性，低版本浏览器该 api 不兼容\\n                \\n                    GUO_YYDS: \\n                    正常来说，浏览器下载就是下载到默认位置\\n                \\n                    长相思979: \\n                    这个api 就是有时候好用 有时候不好用的， 不稳定\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "\\n            mob649e8157aaee\\n            2024-03-28 07:05:30\\n                                        ©著作权\\n                    \\n                            \\n                    文章标签\\n                                            文件名\\n                                            文件路径\\n                                            Java\\n                                    \\n                                        \\n                    文章分类\\n                                                                        Java\\n                                                                                                后端开发\\n                                                            \\n                                在Java编程中，有时候我们需要根据文件路径来获取文件的目录和文件名，这在文件操作和处理中非常常见。通过使用Java的File类，我们可以轻松地实现这一功能。Java中的File类用于表示文件或目录的路径名。它提供了一系列方法，可以帮助我们对文件和目录进行操作，比如创建、删除、重命名等。在本文中，我们将利用File类来获取文件路径的目录和文件名。下面是一个简单的示例代码，演示了如何根据文件路径获取文件的目录和文件名：在这段代码中，我们首先创建了一个File对象，然后使用getParent()方法获取文件的目录，使用getName()方法获取文件名，最后分别打印出来。通过上面的示例代码，我们可以清晰地看到如何利用Java的File类来获取文件路径的目录和文件名。这个功能在实际开发中非常有用，可以帮助我们更方便地处理文件操作。希望本文能够帮助到你理解如何在Java中根据文件路径获取文件的目录和文件名。如果有任何疑问或建议，请留言告诉我们！表格：上一篇：java代码中设置excel单元格背景色下一篇：java 当前日期减去一周 Java Thread Dump文件分析 幻兽帕鲁配置文件在哪？如何优化Palworld配置？阿腾云分享不同Windows和Linux服务器操作系统幻兽帕鲁配置文件路径 通过MongoDB的collection-XXX-wt数据文件，如何得到具体的集合名字？MongoDB的数据文件和MySQL不一样，我们进入数据目录，你会发现如下：[root@centos7-1 collection]# ll -h总用量 36K-rw------- 1 root root 36K 2月  14 22:05 39--6849722993611617594.wt[root@ce # iOS根据路径获取文件的名字和类型## 引言在iOS开发中，有时候我们需要获取文件的名字和类型。这个过程可能对于一些经验丰富的开发者来说很简单，但对于刚入行的小白来说可能会比较困惑。本文将向你介绍如何实现iOS根据路径获取文件的名字和类型。## 流程概述下面是实现这个功能的一般流程：| 步骤 | 描述 || ---- | ---- || 步骤1 | 获取文件的完整路径 # Java根据文件路径获取文件的实现## 1. 简介在Java开发中，我们经常需要根据文件路径获取文件对象，以便对文件进行读取、写入或其他操作。本文将介绍如何使用Java代码来实现这一功能，并指导新手开发者完成相应的步骤。## 2. 流程概览下表展示了获取文件的流程概览：| 步骤 | 描述 || ---- | ---- || 1    | 提供文件路径 || 2 # Java根据路径获取文件的实现作为一名经验丰富的开发者，我将教会你如何使用Java根据路径获取文件。在本文中，我将提供整个过程的步骤，并在每一步中给出相应的代码和注释。## 步骤概览在开始之前，让我们先来看一下整个流程的步骤概览。在下面的表格中，我将列出每个步骤以及需要完成的任务。| 步骤 | 任务 ||------|------|| 1.   | 创建一个File对象 | # Java根据文件路径获取文件流在Java编程中，经常会遇到需要根据文件路径获取文件流的情况。文件流是指一个开放的、按字节顺序读取和写入的数据流，它可以用来读取或写入文件中的数据。在本文中，我们将介绍如何使用Java来实现根据文件路径获取文件流的操作，并提供代码示例来帮助读者理解。## 文件流的作用文件流在Java中有着广泛的应用。通过文件流，我们可以实现对文件的读取、写入和操作，这 在Java中，我们可以使用`java.io.File`类来根据文件路径获取文件。`File`类提供了丰富的方法来操作文件，包括创建、删除、重命名、获取文件信息等。要根据文件路径获取文件，我们首先需要创建一个`File`对象。`File`类有多个构造方法可以用于创建`File`对象，其中最常用的有两种方式：使用文件路径字符串构造和使用父目录和子目录构造。下面是使用文件路径字符串构造`File # Java根据文件路径获取图片## 1. 问题描述小白开发者刚入行不知道如何实现\"Java根据文件路径获取图片\"的功能。我们需要帮助他理解整个流程，并给出每一步的具体代码示例和注释。## 2. 流程图以下是整个流程的简化流程图：```mermaidjourney    title Java根据文件路径获取图片流程    section 准备        开发者->小白: # Java根据文件路径获取MultipartFileMultipartFile是Spring框架中的一个接口，用于处理HTTP请求中的文件上传。在Java中，我们可以通过文件路径来获取MultipartFile对象，以便在后续的处理中使用。本文将详细讲解如何根据文件路径获取MultipartFile，并提供代码示例。## 1. MultipartFile简介MultipartFile # Java根据路径获取文件流在Java中，我们经常需要根据文件路径来获取文件流，以便读取、写入或操作文件。本文将介绍如何使用Java来根据路径获取文件流，并提供相关的代码示例。## 什么是文件流？在Java中，文件流是用于读取或写入文件的一种方式。通过文件流，我们可以将文件的内容读入到程序中，或者将程序中的数据写入到文件中。文件流提供了一种顺序读取或写入文件的方法，可以访问文件的字节 ## Java根据文件路径获取文件名的实现步骤为了帮助这位刚入行的小白实现\"Java根据文件路径获取文件名\"，我们可以按照以下步骤进行操作：```mermaidflowchart TD    Start(开始)    InputFilePath(输入文件路径)    CheckFileExistence(检查文件是否存在)    GetFileName(获取文件名)    En # Java根据文件路径获取文件大小在Java编程中，有时候我们需要获取文件的大小，以便进行一些相关的操作。本文将介绍如何使用Java根据文件路径获取文件大小，并提供相应的代码示例。## 什么是文件大小文件大小是指文件所占用的存储空间大小，通常以字节为单位进行计算。在计算机系统中，每个文件都有一个固定的大小，该大小取决于文件中包含的数据量。## Java中获取文件大小的方法在J # Java根据文件名获取文件路径的实现方法## 引言在Java开发中，经常会遇到需要根据文件名获取文件路径的情况。本文将向刚入行的小白开发者介绍如何实现这一功能。整个过程可以分为以下几个步骤：1. 输入文件名2. 遍历目录3. 判断文件名是否匹配4. 获取文件路径接下来，我们将逐步介绍每个步骤需要做的事情，并提供相应的代码示例。## 步骤一：输入文件名首先，我们需要 # Java根据路径获取本地文件实现方法## 概述在Java中，我们可以通过路径来获取本地文件。本文将介绍如何使用Java代码实现这一功能。首先，我们将分步骤介绍整个流程，并给出每个步骤需要做的事情以及相应的代码。## 流程下面是获取本地文件的整个流程：```mermaiderDiagram    开始 --> 检查路径是否存在    检查路径是否存在 --> 读取文件 # 如何使用Java根据文件路径获取Blob## 概述在Java中，我们可以使用一些库和技术来根据文件路径获取Blob。在本文中，我们将展示如何使用Java编写代码来实现这一过程。我们将按照以下步骤进行操作：表格：| 步骤 | 描述 || --- | --- || 步骤一 | 导入所需的库和类 || 步骤二 | 创建一个Blob容器 || 步骤三 | 根据文件路径获取Blob ## 获取Java文件对象的步骤与代码示例### 步骤概述在Java中，根据路径获取文件对象可以分为以下几个步骤：1. 创建一个`File`对象，该对象代表文件或目录的路径。2. 判断路径对应的文件或目录是否存在。3. 如果文件或目录存在，可以进一步操作；如果不存在，则需要处理相应的异常情况。4. 可以根据需要执行进一步的操作，例如读取文件内容、写入文件内容等。下面是具体的步 # Java根据路径获取文件内容的实现## 1. 概述在Java中，我们可以通过路径来获取文件的内容。本文将引导你以经验丰富的开发者的身份，教会你如何实现这一功能。首先，我们将介绍整个过程的流程，并用表格展示每个步骤。然后，我们会逐步说明每个步骤需要做什么，并提供相应的代码示例和注释。## 2. 流程图为了更好地理解整个过程，我们将使用甘特图来表示流程。下面是一个使用mermaid语法 # Java根据路径获取读取文件的实现方法作为一名经验丰富的开发者，我将教会你如何使用Java根据路径获取读取文件。在本教程中，我将逐步指导你完成这一过程，并提供相应的代码示例和注释。## 整体流程下面是整个实现过程的步骤概览：| 步骤 | 描述 || ---- | ---- || 1 | 创建一个File对象，该对象代表要读取的文件 || 2 | 检查文件是否存在 || ## Java根据文件路径获取目录的实现### 引言在Java中，我们经常需要根据文件路径获取目录，以便进行一些文件操作或者文件管理。本文将介绍如何使用Java代码实现根据文件路径获取目录的方法，并提供详细的步骤和代码示例。### 流程图首先，我们先来看一下整个流程的图示。```mermaidflowchart TD    start[开始]    input[输入文件路径] 原理Faster RCNN主要可以分为四个内容：Conv layers。作为一种CNN网络目标检测方法，Faster RCNN首先使用一组基础的conv+relu+pooling层提取image的feature maps。该feature maps被共享用于后续RPN层和全连接层。Region Proposal Networks。RPN网络用于生成区域建议框。该层通过softmax判断anchor myBatis中类与类关系映射数据查询在一个类中通常会依赖其他类作为自己的私有变量，反映在数据库的表格中就是主外键关联 employee表 department表如果想要查询一个Employee对象，则需要关联表department进行查询，具体的方法有以下几种：1.关联查询关联查询就是将要查询的表格左连接后进行统一查询 配合resultMap标签进行查询数据和类变量之间的映射查询语句：selec \\n\\n\\n                    1. 什么是RNN模型 \\n\\n RNN(Recurrent Neural Network), 中文称作循环神经网络, 它一般以序列数据为输入, 通过网络内部的结构设计有效捕捉序列之间的关系特征, 一般也是以序列形式进行输出. \\nRNN的循环机制使模型隐层上一时间步产生的结果, 能够作为当下时间步输入的一部分(当下时间步的输入除了正常的输入外还包括上一步的 1.什么是NginxNginx是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务。nginx是一个高性能的反向代理和负载均衡中间件。2.nginx的优点1)在性能上，Nginx占用很少的系统资源，能支持更多的并发连接，达到更高的访问效率;2)在功能上，Ngi nx是优秀的代理服务器和负载均衡服务器;3)在安装配置上，Nginx安装简单、配置灵活;4)Ngin 元素定义（标签）其实就是里面的标签， <> 括起来的都叫元素 。 成对出现。 如下：<stu> </stu>文档声明下来的第一个元素叫做根元素 (根标签)标签里面可以嵌套标签空标签既是开始也是结束。 一般配合属性来用。\\n\\n<age/>\\n\\n\\n<stu>\\n\\t<name>张三</name>\\n\\t<age/>\\n&举报文章请选择举报类型具体原因原文链接（必填）补充说明0/200上传截图格式支持JPEG/PNG/JPG，图片不超过1.9MCopyright © 2005-2024 51CTO.COM\\n                    版权所有 京ICP证060544号"
        ]
    },
    {
        "prompt": "我想写一个python文件，功能是监测输入的对话文本文件，检测到如果出现超出规定字数的段落，就切分句子到下一段，为下一段文本的开头添加同样的说话人，并从下一段开始继续检测。切分的模式有两种：1.以距离规定字数最近的句号、省略号与感叹号为切分点，上一段文本最末尾保留原本的标点符号；2.如果段落中没有以上提到的标点符号，则检测距离规定字数最近的逗号，将上一段文本最末尾的标点符号改为句号。\n样例：在规定字数为10的时候\n[小明]:十个字十个字十个字。十个字十个字。\n[小红]:十五个字十五个字，十五个字十五个字。\n处理后会变成：\n[小明]:十个字十个字十个字。\n[小明]:十个字十个字。\n[小红]:十五个字十五个字。\n[小红]:十五个字十五个字。\n但目前这段代码不能满足要求，请帮忙修改\n```Python\nimport re\r\n\r\ndef split_text(text, max_length):\r\n  paragraphs = text.split('\\n')\r\n  result = []\r\n  \r\n  for paragraph in paragraphs:\r\n      if len(paragraph) > max_length:\r\n          # 以距离规定字数最近的句号、省略号与感叹号为切分点\r\n          print(len(paragraph))\r\n          cut_index = paragraph.rfind('。')\r\n          if cut_index == -1:\r\n              cut_index = paragraph.rfind('!')\r\n              if cut_index == -1:\r\n                  cut_index = paragraph.rfind('！')\r\n                  if cut_index == -1:\r\n                      continue\r\n                  paragraph = paragraph[:cut_index+1]\r\n              else:\r\n                  paragraph = paragraph[:cut_index+1]\r\n          else:\r\n              paragraph = paragraph[:cut_index+1]\r\n\r\n          # 将上一段文本最末尾的标点符号改为句号\r\n          if paragraph[-1] not in ('.', '!', '。', '！'):\r\n              paragraph += '。'\r\n\r\n          # 为切分后的句子添加原本的说话人前缀\r\n          speaker = re.match(r'^\\[(.*?)\\]', paragraph).group(1)\r\n          paragraph = f\"[{speaker}]{paragraph[len(speaker) + 2:]}\"\r\n\r\n          result.append(paragraph)\r\n      else:\r\n          result.append(paragraph)\r\n\r\n  return '\\n'.join(result)\r\n\r\ntext = \"[小明]:十个字十个字。十个字十个字。\\n[小红]:十五个字十五个字，十五个字十五个字。\"\r\nmax_length = 10\r\nresult = split_text(text, max_length)\r\nprint(result)\n```",
        "doc": []
    },
    {
        "prompt": "python打包成exe冻结路径怎么搞",
        "doc": [
            "​我这里用的是Anaconda Prompt命令行工具来进行打包，预先配置了Anaconda 的环境变量和路径，因为Anaconda 自带了非常多的模块安装包，我通常用的模块比较少，也为了减少软件的体积，一般新建自己的环境变量。首先需要安装pyinstaller这个模块，输入conda install pyinstaller。使用 PyInstaller 打包 Python 应用程序为 .exe 文件时，下面这些技巧可以更好地管理和优化打包过程：1. 指定打包模式：2. 排除不需要的模块：3. 包含额外数据文件：4. 指定图标：5. 隐藏控制台窗口：6. 处理隐藏依赖：     - 例如：pyinstaller --onefile --hidden-import=some_hidden_module my_script.py7. 优化体积：8. 创建 spec 文件并自定义打包配置：9. 打包时不包含标准库：10. 处理多层目录下的脚本：通过以上这些技巧，可以根据实际情况灵活打包 Python 应用程序，使其在无 Python 环境的机器上也能顺利运行。记得在打包前确保所有必要的第三方库都已安装，并且版本兼容。在打包过程中经常会遇到问题，要仔细阅读错误信息，并查阅 PyInstaller 文档和社区讨论以获得帮助。 ",
            "一、打包前置知识 1.1 什么是 exe 可执行文件？ exe 文件英文全名是 executable file，翻译为可执行文件（但它不等于可执行文件），可执行文件一般来说包含两种，文件扩展名为 .exe 的是其中的一种。正确的 exe 文件一般可以在 Windows 平台上直接双击运行！我们通常用的各种软件都是通过快捷方式打开的，而这个快捷方式的目标地址就是这个软件的一个 exe 文件。还有其他的可执行文件，这里就不详述了。1.2 为什么要将 Python 程序打包为 exe 可执行文件？ 众所周知，Python 程序的运行必须要有 Python 的环境，但是程序编出来是用的，如果是给别人用，而他/她的电脑上又没有 Python 程序运行的环境怎么办呢？总不能让他/她去安装一个吧？这时我们就要将 Python 程序打包为 exe 文件。这样，在 Windows 平台下，就可以直接运行该程序，不论有没有 Python 环境。不过呢，如果对方使用的是 Linux 系统，自带了符合版本要求的 Python 环境，那就不必打包，也更用不到 pyinstaller 了。1.3 为什么 Python 程序不能直接运行呢？ Python 是解释性语言，它与 C 或者 C++ 等编译型语言不同，C 或者 C++ 都是要编译再运行的，（Windows 平台下编译产生的最终文件一般就是 exe 文件），Python 本质上只是对一段文本进行解释，类似于浏览器解析 html 文件，是不会产生任何可执行文件的。1.4 我们用什么来打包 Python 文件呢？ 一般我们都用 Python 的 Pyinstaller 模块进行打包，也有其他的打包模块，不过相比之下，Pyinstaller 的使用者最多，用起来也很简单（但效果并不一定是最好的，这里推荐一个效果可能更好的模块 —— Nuitka），因此本文章就以 Pyinstaller 模块来打包 Python 程序。1.5 打包有哪几种分类呢？ 根据需要，下面的方法大家可以任选一种进行打包（我一般用第 1 个），不过新手的话建议全部都看一下哦。① 简单打包：操作最简单，成功可能性最高，不兼容的可能性最低，但无法保护源代码，只能保证可以无需 Python 环境即可运行 ② 一般打包：步骤最少，操作最简单，但是打包时间久，效果不理想（打包后文件太大，一般 100MB 以上） ③ 虚拟环境下的打包：步骤稍多，操作略微复杂，但是打包快，效果好（打包后文件不大，一般 10MB 以内） ④ 多 Python 文件的打包：步骤更多，操作更复杂，但是可以将多个 Python 文件都打包进去 ⑤ 包含资源文件的打包：步骤极为繁琐，操作非常复杂，但是可以把所有的文件都包含进去 二、打包的方法 2.1 简单打包 此方法非常适合于开源用户，如果你没有保护源代码的需求（无所谓源代码会不会被看到），那我强烈强烈强烈推荐你使用此方法，这也是我目前一直使用的方法！因为它实在是太简单了，而且几乎不会出现什么问题！但是一定一定要注意，这种打包方式，源代码虽然无法被保护，但也不是说直接可以给别人看到的，我们可以对它稍微“加密”一下，后面会讲，非常简单的。另外，此方法为 2023/11/07 添加到这篇文章中的，因此我不会对其像后面几个方法那样进行详述，如有在操作步骤上的问题，可参考后面方法的步骤。2.1.1 前置 此方法推荐要在学会搭建虚拟环境的情况下操作，效果比较好。关于搭建虚拟环境，往文章下面看。2.1.2 直接打包 搭建好虚拟环境后，安装所需的包，然后找到启动文件（你程序启动的那个 Python 文件），对其使用打包命令，打包完之后，直接将产生的 dist 文件中的 exe 移动工程目录的根目录下，用它代替启动文件即可，双击起飞！但是要注意，把文件发给别人使用的时候，必须将整个项目文件夹发给别人，而不是一个 exe 文件。2.1.3 稍微“加密”一下源代码 打包前运行一下项目，确保执行每个功能后关闭程序，将产生的每个 pycache 文件夹中的文件移动到项目中去，代替对应名称的源代码（记得去除文件名中多余的部分）。然后，源代码文件就可以删除了（记得这样做之前备份整个项目的源代码）。pycache 中都是 pyc 文件，有兴趣的朋友可以了解一下。这不是真正的加密（可以很容易地被解密），pyc 文件都是 Python 解释器产生的字节码文件，但是这样别人也无法直接看到源代码了。2.2 一般的打包 一般的打包方式，最简单，但是打包的成品有些许臃肿，不是特别推荐。2.2.1 打开 Anaconda Prompt 如果你安装了 Anaconda 的 Python 集成环境的话，在菜单页面的所有应用里面可以看到 Anaconda 以及 Anaconda Prompt。 Anaconda 点进去就可以看见如下的界面：Anaconda Prompt 2.2.2 下载并安装 Pyinstaller 模块 这个用 pip 模块直接下载就行，直接就下载在本次需要打包的 Python 环境下（base 环境） pip install Pyinstallerpip insatll Pyinstaller 当然了，已经安装过 Pyinstaller 模块的可以跳过这一步。如果出现什么疑难杂症，大概率是权限导致的问题，按照下面的方法重新打开 Anaconda Prompt 就好了。管理员身份打开 此时，Anaconda Prompt 的显示文字会变成如下这样：管理员身份运行 然后再 pip 就行，这样应该就没有什么问题了。2.2.3 切换命令行的路径 因为你要打包的文件在对应的文件夹里面，而 Pyinsatller 一开始是不知道要打包的文件在哪里的，所以要直接切换命令行的路径到目标文件夹路径，使得后面的步骤中，Pyinstaller 可以找到对应的文件。cd 文件夹路径 这里我的打包文件夹放在了桌面上，文件夹名为 test，要打包的 Python 文件在 test 文件夹内，名为 Python.py 。于是我的文件夹路径为 C:\\\\Users\\\\小康\\\\Desktop\\\\test（一定要是绝对路径）。切换路径 然后回车就可以看到下面这样的就说明成功了。切换路径 2.2.4 打包 Python 文件 输入如下格式的命令即可Pyinstaller -option1 -option2 -... 要打包的文件 参数选项比较多，这里我列一个表：这里简单地举几个例子，让大家明白这个参数怎么写。打包文件然后回车它就会自动打包了。说明一下，一般我们都只会选择其中的几个参数选项，如 -F 和 -w，根据需要，我们还会选择其他的一些参数。当出现如下的文字（主要是最后一行文字）时就代表打包成功了！打包完毕 2.2.5 打包生成文件的位置 让我们回到最初切换的文件夹里，我们可以看到，多了下面三个文件（build 文件夹、dist 文件夹和 spec 文件）：文件夹 我们想要的 exe 文件就在新生成的 dist 文件夹里面。此时的 exe 文件有可能还运行不了，因为它可能涉及到一些资源文件或者其他的 Python 文件。将它们放到同一文件夹下即可正确运行。这里说明一下，打包完之后，spec 文件和 build 文件夹就没用了，可以删除了。这里一般的打包方式产生的 exe 文件都比较大，这是因为 Pyinstaller 打包的时候会把你环境中的库和模块全部打包进去，这就会使一些你根本用不着的库和模块也被打包进去了！而且这些库被打包之后不仅会使 exe 文件变大，还会使其运行变卡变慢、变得十分臃肿。因此，不建议这样的打包方式。十分地建议大家用第二种方式进行打包 —— 虚拟环境下的打包。2.3 虚拟环境下的打包 所谓的虚拟环境，就是我们自己创建一个小型的 Python 环境，也可以这样理解，自己创一个新的、纯净的、没有奇奇怪怪的第三方库和模块的 Python 环境。这个环境你也是可以用来编写 Python 程序的，但这里我们是要来打包 exe 的，这就要求它里面的库和模块尽可能的少。2.3.0 先介绍几个 conda 命令 ① 导出虚拟环境的列表conda env list ② 导出当前环境的包conda list ③ 启动/切换至名为name的Python环境conda activate name 默认为base环境（名为base）④ 退出虚拟环境conda deactivate 退出后会自动回到base环境⑤ 创建新的、名为name的、Python 版本为3.x的虚拟环境conda create -n name python==3.x 2.3.1 创建虚拟环境 和一般的打包方式一样，打开 Anaconda Prompt，然后输入如下格式的命令：conda create -n env_1 python==3.10.8询问 这里它会停下来询问你新的环境是否要安装这些包，这些包大部分都是一些必须的包，直接输入 y 或者直接回车即可。2.3.2 安装需要的第三方包 这样，我们的虚拟环境就弄好了！但是！这并不代表着它就是符合你程序运行的环境，如果你的 Python 程序还用到了一些其他的第三方库，那么就一定要把这些库给添加进这个虚拟环境，添加方式就是直接在当前环境下用 pip。下载库很慢的，可以在 pip 时加上镜像源的地址：pip install -i https://pypi.tuna.tsinghua.edu.cn/simple 包的名字 这里有一点很关键！不能忘记！Pyinstaller 也是第三方的包，所以新的环境里面一定一定要 pip install Pyinstaller！其他的打包步骤和一般的打包方式一模一样，请看上面的步骤。2.3.3 追求极致的exe大小（非必要步骤） 如果你想让你的 Python 程序打包后的 exe 大小，小到不能再小的话，那么就要尽可能地删去虚拟环境里面的一些用不到的包（用 pip uninstall 来删）。我这里有一个环境的包，它已经把一般程序用不到的包删干净了（没有第三方包）。你可以参考一下（通过输入 conda list 命令来查看）。追求极致 2.4 多 Python 文件的打包 或许对于单个文件而言，你已经清楚该怎么做了，但是对于多个 Python 文件同时打包而言，你未必清楚。我相信我们大多数人在编写大项目的时候，都会将一个程序拆解成多个 Python 文件以便于维护。但是前面的打包方式又只能打包一个 Python 文件，其他的 Python 文件就只能作为资源文件放在外面。但是这样别人使用这个程序的时候，不就能看到那些在外面的 Python 文件的源代码了吗？谁愿意把源代码给别人免费看呢？所以，我们就要将多个 Python 文件同时打包！这里要说一点，这里的多个 Python 文件同时打包时，还是要使用 -F 参数，生成一个文件，这里可以创建虚拟环境来打包，也可以不用。2.4.1 生成spec文件 同之前的步骤一样，先打开 Anaconda Prompt，然后输入如下命令以生成 Python 源文件 name.py 的 spec 文件，这里的 name.py 一般选取多个 Python 文件的主文件。pyi-makespec -option1 -option2 -... name.py option 参数和之前步骤里的一样，输入你需要的参数即可。回到我们源代码的文件夹中，可以发现已经多了一个 name.spec 的文件了。2.4.2 编辑spec文件 spec 文件实际上就是一个文本格式的文件，可以用任意文本编辑器打开，也可以用你的 IDE 直接打开，细心的人会发现，里面的内容实际上就是 Python 格式的代码，只不过文件扩展名改成了 spec 而已。spec 文件实际上就包含了打包的所有参数，我们可以对其进行修改，以达到自定义打包的效果。找到下面的这句：spec 文件 它实际上就是个列表！将你需要的 Python 文件的路径（允许相对路径）都以字符串的形式写进这个列表里面，如果是与 name.py 不在同一目录（同一文件夹）下的 Python 文件，那就要写它的绝对路径。编辑完之后，记得保存文件。2.4.3 以spec文件进行打包 回到之前的命令行（Anaconda Prompt），输入以下命令进行打包。Pyinstaller name.spec 慢慢等待，打包完之后，就是我们想要的 exe 文件了，它把所有的 Python 文件都加了进去！但是很可惜，资源文件还是要放在同一目录下才可以正确运行 exe 程序。不过我还是极力推荐这种方式！我每次打包就是用的这一种方式，毕竟资源文件也不是必须打包进 exe 才好的，有些时候，我们的 Python 代码一般都不会超过 1MB 吧（想必大部分人都没有），而资源文件却有大几十甚至几百 MB，打包进去之后，会使得 exe 程序运行变慢，这不好。而且，你想啊，现在大部分的软件，资源文件啊什么的不都是放在 exe 外面的么？2.5 包含资源文件的打包 这个打包方式，就是对多个 Python 文件的打包方式的补充。2.5.0 一点吐槽 说到这个，我不得不吐槽一句，网上大部分的打包资源文件的方法都是一模一样的，繁琐且复杂，而且好多根本都实现不了，搞得我当时初学的时候一脸懵……，什么引用 os、sys 库搞些什么路径操作啊什么的，辣么麻烦，还有什么把图片文件用 base64 硬编码的啊什么的，也不解释原理，只能说离谱……好了，不吐槽了，继续说正事。多个 Python 文件的打包还是和之前讲到的一样，这里只说资源文件的方法。也是一样的，编辑 spec 文件。2.5.1 编辑spec文件 我的建议是，把资源文件（或者文件夹）都统一放在一个与 Python 文件同一目录下的的 res 文件夹里，方便打包，就如下图。资源文件夹 然后，将下图中标识的这一行改成这样：spec 文件 改完记得保存！2.5.2 修改文件打开函数 这里有三种方法，前两种是我的方法，最后一种是网上别人的方法。① 引入特定的模块这个模块的代码很简单，放在下面，一定要将模块命名为 _.py，并在引用其他第三方模块之前就引用它，但又一定要在下划线开头的模块之后引用（否则会有 BUG），它在主 Python 文件里引用一次即可（其他的文件不用引用）！它可以将 open 函数改成我们想要的，而且原来的代码还完全不用修改！这里的 file 是 Python 文件的属性，是一个字符串，为该文件的绝对路径，不管该文件在哪里，file 都是对应的绝对路径。然后我们用写一个 wrapper 函数充当装饰器，将内置的 open 函数包装一下。再引入 builtins 模块（内置函数和类的模块），给其添加一个名为 open 新属性以覆盖原来的 open 函数，并对该项目整体生效即可！这种方法的好处在于，它只需要在主文件里引用一次即可，其他的什么都不用改！（④ 特别注意 里的除外）② 自己手动修改 open 函数修改路径这个修改是在源代码中修改的（每一个用到了 open 函数的 Python 文件都要改一次），目的就是要让相对路径变成会根据主 Python 文件的路径而变化的绝对路径。修改的装饰器如下：把这段代码写在文件的开头即可（或者说在使用open函数之前）。③ 网友的其他方法他们就是写了这样一个函数来代替 open，也是手动修改的 open 函数，不得不说，看起来有点麻烦（每个用了 open 函数的 Python 文件都要引入 os 和 sys 模块）。其他的都是一样的。④ 特别注意这里还要提一下，无论是前面的哪一种方法，只要你使用了参数为路径的其他函数时，也要改一下，其实就是在相对路径前面加上方法②中的 key 即可。其实直接方法③来代替也可以，但是功能上容易出错，而且如果 Python 文件较多，那么每个 Python 文件都这样引用两个模块（sys 和 os），看起来比较麻烦。当我们使用了 tkinter 模块的时候，PhotoImage 类就是要这样写的一个例子（其中的 init 方法用到了路径）：这个代码就要写在使用 PhotoImage 的开头，后续调用时就用这个 PhotoImage，使用其他模块时，遇到参数为路径的函数或类，都要这样修改。最后一步，和之前的方法一样，打包你的程序即可！三、打包实战 我这里以一个我的半成品为例，进行打包。项目是一个图形化界面的程序。我们要将其打包成只含有一个 exe 的文件。3.1 打包方式的选择 我的项目里面包含多个 Python 文件，要用多 Python 文件打包方式；项目比较大，为节省打包时间，并追求极致的 exe 大小，采用虚拟环境打包方式；项目含有资源文件夹，采用包含资源文件的打包方式。打包方式选择好了，开始打包！3.2 打包全过程 项目全部文件（蓝色背景的是主文件）项目文件 包含四个 Python 文件、一个资源文件夹（res），资源文件夹里面又包含了一些子文件夹和 json 文件。3.2.1 第一步：启动 Anaconda Prompt，切换至目标文件夹路径位置cd C:\\\\Users\\\\小康\\\\Desktop\\\\SuperGameLauncher切换至目标文件夹路径位置 3.2.2 第二步：启动虚拟环境（我的是一个纯净的、第三方包只有 Pyinstaller 的环境）conda activate e1启动虚拟环境 3.2.3 第三步：生成 spec 文件（我的 Pyinstaller 已经安装好了）pyi-makespec -F -w SuperGameLauncher.py生成 spec 文件 3.2.4 第四步：引入 _.py 模块（我的程序用到了大量 open 函数且涉及多文件）   _.py 自定义模块引入 _ 模块 处理特殊的情况（tkintertools 模块里面有参数为路径的类）：处理特殊情况 3.2.5 第五步：编辑 spec 文件 修改图中标识的两处地方（_.py 不要忘记了）。编辑 spec 文件 3.2.6 第六步：打包项目（注意这里的对象是 spec 文件）Pyinstaller SuperGameLauncher.spec准备打包 打包成功！打包成功 3.2.7 第七步：检验打包效果 找到项目中的 dist 文件夹，打开后会有一个 exe 文件。对于我这个项目而言，这已经是非常小的大小了（50.8MB），毕竟资源文件就有 42.2MB，也就是说，除去资源文件，源代码占用的大小为 8.6MB！怎么样，是不是很不错呢？dist 文件夹 双击运行！成功运行 四、疑难解答与相关建议 4.1 疑难解答 因为经常有朋友问我各种各样关于打包失败的问题，我在此处给出一些问题的可能解决办法（不保证解决，仅供参考）。4.1.1 模块找不到的错误 —— ModuleNotFoundError 这与你的打包方式有关，有些打包方式会出现这种情况，了解 Pyinstaller 的机制会有一定帮助。Pyinstaller 打包后程序运行机制和直接用 Python 解释器相比，在源代码文件查找方面有一点不同，Python 解释器是在工程目录下查找源代码文件和资源文件，但是 Pyinstaller 如果是将所有文件打包成一个可执行文件，而没有其他的文件，那么它会运行前将源代码文件和资源文件重新生成出来，放在用户临时文件夹中，然后修改工程目录的根目录地址为那个临时文件夹路径，这样 Python 就能找到对应的文件。如果你没有打包好，导致文件没有被打包进 exe，就无法被重新生成，也就导致了 ModuleNotFoundError。当然，如果你本就不打算将源代码文件和资源文件放进可执行文件里面，而是像一般的软件一样，分别放在各个文件夹中，那就没啥事了，不用考虑上面的情况。此时你出现这种报错，纯粹就是真的缺少对应的模块，如果是用虚拟环境打包的，可能是虚拟环境缺少对应的模块，如果不是，那么可能是你不小心把什么东西给删除了。4.1.2 图形化程序运行没反应，但也没有报错 此时应该看看你打包时有没有加上 -w 命令。-w 的作用是将运行时出现的终端隐藏，但是所有的报错信息一般都是出现那里面的，你把它隐藏了肯定就看不到了，因此你应该将这个命令删去后打包，然后运行，查看报错信息，彻底解决问题后再重新进行打包（此时再把 -w 命令加回来）4.1.3 语法错误 —— SyntaxError 这种情况，先看看源代码有没有问题（别搞成下面的其他情况中的第一种了），如果没有问题，那可能是你在打包时使用的 Python 版本与源代码运行时版本不一致导致的。简单说，出现了比较高级的语法，低版本 Python 无法解释。比如 Python3.12 用于简化泛型的类型形参语法语法，Python3.11 的类型匹配语法 match 和 Python3.8 的海象运算符等。但也并不是说高版本就一定能解决问题，或许这个语法错误是解决了，但可能出现一些不兼容的问题，一般是第三方模块导致的，比如第三方包 scipy 的 API 曾经就大幅度修改过。使用对应版本的 Python 解释器非常重要！4.1.4 'pyinstaller' 不是内部或外部命令…… 这种情况一般是你电脑上安装的 Python 非全局环境下的（你可以理解为环境变量有问题）。网上有很多方法解决这个问题，但大多都是要你去改环境变量，这样太麻烦了！既然操作系统无法直接调用它，那让 Python 解释器调用它不就行了？很简单，Python 的环境变量一般不会有问题，这样写，用全局环境下的 Python 去调用其第三方模块 pyinstaller 即可：python -m pyinstaller ...(后面内容一样) 省略号表示正常情况下的其他命令。注意，有些操作系统可能要将上面的 'python' 改为 'python3'。4.1.5 其他情况 如果是很一般的报错，并非上述提到的某一种，此时你应该先检查源代码是否可以正常运行！这一点很重要！曾经有个哥们儿，拿着别人的程序源代码，想打包后再使用，给我看了一系列报错和问题，我半天找不到问题所在，折腾了半小时都搞不定。我最后问他，源代码可以正常运行吗？过了一会儿，他居然跟我说，源代码运行就已经报错了！！！真搞不懂怎么会有人出现这种情况，源代码都无法运行，打包肯定也运行不了啊！如果没有上述的任何一种，但就是一些莫名其妙的问题，可能与 Pyinstaller 模块本身或者平台有关，这我暂时也没有找到比较一般的解决办法。4.2 相关建议 4.2.1 关于虚拟环境的建立 那啥，大伙儿搭建虚拟环境不要再使用 Anaconda 了，那玩意儿真的大（几个 GB），而且运行起来非常慢，附带了一堆不必要的东西（我只是搭个虚拟环境而已，用不到那么多啊）。建议使用 miniconda，Anaconda 的官方精简版本，只包含了 conda 核心（搭建虚拟环境要用的玩意儿）和一些小型包（自带的一个 base 环境）。miniconda 只有 100 多 MB，和 Anaconda 完全不是一个量级的，非常小巧，渣电脑也能带的动。不过，要注意的是，miniconda 是没有图形界面的，新手可能不会操作……😅我的评价是，自己去学吧。4.2.2 关于项目文件的操作 建议打包前备份一份完整的项目文件，避免打包失败产生影响整个项目的源代码（打包会产生一些文件和文件夹）。后续可能还会对此文章进行持续更新，增加更多疑难问题的解答和建议，但，也可能不更新vb.net教程C#教程python教程 （缺少更新动力 —— 你的点赞和收藏😂）。 ————————————————原文链接：用 Pyinstaller 模块将 Python 程序打包成 exe 文件（全网最全面最详细，万字详述）_pyinstaller打包-CSDN博客\\n                    CSDN-Ada助手: \\n                    恭喜您发布了第16篇博客，内容围绕网络爬虫和字体反爬展开实战演示，展示了您的专业知识和实践能力。希望您能继续保持创作热情，分享更多有趣的内容给读者。也建议您可以尝试写一些关于数据分析或者人工智能在网络安全领域的应用案例，这样可以拓展您的创作领域，让读者获益更多。期待您的下一篇作品！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您撰写了第17篇博客！标题中提到了Python中str的index()方法，很有深度啊！希望您能继续保持创作的热情，为大家分享更多有价值的内容。下一步，或许可以考虑探讨一些高级的Python技巧或者深入解析一些常用函数的底层实现，让读者们受益匪浅。期待您的下一篇作品！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您撰写了第18篇博客《网络爬虫—Scrapy入门与实战》，内容涵盖了Scrapy的入门与实战经验，让读者受益匪浅。希望您能继续保持创作的热情和坚持，不断提升自己的写作水平和创作能力。在下一篇博客中，或许可以分享一些Scrapy在实际项目中的应用案例，让读者更加深入地了解这个工具的实际价值。期待您的更多精彩分享！祝您写作顺利，不断进步！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您撰写了第19篇博客，标题为“网络爬虫—Scrapy实战演示”！您的分享对于学习网络爬虫技术的朋友们来说肯定是非常有用的。希望您能继续保持创作的热情，不断分享更多有价值的内容。下一步，建议您可以深入探讨Scrapy框架的高级功能，或者分享一些网络爬虫在实际项目中的应用经验，让读者们能够更好地学以致用。期待您的更多精彩文章！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第20篇博客！网络爬虫—照片管道这个话题很有趣，希望您能继续保持创作的热情和努力。接下来，或许可以尝试探讨网络爬虫在其他领域的应用，或者深挖照片管道的技术细节，让读者更加深入地了解这个话题。期待您更多精彩的作品！祝您创作顺利。\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "pyinstaller -F -i tubiao.ico main.py -n 接小球游戏 --noconsole在cmd里运行exe会显示错误代码，然后要缺少什么模块安装什么模块是在python导包的时候，将包的全部函数打包成exe了，这里需要更改导包方式，例如将import sys改为from sys import exit将代码里所有涉及到素材的文件都改成绝对路径（针对本台电脑）将素材换成相对路径，并将所有素材和exe放到一个文件夹下（针对移植exe）将图片转成游戏需要的ico格式需要移动一下生成的exe文件在main.spec增加一个列表，里面填上素材的路径，然后在cmd框中输入pyinstaller -F main.spec自我介绍一下，小编13年上海交大毕业，曾经在小公司待过，也去过华为、OPPO等大厂，18年进入阿里一直到现在。深知大多数Python工程师，想要提升技能，往往是自己摸索成长或者是报班学习，但对于培训机构动则几千的学费，着实压力不小。自己不成体系的自学效果低效又漫长，而且极易碰到天花板技术停滞不前！因此收集整理了一份《2024年Python开发全套学习资料》，初衷也很简单，就是希望能够帮助到想自学提升又不知道该从何学起的朋友，同时减轻大家的负担。      既有适合小白学习的零基础资料，也有适合3年以上经验的小伙伴深入学习提升的进阶课程，基本涵盖了95%以上Python开发知识点，真正体系化！由于文件比较大，这里只是将部分目录大纲截图出来，每个节点里面都包含大厂面经、学习笔记、源码讲义、实战项目、讲解视频，并且后续会持续更新如果你觉得这些内容对你有帮助，可以添加V获取：vip1024c （备注Python） 一、Python所有方向的学习路线Python所有方向的技术点做的整理，形成各个领域的知识点汇总，它的用处就在于，你可以按照下面的知识点去找对应的学习资源，保证自己学得较为全面。 二、Python必备开发工具工具都帮大家整理好了，安装就可直接上手！三、最新Python学习笔记当我学到一定基础，有自己的理解能力的时候，会去阅读一些前辈整理的书籍或者手写的笔记资料，这些笔记详细记载了他们对一些技术点的理解，这些理解是比较独到，可以学到不一样的思路。四、Python视频合集观看全面零基础学习视频，看视频学习是最快捷也是最有效果的方式，跟着视频中老师的思路，从基础到深入，还是很容易入门的。五、实战案例纸上得来终觉浅，要学会跟着视频一起敲，要动手实操，才能将自己的所学运用到实际当中去，这时候可以搞点实战案例来学习。六、面试宝典一个人可以走的很快，但一群人才能走的更远。如果你从事以下工作或对以下感兴趣，欢迎戳这里加入程序员的圈子，让我们一起学习成长！AI人工智能、Android移动开发、AIGC大模型、C C#、Go语言、Java、Linux运维、云计算、MySQL、PMP、网络安全、Python爬虫、UE5、UI设计、Unity3D、Web前端开发、产品经理、车载开发、大数据、鸿蒙、计算机网络、嵌入式物联网、软件测试、数据结构与算法、音视频开发、Flutter、IOS开发、PHP开发、.NET、安卓逆向、云计算ux运维、云计算、MySQL、PMP、网络安全、Python爬虫、UE5、UI设计、Unity3D、Web前端开发、产品经理、车载开发、大数据、鸿蒙、计算机网络、嵌入式物联网、软件测试、数据结构与算法、音视频开发、Flutter、IOS开发、PHP开发、.NET、安卓逆向、云计算**\\n                    CSDN-Ada助手: \\n                    不知道 网络 技能树是否可以帮到你：https://edu.csdn.net/skill/network?utm_source=AI_act_network\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "Python是一门强大的编程语言，但在将Python代码分享给其他人时，让他们安装Python解释器并运行脚本可能有点繁琐。这时，将Python代码打包成可执行的应用程序（.exe）可以大大简化这个过程。本文将介绍几种常用的方法，轻松地将Python代码变成独立的可执行文件。将Python代码打包成可执行文件的好处有很多：PyInstaller是一个流行的Python代码打包工具，可以将Python脚本打包成可执行文件，支持Windows、macOS和Linux。要安装PyInstaller，可以使用pip：使用PyInstaller打包Python脚本非常简单。假设有一个名为my_script.py的Python脚本，只需打开终端并运行以下命令：PyInstaller将自动分析脚本的依赖项并生成一个dist文件夹，其中包含可执行文件。可以在dist文件夹中找到可执行文件。cx_Freeze是另一个用于将Python代码打包成可执行文件的工具，支持多个平台。安装cx_Freeze，使用pip：假设Python脚本是my_script.py，可以创建一个名为setup.py的配置文件，如下所示：然后，在终端中运行以下命令：这将在build文件夹中生成一个可执行文件。py2exe是一个用于将Python脚本打包成Windows可执行文件的工具。安装py2exe，使用pip：假设Python脚本是my_script.py，需要创建一个名为setup.py的配置文件：然后，在终端中运行以下命令：这将在dist文件夹中生成一个可执行文件。py2app是用于将Python脚本打包成macOS可执行文件的工具。安装py2app，使用pip：假设Python脚本是my_script.py，需要创建一个名为setup.py的配置文件：然后，在终端中运行以下命令：这将在dist文件夹中生成一个macOS可执行文件。Nuitka是一个用于将Python脚本编译成可执行文件的工具。它可以生成C或C++代码，并通过编译生成可执行文件。安装Nuitka，使用pip：假设Python脚本是my_script.py，可以使用以下命令将其编译为可执行文件：这将在生成的my_script.dist文件夹中包含可执行文件。选择哪种打包工具取决于你的需求和目标平台。如果需要支持多个平台，PyInstaller和cx_Freeze可能是不错的选择。如果主要面向Windows平台，py2exe是一个不错的选择。如果是macOS用户，py2app可能是最合适的工具。Nuitka则适用于那些希望将Python代码编译成机器码的开发者。将Python代码打包成可执行文件是一种使你的应用程序更易于分享和分发的方法。本文介绍了几种常用的打包工具，包括PyInstaller、cx_Freeze、py2exe、py2app和Nuitka，以及它们的安装和使用方法。选择合适的工具取决于需求和目标平台。无论是要分享你的应用程序还是创建独立的工具，这些工具都能轻松将Python代码转化为可执行文件。学好 Python 不论是就业还是做副业赚钱都不错，但要学会 Python 还是要有一个学习规划。最后给大家分享一份全套的 Python 学习资料，给那些想学习 Python 的小伙伴们一点帮助！包括：Python激活码+安装包、Python web开发，Python爬虫，Python数据分析，人工智能、自动化办公等学习教程。带你从零基础系统性的学好Python！Python所有方向路线就是把Python常用的技术点做整理，形成各个领域的知识点汇总，它的用处就在于，你可以按照上面的知识点去找对应的学习资源，保证自己学得较为全面。（全套教程文末领取）观看零基础学习视频，看视频学习是最快捷也是最有效果的方式，跟着视频中老师的思路，从基础到深入，还是很容易入门的。光学理论是没用的，要学会跟着一起敲，要动手实操，才能将自己的所学运用到实际当中去，这时候可以搞点实战案例来学习。我们学习Python必然是为了找到高薪的工作，下面这些面试题是来自阿里、腾讯、字节等一线互联网大厂最新的面试资料，并且有阿里大佬给出了权威的解答，刷完这一套面试资料相信大家都能找到满意的工作。学好 Python 不论是就业还是做副业赚钱都不错，但要学会兼职接单还是要有一个学习规划。👉 这份完整版的Python全套学习资料已经上传，朋友们如果需要可以扫描下方CSDN官方认证二维码免费领取【保证100%免费】​\\n                    2401_83175218: \\n                    你好   我被一个网站骗了钱   能帮我追回来吗\\n                \\n                    m0_71044637: \\n                    求完整代码\\n                \\n                    盘古秀: \\n                    你好，搭建一个kali跳板，您收多少钱？\\n                \\n                    一个梵人: \\n                    jieba已经三年没有更新了，有没有一些新的分词工具呢\\n                \\n                    烈焰恋上冰: \\n                    python很垃圾，版本问题封装到吐血，主要是不想大改模型；装了4个版本才搞定\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。"
        ]
    },
    {
        "prompt": "请使用python编写一个mysql操作类。要求将所有sql语句包装为函数，链式传递。",
        "doc": [
            "前些天发现了一个巨牛的人工智能学习网站，通俗易懂，风趣幽默，忍不住分享一下给大家。【点击进入巨牛的人工智能学习网站】。在Python中，我们经常需要与各种数据库进行交互，其中MySQL和SQL Server是两个常见的选择。本文将介绍如何使用pymysql和pymssql库进行基本的数据库操作，并通过实际代码示例来展示这些操作。在开始之前，首先需要安装pymysql和pymssql库。你可以使用以下命令进行安装：下面是一个简单的示例，演示如何插入数据到MySQL数据库：以下是一个演示如何使用pymssql更新SQL Server数据库中的数据的示例：通过这些简单的代码示例，你可以开始在Python中使用pymysql和pymssql库执行基本的数据库操作。根据实际需求，你可以进一步学习高级用法和优化技巧。使用pymysql和pymssql进行查询并处理结果也是常见的操作，以下是一个示例：在实际应用中，异常处理是至关重要的。以下是一个简单的异常处理的示例：参数化查询是防止SQL注入攻击的一种重要方法。以下是一个使用参数化查询的实例：使用上下文管理器可以确保在操作完成后及时关闭数据库连接，以下是一个使用with语句的实例：如果需要插入大量数据，最好使用批量插入以提高性能。以下是一个简单的批量插入示例：通过这些实战示例，你可以更深入地了解如何在Python中使用pymysql和pymssql库进行数据库操作，包括使用参数化查询、上下文管理器以及批量插入等高级用法。这些技术将帮助你更有效地处理数据库交互，并确保代码的性能和安全性。除了直接使用数据库连接库，你还可以考虑使用ORM（对象关系映射）框架来简化数据库操作。这里以SQLAlchemy为例进行示范：首先，确保已经安装SQLAlchemy：然后，以下是一个使用SQLAlchemy进行简单查询的实例：事务是数据库操作中的重要概念，用于确保一组相关操作要么全部成功，要么全部失败。以下是一个简单的事务处理实例：在这个示例中，如果执行的所有SQL语句成功，commit()将提交事务，否则rollback()将回滚事务。这有助于保持数据的一致性。在高并发环境中，使用数据库连接池能够有效地管理和复用数据库连接，提高性能和效率。以下是一个使用pymysql连接池的实例：首先，确保已经安装DBUtils库：然后，使用连接池的代码示例：连接池的使用可以显著提高数据库连接的效率，尤其在并发访问高的情况下。在本篇文章中，我们深入探讨了在Python中使用pymysql和pymssql库进行MySQL和SQL Server数据库操作的基础与实战。通过一系列的代码示例，我们覆盖了以下关键方面：基础操作： 介绍了连接数据库、查询数据、插入、更新、异常处理等基本操作，通过简单的代码展示了如何使用pymysql和pymssql库完成这些任务。高级用法： 涵盖了参数化查询、上下文管理器、批量插入等高级用法，以及使用ORM框架SQLAlchemy进行数据库操作的实例。这些技术有助于提高代码的安全性、可读性和可维护性。事务处理： 介绍了如何使用事务处理来确保一系列数据库操作的原子性，以维护数据的一致性。连接池： 讲解了连接池的概念以及如何使用DBUtils库中的PooledDB创建连接池，以提高数据库连接的效率和性能。实际应用： 提供了多个实际场景下的代码示例，包括查询、更新、事务处理和连接池的应用，帮助读者更好地理解和应用所学知识。通过学习本文所涵盖的内容，读者可以建立起对Python中操作MySQL和SQL Server数据库的全面理解，并掌握一系列实用的技术，从而更加自信地应对各种数据库交互场景。在实际项目中，选择适合自身需求的技术和工具，并根据最佳实践进行优化，将有助于提高应用程序的性能、可靠性和安全性。希望本文能成为读者学习和应用数据库操作的有力指南。\\n        \\n    \\n                    青花锁: \\n                    High quality and excellent article, and details are well done, balancing practicality and operability, supporting the blogger.\\n                \\n                    雪碧有白泡泡: \\n                    非常喜欢这篇博客！博主的写作风格简洁明了，让人一目了然。文章内容丰富，涵盖了很多实用的知识点，对我来说非常有帮助。尤其是博主在文章中提供了很多实际操作的步骤和技巧，让我能够更好地应用所学的知识。同时，博主的配图也很精美，更加生动地展示了文章中的内容。总之，非常感谢博主的分享，期待博主能够继续输出这样优质的好文。\\n                \\n                    猫头虎: \\n                    🐅🖥️ 作者的写作风格清晰流畅，即便是复杂的概念也被浅显易懂地解释了。这种高质量的内容是难得一见的宝藏！\\n                \\n                    danci_bto: \\n                    这篇文章对于某个主题做出了深入的探讨，但我认为在一些关键点上还可以提供更多的支持性证据或案例，以增强文章的可信度和说服力。此外，对于某些概念的定义可以更加明确一些，以便读者更好地理解文章的核心观点。\\n                \\n                    程序员何未来: \\n                    优质好文，博主的文章细节很到位，兼顾实用性和可操作性，感谢博主的分享，期待博主持续带来更多好文！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者一键难忘你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "外键约束:对外键字段的值进行更新和插入时会和引用表中字段的数据进行验证，数据如果不合法则更新和插入会失败，保证数据的有效性– 创建 “京东” 数据库create database jing_dong charset=utf8;– 使用 “京东” 数据库use jing_dong;– 创建一个商品goods数据表create table goods(id int unsigned primary key auto_increment not null,name varchar(150) not null,cate_name varchar(40) not null,brand_name varchar(40) not null,price decimal(10,3) not null default 0,is_show bit not null default 1,is_saleoff bit not null default 0);– 向goods表中插入数据insert into goods values(0,‘r510vc 15.6英寸笔记本’,‘笔记本’,‘华硕’,‘3399’,default,default);insert into goods values(0,‘y400n 14.0英寸笔记本电脑’,‘笔记本’,‘联想’,‘4999’,default,default);insert into goods values(0,‘g150th 15.6英寸游戏本’,‘游戏本’,‘雷神’,‘8499’,default,default);insert into goods values(0,‘x550cc 15.6英寸笔记本’,‘笔记本’,‘华硕’,‘2799’,default,default);insert into goods values(0,‘x240 超极本’,‘超级本’,‘联想’,‘4880’,default,default);insert into goods values(0,‘u330p 13.3英寸超极本’,‘超级本’,‘联想’,‘4299’,default,default);insert into goods values(0,‘svp13226scb 触控超极本’,‘超级本’,‘索尼’,‘7999’,default,default);insert into goods values(0,‘ipad mini 7.9英寸平板电脑’,‘平板电脑’,‘苹果’,‘1998’,default,default);insert into goods values(0,‘ipad air 9.7英寸平板电脑’,‘平板电脑’,‘苹果’,‘3388’,default,default);insert into goods values(0,‘ipad mini 配备 retina 显示屏’,‘平板电脑’,‘苹果’,‘2788’,default,default);insert into goods values(0,'ideacentre c340 20英寸一体电脑 ',‘台式机’,‘联想’,‘3499’,default,default);insert into goods values(0,‘vostro 3800-r1206 台式电脑’,‘台式机’,‘戴尔’,‘2899’,default,default);insert into goods values(0,‘imac me086ch/a 21.5英寸一体电脑’,‘台式机’,‘苹果’,‘9188’,default,default);insert into goods values(0,‘at7-7414lp 台式电脑 linux ）’,‘台式机’,‘宏碁’,‘3699’,default,default);insert into goods values(0,‘z220sff f4f06pa工作站’,‘服务器/工作站’,‘惠普’,‘4288’,default,default);insert into goods values(0,‘poweredge ii服务器’,‘服务器/工作站’,‘戴尔’,‘5388’,default,default);insert into goods values(0,‘mac pro专业级台式电脑’,‘服务器/工作站’,‘苹果’,‘28888’,default,default);insert into goods values(0,‘hmz-t3w 头戴显示设备’,‘笔记本配件’,‘索尼’,‘6999’,default,default);insert into goods values(0,‘商务双肩背包’,‘笔记本配件’,‘索尼’,‘99’,default,default);insert into goods values(0,‘x3250 m4机架式服务器’,‘服务器/工作站’,‘ibm’,‘6888’,default,default);insert into goods values(0,‘商务双肩背包’,‘笔记本配件’,‘索尼’,‘99’,default,default);三、MySQL数据库的高级使用想要完成表复制可以使用: insert into … select … SQL语句连接更新表中数据使用: update … join … 语句创建表并给字段插入数据使用: create table … select 语句事务演练的SQL语句:begin;insert into students(name) values(‘李白’);– 查询数据，此时有新增的数据, 注意: 如果这里后续没有执行提交事务操作，那么数据是没有真正的更新到物理表中select * from students;– 只有这里提交事务，才把数据真正插入到物理表中commit;– 新打开一个终端，重新连接MySQL数据库，查询students表,这时没有显示新增的数据，说明之前的事务没有提交，这就是事务的隔离性– 一个事务所做的修改操作在提交事务之前，对于其他事务来说是不可见的select * from students;from pymysql import connectdef main():conn = connect(host=‘localhost’,port=3306,database=‘python’,user=‘root’,password=‘mysql’,charset=‘utf8’)cursor = conn.cursor()for i in range(100000):cursor.execute(“insert into test_index values(‘ha-%d’)” % i)conn.commit()if name == “main”:main()pymysql完成数据的查询操作import pymysqlconn = pymysql.connect(host=‘localhost’, port=3306, user=‘root’, password=‘mysql’,database=‘python’, charset=‘utf8’)cursor = conn.cursor()sql = “select * from students;”row_count = cursor.execute(sql)print(“SQL 语句执行影响的行数%d” % row_count)for line in cursor.fetchall():print(line)cursor.close()conn.close()pymysql完成对数据的增删改import pymysqlconn = pymysql.connect(host=‘localhost’, port=3306, user=‘root’, password=‘mysql’,database=‘python’, charset=‘utf8’)cursor = conn.cursor()try:sql = “update students set name = ‘王铁蛋’ where id = 6;”row_count = cursor.execute(sql)print(“SQL 语句执行影响的行数%d” % row_count)conn.commit()except Exception as e:conn.rollback()cursor.close()conn.close()from pymysql import connectdef main():find_name = input(“请输入物品名称：”)conn = connect(host=‘localhost’,port=3306,user=‘root’,password=‘mysql’,database=‘jing_dong’,charset=‘utf8’)cs1 = conn.cursor()params = [find_name]count = cs1.execute(“select * from goods where name=%s”, params)自我介绍一下，小编13年上海交大毕业，曾经在小公司待过，也去过华为、OPPO等大厂，18年进入阿里一直到现在。深知大多数Java工程师，想要提升技能，往往是自己摸索成长或者是报班学习，但对于培训机构动则几千的学费，着实压力不小。自己不成体系的自学效果低效又漫长，而且极易碰到天花板技术停滞不前！因此收集整理了一份《2024年Java开发全套学习资料》，初衷也很简单，就是希望能够帮助到想自学提升又不知道该从何学起的朋友，同时减轻大家的负担。既有适合小白学习的零基础资料，也有适合3年以上经验的小伙伴深入学习提升的进阶课程，基本涵盖了95%以上Java开发知识点，真正体系化！由于文件比较大，这里只是将部分目录截图出来，每个节点里面都包含大厂面经、学习笔记、源码讲义、实战项目、讲解视频，并且会持续更新！如果你觉得这些内容对你有帮助，可以扫码获取！！（备注Java获取）针对以上面试题，小编已经把面试题+答案整理好了除了以上面试题+答案，小编同时还整理了微服务相关的实战文档也可以分享给大家学习 《一线大厂Java面试题解析+核心总结学习笔记+最新讲解视频+实战项目源码》，点击传送门即可获取！ 比较大，这里只是将部分目录截图出来，每个节点里面都包含大厂面经、学习笔记、源码讲义、实战项目、讲解视频，并且会持续更新！**如果你觉得这些内容对你有帮助，可以扫码获取！！（备注Java获取）针对以上面试题，小编已经把面试题+答案整理好了[外链图片转存中…(img-VqtlgzCT-1712183992922)][外链图片转存中…(img-bGaY1JZu-1712183992922)][外链图片转存中…(img-2zxm6TvK-1712183992922)][外链图片转存中…(img-jmCYwNw5-1712183992922)]除了以上面试题+答案，小编同时还整理了微服务相关的实战文档也可以分享给大家学习[外链图片转存中…(img-iOBEvvoy-1712183992922)][外链图片转存中…(img-5LBsqyqO-1712183992923)][外链图片转存中…(img-1rHLLjvZ-1712183992923)] 《一线大厂Java面试题解析+核心总结学习笔记+最新讲解视频+实战项目源码》，点击传送门即可获取！请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "  ③、此时数据表就新建成功了开始编写python代码 步骤： 1、导入所需库 2、从Excel表中读取所有数据 3、将数据取出来存放到列表 4、连接MySQL数据库 5、根据数据拼接sql语句，执行语句，此处的data为一条数据，想要取得第一列的内容例如学号，那就是索引0，姓名就是索引1，以此类推 6、提交事务、插入完成7、查看数据库 方式一：Navicat for MySQL 方式二：cmd  代码总和（抄作业的同学可以直接跳转）  注意事项 1、尽量在MySQL数据表中字段使用VARCHAR类型，也就是字符串、文本类型，以防止插入数据时报错。如果必须使用其他类型例如数字类型，那么在拼接sql语句的时候一定要注意符号，防止因为插入数据类型不对而报错。 \\n                    CSDN-Ada助手: \\n                    MySQL入门 技能树或许可以帮到你：https://edu.csdn.net/skill/mysql?utm_source=AI_act_mysql\\n                \\n                    Q3493620082: \\n                    pygame.mouse.set_visible(False)隐藏鼠标，然后用一张图像代替持续绘制在鼠标位置上就能实现更换鼠标图标效果了\\n                \\n                    Q3493620082: \\n                    最新一个方法，将鼠标隐藏，使用一张图像(surface图像)代替，就能实现任意鼠标效果了\\n                \\n                    aa1289152907: \\n                    感谢 感谢 卡我几天呢\\n                \\n                    Q3493620082: \\n                    谢谢\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            ""
        ]
    },
    {
        "prompt": "vue3根据条件来禁用el-link",
        "doc": [
            "效果index.vuedata.json\\n        \\n    \\n                    AIanyang: \\n                    http-server支持单页面吗，单页面应用一刷新就报页面找不到\\n                \\n                    Linuxerrrr: \\n                    请问一下，value:100这个值的作用是干什么的\\n                \\n                    viceen: \\n                    确实挺好用\\n                \\n                    nishiwangbaduzi: \\n                    打点 画线面的 用GIS土豆就挺好 https://gistodo.com\\n                \\n                    不想敲代码12138: \\n                    获取后台接口数据版页面是js吗还是wxml\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "目录1、法一：通过defineEmits调用父组件方法1.1、父组件1.2、子组件（CONTENT）2、法二：通过difineExpose暴露子组件属性2.1、父组件2.2、子组件（C\\n                    CSDN-Ada助手: \\n                    恭喜您撰写了第15篇博客！您对封装vue3+el-table表格数据请求函数的讲解非常详细，让读者受益匪浅。希望您能继续保持创作的热情，不断分享更多有价值的技术内容。下一步建议可以尝试分享一些实战经验或者案例分析，让读者更深入地了解您的技术思路和应用场景。期待您更多精彩的作品！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜博主第13篇博客发布成功！Maven打包生成MD5校验文件的两种方式，内容十分实用。希望博主能够继续分享更多关于Maven打包的经验和技巧，也可以考虑结合实际案例进行分析，让读者更加深入地理解和运用这些技术。期待博主的下一篇作品！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第12篇博客！标题看起来很有趣，对于解决request中getReader()和getInputStream()只能调用一次的问题，我觉得这个问题确实很棘手。不过，您的博客肯定能够给很多人带来帮助。希望您能继续保持创作的激情，也许下一步可以考虑分享一些实际案例或者应用场景，让读者更容易理解和应用您的知识。期待您的下一篇作品！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜你写了第11篇博客！看到你分享了关于vue3中使用el-dialog展示与关闭交由父组件控制的写法，感觉收获满满。希望你能继续保持创作的热情，不断分享更多关于vue3的使用技巧和经验，也可以考虑写一些实际项目中的应用案例，让读者更好地理解和运用。加油！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜恭喜！看到你在第9篇博客中分享了关于vue3中动态组件使用el-icon的内容，真是让人感到振奋。不过我觉得你下一步可以考虑加入一些实际案例或者应用场景，让读者更容易理解和运用你所分享的知识。希望你能继续保持创作的热情，期待你更多精彩的内容！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者火鸡nobug你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "首先如图效果  对elementUI中table表格的多选框进行 可勾选 和 不可勾选 的处理 给 type 属性为 selection 的加一个事件:selectable='selected’methods中：判断后台给返回的状态码 这个是直接写在里面了不用再额外调用方法了\\n        \\n    \\n                    fordZrx: \\n                    可以在加一个\\n.hiderow .el-table__expand-column .el-table__expand-icon {\\n  height: 0px!important;\\n}\\n展开事件也不会被触发\\n                \\n                    奋斗的小鸟鸟: \\n                    要是回显不再修改就直接循环显示汉字就好了，如果回显还要显示就让后端返回value对应显示就是了，但是也要循环\\n                \\n                    yuwei_: \\n                    你好。二级菜单联动后回显怎么实现？谢谢\\n                \\n                    奋斗的小鸟鸟: \\n                    我才看到留言，最近比较忙。如果你想要用这个就要按照这个数据格式来写\\n                \\n                    weixin_57910254: \\n                    您好，就是数据格式是data:[{subject1],[subject2]],需要怎么改？我直接命名了两个数组在一个接口里获取怎么不行？\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者奋斗的小鸟鸟你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "前面我们已经用 vue2 和 react 做过开发了。从 vue2 升级到 vue3 成本较大，特别是较大的项目。所以许多公司对旧项目继续使用vue2，新项目则使用 vue3。有些UI框架，比如ant design vue1.x 使用的 vue2。但现在 ant design vue4.x 都是基于 vue3，示例默认是 TypeScript。比如 table 组件管理。另外 vue3 官网介绍也使用了 TypeScript，例如：响应式 API：核心本篇主要介绍：vite 创建vue3项目、组合式api、响应式数据、计算属性、监听、ref、ts、生命周期、自定义hooks。Vue.js 3.0，代号海贼王，于2020年9月18日发布 —— v3.0.0 海贼王主要有如下改进：前面我们用 vue-cli 创建过 vue2 的项目，用其构建 vue3 也类似，差别就是选择 vue3 版本。最后生成的项目结构如下：\\nVue CLI 是官方提供的基于 Webpack 的 Vue 工具链，它现在处于维护模式。我们建议使用 Vite 开始新的项目，除非你依赖特定的 Webpack 的特性。在大多数情况下，Vite 将提供更优秀的开发体验 —— 官网 - 项目脚手架另一种方式是使用 vite。有如下优势：Tip:笔者首先使用 npm create vite@latest 创建项目，自己根据需要选择对应预设（比如要 TypeScript or javascript），创建完成后根据提示进入项目，安装依赖，本地启动：结果报错：说是 node 版本可能低了。Tip: Vite 需要 Node.js 版本 14.18+，16+。然而，有些模板需要依赖更高的 Node 版本才能正常运行，当你的包管理器发出警告时，请注意升级你的 Node 版本 —— vite 官网-搭建第一个 Vite 项目于是使用 nvm 安装 18.16.0。步骤如下：根据提示切换到 18.16.0使用 npm create vue@latest 创建 vue3 项目 —— vue3 官网 创建一个 Vue 应用(这里提到 node 需要18+)：根据提示按照依赖，本地启动项目成功：npm create vite@latest 和 npm create vue@latest 作用和用途不同，两者效果也不同，总的来说前者创建 Vite 项目，而 npm create vue@latest 是用来创建 Vue.js 项目。vite 本地启动非常快。真正按需编译，不在等待整个应用编译完成。用 webpack 本地启动服务器，需要经历如下几步：entry->route->module->bundle->服务器启动（下图左）；而用 vite 启动服务器，服务器启动却从末尾移到开头（下图右）\\n有点像懒加载，你需要访问哪个路由，就加载哪个，非常快速。前面我们用 vite 创建了 hello_vue3 项目。目录结构如下：\\n我们先说其他文件，最后在分析src文件夹内容如下：推荐你安装这两个插件，当你用 vscode 启动项目，点击切换到其他文件上，vscode 右下角就会提示你是否安装这两个插件。就像这样：这两个是vue官方给 vscode 提供的插件：内容如下：是一个在 Vue.js 项目中使用 Vite 构建工具时引入的指令，它的作用是让 TypeScript 编译器能够识别并利用 Vite 客户端类型声明文件提供的类型信息，以提供更好的智能编码功能和类型检查支持。Tip：如果你删除 node_modules 文件夹，你在vscode 中会发现 vite/client 下有红色波浪线。TypeScript 主要用于处理 JavaScript 代码，并且在处理模块时，它会关注 .ts、.tsx、.js 和 .jsx 这些与 JavaScript 相关的文件类型。TypeScript 默认情况下并不会识别或处理像 .txt、.gif 这样的非 TypeScript 文件类型。这个文件的作用就是让 ts 认识 txt、jpg、gif等。比如你在src 下新建 a.txt、b.ts，然后在 b.ts 中编写：当你清空 env.d.ts，你会发现 import a from 'a.txt'中 a.txt 下有红色波浪线。再次还原 env.d.ts 则好了。通过 ctrl + 鼠标点击进入 vite/client，你会发现 vue 给我们声明好了我们需要使用的其他类型文件。比如 txt:index.html 这就是我们的入口文件。内容如下：你可以尝试改成无需重启服务，页面就显示 a。vite.config.ts 项目配置文件。比如代理、安装插件public/favicon.ico 页签图标package.json、package-lock.jsonsrc 就是我们编码的地方。我们先将 src 中的文件都删除，我们自己重新创建。创建 main.ts 和 App.vue 两个文件。内容如下：浏览器访问，页面显示 你好 vue3。前面我们说到 vite 启动后，服务器就已就绪。然后会根据用户请求哪里，就会给你加载哪里。有些项目使用了 vue3，但写法还是 vue2 —— 不建议这么做。为了证明 vue3 中能写 vue2，笔者在 vue3 项目中写一个 vue2 示例。请看代码：浏览器显示：Vue 2 使用的是选项式 API，而 Vue 3 引入了组合式 API虽然 Vue 3 推荐使用组合式 API，但它仍然完全支持 Vue 2 的选项式 API，以保持向下兼容性。所以在 Vue 3 中，你可以自由选择使用选项式 API 或组合式 API 来编写你的组件逻辑。选项式API有一个缺点：新增一个功能，需要分别在 data、methods、computed、watch等选项中修改代码，如果代码上千，修改或抽取封装这部分功能，有困难。Tip：我们用 大帅老猿 的图说明以下这个问题而组合式 api 可以简化这个问题，我们可以感受下（代码如何实现暂时不用管）：Tip: 具体如何拆分，请看本篇最后自定义 hooks章节。setup 函数是组合式 API 的入口，用于组合组件的逻辑和功能。首先我们用 vue2 语法写一个示例：展示名字和日期，点击按钮能改变日期。代码如下：现在我们把 data 和 methods 两个配置去除，改成 setup 就完成了 vue3 示例的重构setup 是一个方法，平时如何定义变量和方法，这里就怎么写，最后将方法和变量都交出去。这里其实还有一个问题，点击 button 日期在界面没变，但方法却执行了。这是因为 date 变量不是响应式的。Tip：现在我们先说 setup，后面在将响应式的东西。这里要修复可以使用 ref(这个 ref 和 vue2 中指向元素或组件的ref，不是同一个东西)：另外 setup 中的 this 是undefined，vue3 开始弱化 this。最后说一下 setup 执行时机，比 beforeCreat 还早:先输出 2 再输出 1。setup 返回值也可以是一个函数，比如这个：页面就会显示hello vue3，模板是什么都不重要了，直接根据这个函数返回值渲染这种用法不多，常用的还是返回对象。请看示例：属性 age和方法 sayAge 都能正常使用。data 能够读取 setup 中的属性。请看示例：setup 是最早的生命周期（将vue2 中beforeCreat、created合并），这里证明 data 中可以取得 setup 中的数据。就像 vue2 中 data 可以读取 props 中的数据，因为 props 比 data 先初始化 —— initstate 初始化状态。在 setup 中无法使用 data 中的数据。请看示例，直接报错：每次都得写 setup()，还需要将方法或属性交出去，能否只写属性和方法，自动交出去？有的。将 setup() 专门提取出去。就像这样：方式一还是需要写l了两个 <script>，其中一个专门用于定义组件名。不想写两个 <script>，可以利用插件 vite-plugin-vue-setup-extend。先安装：修改 vite.config.ts 配置文件：最后应用：vue2 中放在 data 中的数据都是响应式的，在vue3 中可以通过 ref和reactive 两种方式来处理响应式。通过 vue devtools，我们知道数据为尊，因为方法放在后面（除了方法，其他的也会放在这里），而数据放在前面。想让哪个数据是响应式的，就将数据用 ref 包裹一下。注：这里的 ref 和 vue2 中 ref 不是一个东西用法请看示例（和注释）：变量用ref包裹后，类型变成 RefImpl。需要通过 .value 来访问和修改实际的值。Tip：越过 .value 直接整体替换是不可以的，就像这样：注：模板中不需要 .value有点像 proxy 的感觉：Tip：Proxy 是 ES6 引入的一个特性，它允许你创建一个代理对象，可以用来拦截并自定义目标对象的基本操作，比如属性查找、赋值、删除等利用 reactive 将对象转成响应式，重写上述示例：经过 reactive 封装后的对象类型变成 Proxy。专业术语叫响应式对象reactive 同样可以处理数组（数组也是对象），请看示例：对深层次对象也同样起作用。请看示例：不能定义基本类型，比如将字符串转成响应式，vscode 和浏览器控制台报错如下：直接看示例，我们将 reactive 示例中的 reactive 换成  ref，修改值时加 .value 即可，模板不用动。能显示，能修改，一切正常。虽然 ref 能处理基本类型和对象，但是遇到对象，实际上是摇人了。请看示例：查看 person 对象的 value 属性，发现了 Proxy(Object)，所以本质上是 reactive 处理了对象宏观：写代码时还得记着是 ref 类型，需要增加 .value，好麻烦。可以使用 vscode 插件：vscode 直接安装 Vue - Official（vscode 提示 TypeScript Vue Plugin (Volar) 已弃用，使用 Vue - Official 替代）通过 vscode 设置，勾选 Auto-complete Ref value with .value，并设置 Applies to all profiles\\n重启后，只要输入 ref 变量，则会自动添加 .value，非常方便。reactive 重新分配一个对象，会失去响应式（可使用 Object.assign 整体替换）。请看示例：Tip: Object.assign() 静态方法将一个或者多个源对象中所有可枚举的自有属性复制到目标对象，并返回修改后的目标对象。如果是 ref，直接替换即可。就像这样由于这些限制，我们建议使用 ref() 作为声明响应式状态的主要 API —— 官网 - reactive 局限性笔者习惯：将一个响应式对象转换为一个普通对象，这个普通对象的每个属性都是指向源对象相应属性的 ref。每个单独的 ref 都是使用 toRef() 创建的。不明白请看下面代码。比如这段代码：我从响应式对象中解构出 age，然后通过方法修改 age 的值，发现页面没更新：这是因为解构出的 age 不在是响应式。可以使用 toRefs，就像这样：说 toRef 用的较少。比如层级比较深的场景，请看示例：作用和vue2相同，先回忆下 vue2 中的计算属性。写法如下：改成 vue3 需要使用  computed 方法。就像这样：请看示例：Tip：和 vue2 中类似，set很少用。不多介绍，用法大致如下：vue3 中 watch 作用应该和 vue2 中相同，先回忆下vue2 中 watch 写法。就像这样：vue3 中说 watch 只能监视4种数据：Tip: vue2 watch 中有deep、immediate、unwatch，下文 vue3 中 watch 也都有。请看示例：核心语法：比如用 ref 定义一个对象，里面有两个按钮，一个只改变“年龄”，一个改变整个 ref 对象。就像这样：只有改变整个对象时 watch 中的方法才会执行，而改变ref对象中的属性，watch 方法却不会执行。加上一个配置项，这样改变整个对象，以及改变ref对象中的属性，watch 中的方法都会执行。其实还有一个属性 immediate，初始时就会执行 watch 中的方法。就像这样：核心语法：完整示例：前面我们监视的都是整个对象，比如现在要监视对象中的某个属性。这里分为基本类型和对象类型。就以 reactive 对象为例，直接将监视源改为 person.name vscode 就会出现红色波浪线：运行后在浏览器控制台中报错更明显：现在 person.name 不属于上述4种类型。将 person.name 改成 getter。代码如下：Tip：getter 一个函数，返回一个值 —— vue3 watch这样修改 age 时不会触发 watch，只有 name 改变时才会触发 watch。这里给 person 定义了一个 jineng 的对象属性，并定义两个按钮，一个会改变 jineng 的属性，一个改变整个技能。代码如下：首先我们这么写，发现只能监听 jineng 里面的属性改变：Tip：通过打印我们知道 person.jineng 类型是Proxy，也就是 reactive 类型，根据前文我们知道 reactive 默认开启深度监视，而且不能整个替换，之前用的都是 Object.assign，这里用的是 person.jineng = {a: 'a吃饭', b:'a睡觉'}。改成 getter 发现只能监听替换整个 jineng：在 getter 基础上增加 {deep: tree} 则都能监视到：Tip：将上述示例从 reactive 改成 ref，watch 监视方式还是不变。请看代码：核心语法：前面几种学完了，监视多个就是赠送。请看示例：用的较多的有：核心语法：比如我需要在”温度“和”高度“大于20的时候发出请求，用 watch 可以这么实现：可以直接替换成 watchEffect（变量直接用就好，框架会自动帮你监视），效果和上述例子相同，但代码量少一些。Tip：笔者最初测试 watchEffect 时遇到了问题。笔者认为每次修改 watchEffect 监视的变量应该都会执行，如果条件有满足的就应该触发，但没有。后来用 watch 重写后发现 watchEffect 又符合期望。可能是本地环境出了点问题。vue2 中 ref 可以作用于普通dom元素，也可以作用于vue 组件。vue3 中也是这样。请看示例：点击按钮，将打印 p 元素。下面我们定义个组件 Dog.vue，然后在 App.vue 引入。请看示例：在 Dog 中定义了两个变量，通过 defineExpose 将 a 交出去：Tip: defineExpose 是一个用于在组合式 API 中将组件的属性或方法暴露给父组件的函数。它可以让父组件直接访问子组件内部的属性和方法。App.vue 中直接引入Dog，无需注册即可使用，然后用 ref 指向 Dog，点击按钮则能通过 ref 访问 Dog 暴露出的变量：Tip: 这里的 ref 用法和 react 中的 create Ref 用法很像。Tip：若不熟悉 ts，可以参考：前端 Typescript 入门新建 ts 文件，定义两个类型：App.vue 引用 ts 类型：Tip：由于 Person 是一个规范，所以引入时需要增加 type，告诉自己这是一个规范。笔者中间报错：文件 \\\"...../src/types/index.ts\\\" 不在项目 \\\"...../tsconfig.app.json\\\" 的文件列表中。项目必须列出所有文件，或使用 \\\"include\\\" 模式。其实不用到 tsconfig.app.js 中修改 include 属性值。注：将类型用于 reactive，可使用如下泛型形式：父组件通过 props 给子组件传递数据，而通过事件给子组件传递方法。首先回顾下 vue2 props父组件传递两个属性：子组件通过 defineProps 接收(较vue2 中更灵活)，可以直接在模板中使用：有两点：传递一个对象给子组件，核心代码如下：vue3官网针对 ts 写法介绍如下：请看示例：注：defineExpose、defineProps 不需要引入。defineXXx 是宏函数，在vue3 中无需引入（笔者自测通过）。创建、挂载、更新、销毁4个阶段，8个钩子：创建阶段：\\nbeforeCreate: 在实例初始化之后，数据观测 (data observer) 和 event/watcher 事件配置之前被调用。\\ncreated: 实例已经创建完成之后被调用。在这一步，实例已经完成了数据观测、属性和方法的运算，但是尚未开始挂载到页面上。挂载阶段：\\nbeforeMount: 在挂载开始之前被调用：相关的 render 函数首次被调用。\\nmounted: el 被新创建的 vm.$el 替换，并挂载到实例上去之后调用该钩子。更新阶段：\\nbeforeUpdate: 数据更新时调用，发生在虚拟 DOM 重新渲染和打补丁之前。可以在该钩子中进一步地更改状态，不会触发附加的重渲染过程。\\nupdated: 由于数据更改导致的虚拟 DOM 重新渲染和打补丁后调用。销毁阶段：\\nbeforeDestroy: 在实例销毁之前调用。实例仍然完全可用。\\ndestroyed: 在实例销毁之后调用。该钩子被调用时，Vue 实例的所有指令都被解绑定，所有事件监听器被移除，所有子实例也被销毁。和 vue2 类似，4个阶段，8个钩子，但稍微有差异：Tip：这只是最基本的生命周期钩子，比如路由也会有，现学现查即可。请看示例：点击“change count”更新子组件，点击“toggle show”会销毁或创建子组件。控制台输出：在上述示例中，我们给父组件也增加对应的生命周期，然后看一下生命周期钩子函数的顺序。页面初始时输出如下（和 vue2 中父元素、子元素的顺序一致，甚至和 react 中几乎相同）：点击“change count”，输出：子更新前 子更新后点击“toggle show”，输出（和笔者猜测相同）:在实际开发中，最常用的 Vue2 生命周期钩子函数通常是：vue3 中常用的和vue2 类似：onMounted、onUpdated、onBeforeUnmount。在 Vue 3 中，自定义 Hooks 是指开发者自己定义的可复用的 Hooks 函数，用于组件逻辑的封装和复用。前面我们说到 vue3 的组合式Api，比如下面这个 vue 包含两部分的功能，我们利用 hooks 将其拆分：使用 hooks 将变成如下样子：这样运行后效果和改动之前完全相同。Tip：自定义 Hooks 函数本身不能直接包含模板代码，因为 Hooks 函数主要用于组件逻辑的封装和复用，并不包含视图逻辑。相似：组件逻辑的封装和复用不同：vue-devtools是一款基于chrome游览器的插件,可以用于调试vue应用有两种方法安装，一种是有条件，直接通过 chrome 应用商店搜索 vue 安装没有条件的，可以访问 极简插件，搜索，下载，解压后，打开 chrome 开发者模式，拖拽到扩展插件在使用 vscode 编写 vue 模板时，有时会遇到输入一个花括号 {，结果出现三个花括号 { }}，还得手动删除一个，非常烦人。解决办法：打开设置 -> 搜索Closing Brackets -> 找到 Auto Closing Brackets -> 将 aways 改成beforeWhitespace。请看下图"
        ]
    },
    {
        "prompt": "subdiv函数用法",
        "doc": [
            "#include <opencv2/imgproc.hpp>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.Subdiv2D point location cases Point location error. Point outside the subdivision bounding rect. Point inside some facet. Point coincides with one of the subdivision vertices. Point on some edge. Subdiv2D edge type navigation (see: getEdge()) creates an empty Subdiv2D object. To create a new empty Delaunay subdivision you need to use the initDelaunay function. This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.The function creates an empty Delaunay subdivision where 2D points can be added using the function insert() . All of the points to be added must be within the specified rectangle, otherwise a runtime error is raised. Returns the edge destination. Returns the edge origin. Finds the subdivision vertex closest to the given point. The function is another function that locates the input point within the subdivision. It finds the subdivision vertex that is the closest to the input point. It is not necessarily one of vertices of the facet containing the input point, though the facet (located using locate() ) is used as a starting point.Returns one of the edges related to the given edge. Returns a list of all edges. The function gives each edge as a 4 numbers vector, where each two are one of the edge vertices. i.e. org_x = v[0], org_y = v[1], dst_x = v[2], dst_y = v[3]. Returns a list of the leading edge ID connected to each triangle. The function gives one edge ID for each triangle. Returns a list of all triangles. The function gives each triangle as a 6 numbers vector, where each two are one of the triangle vertices. i.e. p1_x = v[0], p1_y = v[1], p2_x = v[2], p2_y = v[3], p3_x = v[4], p3_y = v[5]. Returns vertex location from vertex ID. Returns a list of all Voronoi facets. Creates a new empty Delaunay subdivision. Insert multiple points into a Delaunay triangulation. The function inserts a vector of points into a subdivision and modifies the subdivision topology appropriately. Insert a single point into a Delaunay triangulation. The function inserts a single point into a subdivision and modifies the subdivision topology appropriately. If a point with the same coordinates exists already, no new point is added. Returns the location of a point within a Delaunay triangulation. The function locates the input point within the subdivision and gives one of the triangle edges or vertices.Returns next edge around the edge origin. Returns another edge of the same quad-edge. Bottom right corner of the bounding rect. All of the edges. Top left corner of the bounding rect. All of the vertices. ",
            "该代码的功能是演示如何在图像中生成随机点集，并对这些点进行Delaunay三角剖分和Voronoi图的构建。它逐步显示了Delaunay三角剖分的构建过程，用户可以通过按任意键来停止过程。最后，它会显示最终的Voronoi图。这是计算几何和机器视觉中常用到的算法。\\n                \\n                  博客等级\\n                \\n                  \\n              \\n        \\n    \\n                    边岸189: \\n                    请问一下你这个有实物吗\\n                \\n                    m0_62320997: \\n                    降采样一下\\n                \\n                    lianzaozi: \\n                    您的微信公众号中ROBOT STUDIO二次开发。随笔写字，robot studio场景中机器人绘制这篇文章的代码有吗\\n                \\n                    盛夏不再花开: \\n                    帧率低应该怎么办\\n                \\n                    十年一梦实验室: \\n                    截图都有水印。同名“十年一梦实验室”\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "\\n            mob64ca14082604\\n            2024-04-01 19:32:24\\n                                \\n                            \\n                    文章标签\\n                                            opencv 绘制 四边形\\n                                            opencv\\n                                            三角剖分\\n                                            剖分\\n                                            点集\\n                                    \\n                                        \\n                    文章分类\\n                                                                        计算机视觉\\n                                                                                                人工智能\\n                                                            \\n                                OpenCV2、OpenCV3包含三角剖分的接口，但是参考文档里并未介绍，给学习带来了麻烦。有一本经典的书《学习OpenCV》对其做了详细介绍。但苦于这本书的新版，迟迟没有翻译成中文，所以现在有关OpenCV三角剖分的资料都是关于OpenCV1的，是C语言的接口。我边学习边分享一下，自己的理解水平有限，如有错漏，谢谢指正。由于时间有限，不逐字翻译了，根据内容来。原文参考《Learning OpenCV 3》附录A：平面剖分。第923-937页。前面很大一部分是平面剖分的理论，不做翻译，只简单提一下。讲了Delaunay三角剖分的特性和相关的计算方法。Delaunay是一个点集三角化的标准，在所有剖分方案中，满足所有三角形的最小角的和是最大的。Delaunay剖分是唯一的，是最接近规则化的三角网。Delaunay剖分有很多算法实现。OpenCV应用的是逐点插入法，这从函数接口可以得出。Delaunay三角剖分和Voronoi图是对偶的，这意味着计算出了Delaunay剖分，Voronoi图也就确定了。直观感受一下：重点来了，下面是OpenCV有关函数接口的理解和使用方法说明。首先需要在内存中开辟一块地方来存储Delaunay剖分。我们也需要一个方框（记住，为了加速计算，算法处理过程中，在这个方框的外面需要一个虚拟的外围三角形）。为了尽快开始，就假设这些点必须在一个600*600的图像中吧。这些代码创建了初始的剖分，一个三角形包含一个特定的矩形框。接下来，我们需要知道怎么插入点。这些点必须是32位float类型的，或者是带有整数坐标值的点（cv::Point）。在后面的案例中，它们会自动转换为float类型。插入点使用cv::Subdiv2D::insert()函数。（译者注：方便起见，后面很多相关函数省略cv::Subdiv2D命名空间了）现在，点已经输入完毕，我们能够得到Delaunay三角剖分。从Delaunay三角剖分中计算三角形，使用getTiangleList()函数。调用之后，，在三角形中的每个Vec6f包含三个顶点：（x1,y1,x2,y2,x3,y3,）。得到对应的Voronoi图使用函数getVoronoiFaceList。facets包含Voronoi小面块（译者注：里面的点数据只包括多边形的顶点），centers包含对应的区域中心。值得一提的是，Delaunay三角化是迭代构建的，意味着，每插入一个点，三角剖分都会更新，所以它是总是更新的。然而，Voronoi图是当你调用calcVoronoi()一次性构建的。可选的是，你可以调用前面提到的getVoronoiFaceList()（它内部调用了calcVoronoi()）来随之更新。既然，我们已经创建好了一个二维点集的Delaunay剖分以及对应的Voronoi图。下一步就是学习怎么遍历这个剖分。平面剖分基本的数据元素是边，通过序号访问边。通过这个序号还可访问相邻边，附加的参数还可指定想要访问的边同当前边的位置关系。每个边两个端点叫做origin和destination。一个边会和其它边共享这些点。最后，存在一个对应（对偶）边，每个Delaunay剖分的边都有Voronoi剖分的边相对应。记住一点，在cv::Subdiv2D接口中，对待边总是直接的，这实际上是为了方便。还有，边有方向。两个点包含两条边，因为区分origin和destination。不论Delaunay剖分，还是Voronoi剖分，边都有起点和终点。访问边的端点如下：edge是输入，是边的序号。参数表第二项返回点本身。函数返回点的序号。给定点序号，可以得到点的坐标，和相关的边。（译者注：这里的firstEdge和点的关系不清楚，读者可以考证一下）需要注意，和边一样，点有序号。当然点也有坐标。Subdiv2D接口故意设计成这样，在绝大多数的接口函数中，你主要使用的是边和点的序号。一个可能发生的情况是：你有一个特定点的位置信息，但是想找到它在剖分中的序号。  相似的情况：可能这个点实际上并不是剖分中的顶点，但是你想找到包含这个点的三角形或小面块。方法locate()把一个点作为输入，返回这个点所在的一条边。或者包含这个点的三角形或面块的一条边（如果这条边不是顶点）。注意，在这种情况下，返回的不一定是距离最近的边，只是简单的返回包含点的三角形或面块的其中一条边。当点是顶点时，locate()也会返回顶点的ID。函数返回值，告诉我们，点的着落位置cv::Subdiv2D::PTLOC_INSIDE  点落在面块内部，*edge是其中一条边。cv::Subdiv2D::PTLOC_ON_EDGE  点落在边上 *edge包含这条边。cv::Subdiv2D::PTLOC_VERTEX  点落在剖分的顶点上， *vertex 包含顶点指针。cv::Subdiv2D::PTLOC_OUTSIDE_RECT  点落在参考矩形外面，返回指针无效。cv::Subdiv2D::PTLOC_ERROR  输入参数无效访问给定一条边，你可能想访问跟这条边的起点或终点连接的新边。实现这项工作的方法是，我们指定一个起始边，我们绕着它的“头”点或者“尾”点，逆时针，亦或者顺时针搜寻下一条边。这种设计的说明见下图。我们通过函数getEdge()来实现。当调用这个函数时，我们需提供当前边和nextEdgeType参数，可选的参数值如下：怎么遍历完全取决于你，也可以绕三角形或面块遍历，参数值如下：（译者注：“下一条边”的隐含的访问顺序，绕点访问时是逆时针，绕多边形时是逆时针环行）不用担心是绕Delaunay三角形的边，还是Voronoi图的多边形的边，因为输入edge的序号已经包含这个信息，后面可详细了解边的编号方法。也可选择方便的调用方式，nextEdge()：它等价于getEdge()函数按cv::Subdiv2D::NEXT_AROUND_ORG方式调用。当我们想访问环绕一个点的所有边时，这个函数很方便。对一些应用场景很有帮助，比如，从虚拟外接三角形内的某个顶点出发，寻找凸包。假设你手头上有一个边的序号。无论你是从其他函数中得到的，还是想轻率地从某个特定的序号开始遍历整个图，调用下面的函数你可以从Delaunay剖分的边上跳到对应的Voronoi剖分的边上。参数rotate指定了你想旋转的方式，可以选择下列参数指定下一条边，参考下图更易理解：（译者注：从图中可以看出，旋转边默认是绕起始点逆时针）由于Delaunay剖分初始化的方式，下面的事实总是成立的： 在Subdiv2D对象里的每条边都被赋予一个整数值，这些整数被4个一组使用，每4个号码代表的边是相关联的：0号边是空边，不指向任何地方（或者，更准确地说，它的两个端点是0号顶点-也是空的）。1、2、3号边总是连接虚拟顶点的虚拟Delaunay边。指未固定的虚拟边，因为它的两个顶点都是虚拟的。（译者注：因为边的两头都是虚无缥缈，边当然也是了，而且没有一端是实打实的点。）空边的起点和终点都是（0，0）。旋转空边的结果，会得到另一个空边。从空点开始的“第一条边”也是一个空边，随后用nextEdge() 产生的边也一样。从任何虚拟顶点访问的“第一条边”总是连接到另一个虚拟顶点。（译者注：“第一条边”怎么理解？）既然，当我们对一个点集创建Delaunay剖分时，前3个点总是构建出一个外接三角形（不包括0号点）。我们可以通过下面的方式访问这三个顶点：我们也能得到外接三角形的3条边：（译者注：这么说来，4号边总是外接三角形的一条边）回忆一下，根据构造函数Subdiv2D(rect)，我们用一个外接矩形初始化了Delaunay剖分。基于此，下面的叙述成立：基于以上事实，我们可以快速找到凸包。例如：从顶点1、2、3开始，我们知道这3个点是虚构外接三角形上的3个虚拟顶点。我们可以使用nextEdge() 可以迅速产生所有的固定的虚拟边的集合（简单的拒绝未固定的虚拟边）。然后调用rotateEdge()，取反向边，然后再调用1次，或者2次nextEdge,就会落在凸包的边上。准确的讲，一条固定的虚拟边对应一条凸包的边，这些边的集合就是凸包。（译者注：  解决一些疑惑  1. nextEdge()可访问点四周的所有边，所以从1，2，3开始会得到全部的固定的虚拟边。  2. 通过边可以获得起点和终点的编号，通过边两端点的序号可以区分未固定的虚拟边、固定的虚拟边、未固定的虚拟边。  3. rotateEdge(2)将边的起点从虚构三角形顶点上转移到凸包的顶点上。  4. 调用1次或2次nextEdge()恰恰验证了凸包的顶点跟虚拟三角形有两条连线。  ）我们可以使用locate()环绕Delaunay三角形的边逐步访问。在下面的例子中，写了一个函数实现给定一个点，在包含点的Delaunay三角形的每条边上做些什么事：给定一个点，我们也可以调用如下函数找到最近的点：跟locate()不同，findNearest()会返回剖分中距离最近的顶点的整数ID。输入的点不必落在面块或三角形内。值得注意的是，这个函数不是const函数，因为当没有更新数据时它会计算Voronoi图。类似的，我们可以环绕Voronoi面块访问，然后画出来它。 上一篇：SpringBoot 后端与后端之间传输文件 springboot搭建后端下一篇：lvs 配置DR模式 负载均衡为 rr 平均分发到后端服务器 lvs负载均衡算法有哪些 一， index.html二， shader.jsfunction createShader(gl, type, source) {\\tconst shader = gl.createShader(type);//shader句柄\\tgl.shaderSource(shader, source); //绑定着色文本\\t//编译着色文本\\tgl.compileShader(shader);\\t//判 知道图像畸变矫映射的原理之后，那么如何得到相机的内参是矫正的第一步，内参决定了内参矩阵（中心点、焦距等），用内参矩阵才能计算出投影矩阵，从而将原本畸变的图像矫正为平面投影图像。本篇描述了相机成形的原理，并绘制出识别的角点。 opencv的基础图片的读取cv2.imshow()图片的颜色转换颜色转换二值化自适应二值化cv2.cvtColor(img,cv2.COLOR_RGB2BGR)_,threshold_img=cv2.threshold(img,150,255,cv.THRESH_BINARY)cv2.adaptiveThreshold(gray,255,cv2.ADAPTIVE_THRESH_GAUSSIA 最大四边形时间限制：1000 ms  |  内存限制：65535 KB难度：2描述 平面坐标上有n个 一、绘制三角形、二、三角形绘制顺序、1、绘制正面、2、三个点逆时针方向排列、3、三个点顺时针方向排列、4、设置点的正面方向、三、绘制多个三角形、四、相关资源、 # Android OpenCV找四边形在图像处理和计算机视觉领域，找到并识别图像中的四边形是一个常见的任务。这在很多应用场景中都有广泛的应用，比如文档扫描、物体识别等。在Android平台上，通过结合OpenCV库的强大功能，我们可以轻松地实现找到图像中四边形的功能。本文将介绍如何使用Android和OpenCV来实现这一功能，并提供相应的代码示例。## 准备工作为了开始这个项目，我 1、角点的定义角点通常被定义为两条边的交点，或者说，角点的局部邻域应该具有两个不同区域的不同方向的边界。比如，三角形有三个角，矩形有四个角，这些就是角点，也是他们叫做矩形、三角形的特征。角点是个很特殊的存在。如果某一点在任意方向的一个微小的变动都会引起灰度很大的变化，那么我们就可以把该点看做是角点。角点检测(Corner Detection)是计算机视觉系统中获取图像特征的一种方法，广泛应用于运动 EBO、VBO和VAO的简介思路画一个四边形，可以有两种方法1、通过2个三角形拼接而成，这就和前一个实验画三角形类似，利用VAO和VBO实验，我们要做的只是需要把给出的顶点增加为6个即可。2、但是我们会发现使用上述方式，会有两个顶点我们使用了两次，一个矩形只有四个顶点，如果是大量的复杂模型计算就会产生很大浪费。如何解决这个问题呢？其实我们只要存储矩形的四个顶点，然后指定绘制顺序就好了，EBO帮助我 一、 基本图形绘制1. 基本函数与参数cv2.line(): 线cv2.circle(): 圆cv2.rectangle(): 矩形cv2.ellipse(): 椭圆cv2.putText(): 文字img：需要绘制形状的图像。color：颜色的形式，对于BGR,将作为元组传递比如（255,0,0）表示蓝色；对于灰度图，只需要传递标量值。thickness: 线或圆形等图像的厚度，如果对闭合图像像 首先抛出一个问题，给定一系列二维平面上的的点，这些点是可以组成一个封闭的二维图形。因为这些点是矩形区域拍摄图像后识别得到的图形的边界点，所以我们要抽象出来这个矩形，也就是我们要反映出这个矩形。问题是在拍照的时候摄像头可能不是正对着图形的，那么矩形就必然在图像上反映为一个四边形, 如下图所示。那怎么得到这个四边形的四个顶点呢？使用经典图像处理的算法的话可以使用OpenCV提供了几个和矩形相关的函数接 http://newoj.acmclub.cn/problems/1999 1999: 三角形or四边形？ http://newoj.acmclub.cn/problems/1999 1999: 三角形or四边形？ 描述 题目描述： JiangYu很无聊，所以他拿钉子在板子上戳出了一个由.#组成的1 <!DOCTYPE html> <html> <head> <meta charset=\"utf-8\"> <title></title> </head> <body> <!-- 三角形--> <script> for (var a=1;a<=5;a++){ //定义变量a for (var b=1; ... 引言轮廓近似（Contour Approximation）是指对轮廓进行逼近或拟合，得到近似的轮廓。在图像处理中，轮廓表示了图像中物体的边界，因此轮廓近似可以用来描述和识别物体的形状。多边形拟合多边形拟合（Approximating Polygons）是将轮廓逼近成一个由直线段构成的多边形。常见的有最小包围矩形、最小包围圆形、最小二乘法椭圆等。使用 cv2.approxPolyDP() 函数可以实 最近在逛某个技术网站的时候，感觉文章关键词上的样式好酷炫啊。于是我将那种写法照搬到了我的博客中，也许最近逛过我博客的小伙伴已经发现了它出现在哪儿了——分页的样式。来张截图： 你在首页的底部也可以看到这样一个分页栏；是不是看上去还不错？下面就来看看这是如何实现的吧~ 第一种方法：利用border 一个 最近找实习有一丢丢蛋疼，沉迷鬼泣5，四周目通关，又不想写代码，写篇笔记复习一下，要好好学图形学啊用OpenGL画一个三角形项目的简介记录一下跟着learnOpenGL学习的过程 笔记里的代码放在github上，依赖都用相对路径配好了，直接下载就能用，IDE是VS2017,代码 选择Triangle项目作为启动项可以测试这个代码 使用的库是glad和glfw，感觉用glad和glfw开发OpenGL 前言： 最近深感需要精通掌握一门技术，重操OpenCV学习，又恰逢前不久OpenCV4.0版本新出，刚好又为自己续续电。此番学习在自己大二暑假的时候，一遍做实验室项目急出论文之际，愿一切努力皆不负初衷吧~ 文章目录零、基础与入门1.OpenCV4的安装配置2.编译opencv4.1 + opencv_contrib(含cuda)3.安装CUDA10.1及cuDNN10.14.编译之后的OpenCV 简言本文简要阐述了用CSS边框的方法在页面上绘制三角形，包括几种典型的三角形绘制，还介绍了几个简单的应用场景。利用边框绘制三角形方法只是众多方案中的一种，大家根据项目实际，选用最适宜项目的方案。  1 基本原理在CSS中，我们可以利用border-top、border-left、border-bottom、border-left四个属性来绘制三角形。实现的基本原理参见下面的演示代码及其运行结果。核 左图：奥巴马总统的形象，使用CLM检测。 中心：Delaunay三角剖分。 右：对应的Voronoi图。 这篇文章将帮助我们了解Delaunay三角剖分和Voronoi图。什么是Delaunay 三角剖分？给定平面中的一组点，三角测量指的是将平面细分为三角形，将点作为顶点。在图1中，我们在左图像上看到一组界标，以及在中间图像中的三角测量。一组点可以有许多可能的三角剖分，但Delaunay三角剖分出 大家都知道：简单、规则的图像使用基本图形工具就可以完成，但复杂的路径或图文框就需要使用钢笔类工具，“钢笔”工具的使用方法比基本绘图工具的使用方法要复杂一些。但“铅笔”工具绘制路径的方法就较为简单，但不容易掌握，使用“钢笔”工具在视图中单击可以创建直线图像，下面让我们一起来看看InDesign的钢笔工具是该怎么使用的，都有些什么技巧。一、InDesign的钢笔工具绘制起点介绍选择“钢笔”工具，在文档 java swing画三角形_用java画三角形import javax.swing.*; import java.awt.*; import java.awt.event.*...        最近在学习mybatis的时候，想起来之前学hibernate有一个需求，插入数据到数据库中后要求返回其主键。一.支持自增主键的mysql，sql Server，会使用原生的jdbc中的一个方法getGeneratedKeys()方法可以返回自增主键。  \\n 具体实现是在插入的sql语句上加入  userGeneratedKeys=\" 1.介绍springboot提供非常丰富回调接口，利用这些接口可以做非常多的事情，对于一些常用的回调接口进行介绍2.常用的拓展接口1.ApplicationContextInitializer\\n2.ApplicationListener\\n3.ApplicationRunner\\n4.CommandLineRunner3.实例：1.ApplicationContextInitializer接口是在sp 三、Java中if与switch语句的比较1、if可以：①区间判断 ②定值判断 ③满足条件时,执行的{}中的内容可以为代码段2、switch可以：①定值判断switch(表达式|变量){\\n                case 值1:\\n                    语句体1;\\n                    break;\\n                case 值2:\\n    在Windows上安装EMQhttps://www.emqx.io/cn/ 在EMQ的官网上下载**Broker，Enterprise（企业版），Edge（轻量级）进入官网后，点击右上角的免费使用/下载，选择版本及软件，下载我的下载速度每次都是以10KB/s 左右下载，如果网速和我一样不行，需要的同学在评论留一下邮箱 下载Zip包后解压缩包，安装在一个文件夹里（敲黑板！！，是解压缩到一个文件夹里）  Centos7安装mysql5.7Yum安装1.1检查系统是否存在自带的数据库1.2添加Mysql YUM Repository1.2.1下载MySQL源1.2.2开始安装Mysql5.71.2.3修改密码1.3远程连接tar.gz2.1MySql下载2.2安装&配置：  CentOS 7的默认yum仓库中并没有MySQL5.7，而是MariaDB，所以我们需要手动添加，好在MySQL官举报文章请选择举报类型具体原因原文链接（必填）补充说明0/200上传截图格式支持JPEG/PNG/JPG，图片不超过1.9MCopyright © 2005-2024 51CTO.COM\\n                    版权所有 京ICP证060544号",
            "在Excel中，COUNTIFS函数是一个强大的条件统计工具，它允许用户根据多个条件对特定范围内的数据进行计数。本文将详细解析COUNTIFS函数的基础语法、应用场景以及具体实例，帮助读者更好地掌握这一功能强大的函数。COUNTIFS函数的基本语法如下：COUNTIFS(Criteria_range1, Criteria1, [Criteria_range2, Criteria2]…)其中，Criteria_range代表要统计的条件区域，Criteria代表要统计的参数，用来定义将对哪些单元格进行计数。每个Criteria_range参数的区域都必须具有相同的行数和列数，且参数是以“成对”形式出现的。COUNTIFS函数支持最多127对条件统计，但在日常工作中，很少会用到如此复杂的条件组合。下面我们用COUNTIF函数分别对字符串、数字、日期进行统计如图1所示，C11:F24单元格区域是基础数据源，C列为组别，D列为姓名，E列为销售日期，F列为销售金额，接下来对这部分数据做相应的统计。示例1：统计汉字假设我们有一个数据源区域，其中包含组别、姓名、销售日期和销售金额等信息。现在，我们想要统计某个特定组别的人数。以“一组”为例，可以使用以下公式进行统计：=COUNTIFS(C12:C24, \"一组\")在这个公式中，C12:C24是要统计的条件区域，即组别所在的列；“一组”是统计的参数，即我们想要统计的组别名称。通过COUNTIFS函数，我们可以轻松地得到“一组”的人数。如果想要统计多个组别的人数，可以将条件参数放在单元格中，然后使用公式进行引用。例如，将需要统计的组别信息放在H14:H16单元格区域中，然后在I14单元格中输入以下公式并向下复制到I16单元格：=COUNTIFS(C12:C24, H14)这样，我们就可以得到每个组别的人数统计结果。示例2：统计数字除了统计汉字外，COUNTIFS函数还可以用于统计数字。以销售金额为例，我们可以使用以下公式统计大于5000、等于5000和小于等于5000的人数：大于5000的人数统计：=COUNTIFS(F12:F24, \">\"&5000)等于5000的人数统计：=COUNTIFS(F12:F24, 5000) 或者 =COUNTIFS(F12:F24, \"=\"&5000)小于等于5000的人数统计：=COUNTIFS(F12:F24, \"<=\"&5000)在这些公式中，F12:F24是销售金额所在的列；\">\"&5000、5000和\"<=\"&5000是统计的参数，即我们想要统计的数字范围。通过COUNTIFS函数和比较运算符的结合使用，我们可以轻松地得到各个数字范围内的数据计数。同样地，我们也可以将统计条件放在单元格中，然后直接引用这些条件进行统计。例如，将统计条件放在H23:H25单元格区域中，然后在I23单元格中输入以下公式并向下复制到I25单元格：=COUNTIFS(F12:F24, H23)这样做的好处是，如果需要修改统计条件，只需要修改相应的单元格内容即可，而无需修改公式本身。继续看一种统计数据的方式，如图6所示，在H27单元格中输入统计的分隔点，数字5000，然后还是分别统计“大于”“等于”“小于等于”三组数字。在I27单元格中输入公式：=COUNTIFS($F$12:$F$24,”>”&H27)注意观察，这就涉及之前埋的伏笔，为什么要求大家将比较运算符和参数分开写。很多人会将公式写成“=COUNTIFS($F$12:$F$24,”>H27″)”。公式乍一看，好像没问题，可是这个公式返回的结果为0。为什么呢？这就要说一下“活性”的问题了。H27没有在双引号中，它保持了自己的“活性”，代表引用的是相应单元格，而一旦把它放在了双引号中，它就变成了一个“木乃伊”，不再具有“活性”。”>H27″统计的并不是大于H27单元格的那个数字5000，而是大于“H27”这3个字符的数据。在COUNTIFS的统计中，它先判断条件的数据类型，发现数据类型是文本，而F12:F24单元格区域中全都是数字，没有文本，所以结果为0。示例4：统计日期下面继续看统计日期的方式，为了方便查看页面，我们在C33:F46单元格区域建立相同的数据源，如图7所示。统计销售日期在2016年2月的人数。先把公式写下来，再慢慢分析，如图8所示，在I33单元格中输入公式：=COUNTIFS($E$34:$E$46,”>=”&”2016-2-1″,$E$34:$E$46,”<“&”2016-3-1”)这个函数需要注意以下几个方面。（1）对于日期函数中的日期和时间的本质就是数字。统计某一区间日期，就相当于统计两个数字之间的数量，于是用到了“掐头去尾”的方式。（2）这种快速输入日期的方式，必须用英文状态下的双引号引起来，否则它不表示日期，而只是一个普通的数字减法。如果这种方式掌握不好，那就规规矩矩使用DATE函数，如DATE(2016,2,1)，可以减少错误。（3）这个数据源中的数据都是日期，不包含时间的部分，所以用“>”&”2016-1-31″<=”&”2016-2-29″等不同的固定首、尾的方式都可以。但如果数据源中的数据含有时间，如“2016-1-31 15:28”“2016-2-29 09:07”等，则必须采用公式中“>=本月的1日<下个月1日”的日期方式，这样的统计是最准确的。就好像统计分数的时候，80分到90分之间为良，如果大家的得分都是整数，那么“>79”“<=89”等方式都可以，但当分数中包括79.5、89.5等小数的时候，只能用“>=80”、“<90”来表达最准确的区间。在使用COUNTIFS函数时应确保每个条件区域都具有相同的行数和列数，这是使用COUNTIFS函数的基本要求。参数是以“成对”形式出现的，即每个条件区域都需要对应一个条件参数。在统计数字时，可以通过添加比较运算符来定义数字范围。为了避免出现错误，建议将比较运算符和数字分开写，中间使用“&”符号进行连接。COUNTIFS函数支持最多127对条件统计，但在实际工作中，很少会用到如此复杂的条件组合。因此，在使用该函数时，应根据实际需求选择合适的条件数量。当需要统计多个条件时，可以将条件参数放在单元格中，然后直接引用这些单元格进行统计。这样做可以方便地进行条件修改和公式复制。COUNTIFS函数是Excel中一个强大的条件统计工具。通过掌握其基础语法和应用场景，并结合具体实例进行分析与实践，我们可以更好地利用这一函数进行数据处理和分析工作。希望本文能够帮助读者更好地理解和应用COUNTIFS函数，提升Excel使用技巧和数据处理能力。"
        ]
    },
    {
        "prompt": "> make as_sort\ncc -g -Wall -Wextra -I. -DDEBUG -o as_sort as_sort.c -lm\nas_sort.c: In function ‘as_test’:\nas_sort.c:111:49: warning: passing argument 4 of ‘as_isort’ from incompatible pointer type [-Wincompatible-pointer-types]\n  111 |     sort_test(as_isort, arr, sizeof(size_t), n, arr_cmp);\n      |                                                 ^~~~~~~\n      |                                                 |\n      |                                                 int (*)(size_t,  size_t) {aka int (*)(long unsigned int,  long unsigned int)}\nas_sort.c:82:26: note: in definition of macro ‘sort_test’\n   82 |     func(arr, size, len, cmp); \\\n      |                          ^~~\nas_sort.c:28:61: note: expected ‘cmf_func’ {aka ‘int (*)(void *, void *)’} but argument is of type ‘int (*)(size_t,  size_t)’ {aka ‘int (*)(long unsigned int,  long unsigned int)’}\n   28 | void as_isort(void* base, size_t size, size_t len, cmf_func cmp)\n      |                                                    ~~~~~~~~~^~~ 怎么办",
        "doc": []
    },
    {
        "prompt": "正则\\d 的含义",
        "doc": [
            "python演示如此总结成表格为对于a = \\\"1 234\\\\tabc\\\\n%^*\\\"对于a = \\\"\\\\tabcdef\\\\n%^*\\\"\\\\B则想反##注意查找到的位置不同python的实现我们可以使用 ? 将贪婪匹配模式转化为惰性匹配模式匹配会尽可能的多匹配会尽可能的少拜拜",
            "",
            "学习正则练习场",
            "/^[0-9]*[1-9][0-9]*$/^ 这表示以其后面的字符开头[0-9]* 这个匹配0个或0个以上的0-9之间的数字[1-9] 匹配一个1-9之间的数字$ 这表示以其前面的字符结尾转自百度知道：正则表达式：/^[0-9]*[1-9][0-9]*$/ 是什么意思？_百度知道 (baidu.com)\\n                    qq_46423858: \\n                    validateCommonNum存在bug\\n                \\n                    qq_46423858: \\n                    @blur同适用\\n                \\n                    qq_46423858: \\n                    问题 v-model改v-decorator 方便做校验\\n                \\n                    qq_46423858: \\n                    SimpleDateUtil工具类后的为格式\\n                \\n                    qq_46423858: \\n                    这种情况下，添加完数据库表，要记得重新登陆你的账户。\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者qq_46423858你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、C币套餐、付费专栏及课程。"
        ]
    },
    {
        "prompt": "使用koa-body 上传图片",
        "doc": [
            "前言上传下载在 web 应用中还是比较常见的，无论是图片还是其他文件等。在 Koa 中，有很多中间件可以帮助我们快速的实现功能。文件上传在前端中上传文件，我们都是通过表单来上传，而上传的文件，在服务器端并不能像普通参数一样通过 ctx.request.body 获取。我们可以用 koa-body 中间件来处理文件上传，它可以将请求体拼到 ctx.request 中。使用中间件后，就可以在 ctx.request.body.files 中获取上传的文件内容。需要注意的就是设置 maxFileSize，不然上传文件一超过默认限制就会报错。接收到文件之后，我们需要把文件保存到目录中，返回一个 url 给前端。在 node 中的流程为该方法适用于上传图片、文本文件、压缩文件等。文件下载koa-send 是一个静态文件服务的中间件，可用来实现文件下载功能。在前端进行下载，有两个方法： window.open 和表单提交。这里使用简单一点的 window.open 。这里 window.open 默认是开启一个新的窗口，一闪然后关闭，给用户的体验并不好，可以加上第二个参数 window.open('/download/1.png', '_self'); ，这样就会在当前窗口直接下载了。然而这样是将 url 替换当前的页面，则会触发 beforeunload 等页面事件，如果你的页面监听了该事件做一些操作的话，那就有影响了。那么还可以使用一个隐藏的 iframe 窗口来达到同样的效果。批量下载批量下载和单个下载也没什么区别嘛，就多执行几次下载而已嘛。这样也确实没什么问题。如果把这么多个文件打包成一个压缩包，再只下载这个压缩包，是不是体验起来就好一点了呢。文件打包archiver 是一个在 Node.js 中能跨平台实现打包功能的模块，支持 zip 和 tar 格式。如果直接打包整个文件夹，则不需要去遍历每个文件 append 到压缩包里注意：打包整个文件夹，生成的压缩包文件不可存放到该文件夹下，否则会不断的打包。中文编码问题当文件名含有中文的时候，可能会出现一些预想不到的情况。所以上传时，含有中文的话我会对文件名进行 encodeURI() 编码进行保存，下载的时候再进行 decodeURI() 解密。ctx.attachment 将 Content-Disposition 设置为 “附件” 以指示客户端提示下载。通过解码后的文件名作为下载文件的名字进行下载，这样下载到本地，显示的还是中文名。然鹅， koa-send 的源码中，会对文件路径进行 decodeURIComponent() 解码：这时解码后去下载含中文的路径，而我们服务器中存放的是编码后的路径，自然就找不到对应的文件了。要想解决这个问题，那么就别让它去解码。不想动 koa-send 源码的话，可使用另一个中间件 koa-sendfile 代替它。以上就是本文的全部内容，希望对大家的学习有所帮助，也希望大家多多支持我们。因为升级到新的node版本,之前的通过很多上传图片的方式都已经不适用了,所以自己就写了一个对于 koa2上传图片的小demo,记录一下心得. 废话不多说,下面直接上代码,里面都有注释. const Koa = require('koa'); const route = require('koa-route'); const serve = require('koa-static'); const inspect = require('util').inspect const path = req前言 上传下载在 web 应用中还是比较常见的,无论是图片还是其他文件等.在 Koa 中,有很多中间件可以帮助我们快速的实现功能. 文件上传 在前端中上传文件,我们都是通过表单来上传,而上传的文件,在服务器端并不能像普通参数一样通过 ctx.request.body 获取.我们可以用 koa-body 中间件来处理文件上传,它可以将请求体拼到 ctx.request 中. // app.js const koa = require('koa'); const app = new koa(); cGo Gin 实现文件的上传下载流读取 文件上传 router router.POST(\"/resources/common/upload\", service.UploadResource) service type: POST data:{ \"saveDir\":\"保存的路径\", \"fileName\":\"文件名称不带后缀\" } // 上传文件 func UploadResource(c *gin.Conte目录 独立使用Feign 上传文件 下载文件 使用Spring Cloud Feign 上传文件 下载文件 总结 Feign框架对于文件上传消息体格式并没有做原生支持,需要集成模块feign-form来实现. 独立使用Feign 添加模块依赖: <!-- Feign框架核心 --> <dependency> <groupId>io.github.openfeign</groupId> <artifactId>feign-core</arti之前介绍servlet3.0新特性的时候有提到过servlet API提供了一个part类来实现对文件的上传和保存,Struts其实是在其基础上做了进一步的封装,更加简单易用.至于文件下载,Struts贯彻AOP 思想,在下载之前提供对用户权限控制的API. 下面我们将详细介绍上传和下载的相关内容. 一.Struts文件上传机制 想要实现文件上传功能,页面的表单的method属性必须被指定为post,还有enctype属性必须为multipart/form-data,该值表示上传的内容将会以二进本文实例为大家分享了文件上传下载java实现代码,供大家参考,具体内容如下 前台: 1. 提交方式:post 2. 表单中有文件上传的表单项: <input type=\"file\" /> 3. 指定表单类型:     默认类型:enctype=\"application/x-www-form-urlencoded\"     文件上传类型:multipart/form-data FileUpload 文件上传功能开发中比较常用,apache也提供了文件上传组在Web应用系统开发中,文件上传和下载功能是非常常用的功能,今天来讲一下JavaWeb中的文件上传和下载功能的实现. 1. 上传简单示例 Jsp <%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%> <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"&g现在文件的上传,特别是大文件上传,都需要进度条,让客户知道上传进度. 本文简单记录下如何弄进度条,以及一些上传信息,比如文件的大小,上传速度,预计剩余时间等一些相关信息.代码是匆忙下简单写的,一些验证没做,或代码存在一些隐患,不严谨的地方.本文代码只供参考. 进度条的样式多种多样,有些网站弄得非常绚烂漂亮.本文UI端不太懂,只会一些简单的基本的css而已,所以进度条弄得不好看.本文侧重的给读者提供一个参考,一个实现思路而已. 注:由于jQuery版本用的是2.1.1,所以如果跑本例子源码,请用I在Spring Cloud封装的Feign中并不直接支持传文件,但可以通过引入Feign的扩展包来实现,本来就来具体说说如何实现. 服务提供方(接收文件) 服务提供方的实现比较简单,就按Spring MVC的正常实现方式即可,比如: @RestController public class UploadController { @PostMapping(value = \"/uploadFile\", consumes = MediaType.MULTIPART_FORM_DATA_VAL本文为大家分享了Java实现文件上传下载功能的具体代码,供大家参考,具体内容如下 前端通过form表单的enctype属性,将数据传递方式修改为二进制\"流\"的形式,服务端(servlet)通过  getInputStream() 获取流信息, 运用java I/O 流的基础操作将流写入到一个服务端临时创建的文件temp中,然后再次利用文件基本操作,读取并截取临时文件内容,根据其中信息创建相应的文件,将读取出来的具体信息写入,下载时,根据提交的文件名称,找到服务器端相应的文件,然后根据输本文实例为大家分享了Spring Boot实现文件上传下载的具体代码,供大家参考,具体内容如下 示例[Spring Boot  文件上传下载] 程序清单:/springboot2/src/main/resources/templates/register.html <!DOCTYPE html> <html xmlns:th=\"http://www.thymeleaf.org\"> <head> <meta charset=\"UTF-8© 2024 张生荣",
            "koa 发布已经快 6 年的时间，作为继 express 之后 node 服务框架最大的黑马，有很多的设计思想值得我们学习，本文从简到繁逐步介绍 koa，同时适合新老手阅读。介绍这里引用中文官方网站的原文Koa 是一个新的 web 框架，由 Express 幕后的原班人马打造， 致力于成为 web 应用和 API 开发领域中的一个更小、更富有表现力、更健壮的基石。 通过利用 async 函数，Koa 帮你丢弃回调函数，并有力地增强错误处理。 Koa 并没有捆绑任何中间件， 而是提供了一套优雅的方法，帮助您快速而愉快地编写服务端应用程序。既然是 web 框架大家一定不陌生，通过启动一个 node http server，监听一个端口，进而我们就可以通过类似 localhost:3000 在本地访问我们的服务了，这个服务可以是 web 网站，可以是 restful 接口，也可以是静态文件服务等等。Hello Word任何语言、框架都存在 Hello Word 示例，来表达其最简单的入门 Demo，代码如下此时访问浏览器 localhost:3000，我们会看到打印出了 Hello Word，此时一个基于 koa 的服务就启动完成了。上下文理解 koa 第一步，搞清楚上下文的作用例如：微信群里面有人说外面下雪了，你跑到窗边看到的却是晴空万里，这时你才意识到同样是 10 月份，他在寒冷的北方，你在酷暑的南方类似的，一次请求会包含用户的登录状态，或者一些Token之类的信息，这些信息就是上下文的一部分，用于确定一次的请求环境Koa 的 Context 把 node 的 request, response 对象封装进一个单独对象, 并提供许多开发 web 应用和 APIs 有用的方法. 那些在 HTTP server 开发中使用非常频繁操作, 直接在 Koa 里实现, 而不是放在更高层次的框架, 这样中间件就不需要重复实现这些通用的功能。中间件先来看一个官方的例子：简单解释下，代码起始初始化一个 koa 实例，下面分别通过 use 方法载入了三个中间件方法，执行顺序：进入第一个中间件next() 跳到下一个中间件new Data() 记录当前时间next() 跳到下一个中间件将 ctx.body 赋值回到上一个中间件再次记录当前时间并计算时间差存到 http header 中回到上一个中间件将 header 中的 X-Response-time 打印出来这里的执行顺序延伸出了十分经典的洋葱模型在一次请求的过程中会往返经过同一中间件两次，允许我们处理不同请求阶段的逻辑源码解析上面分别介绍了 koa 里面两个最重要的概念，下面我们分析下 koa 内部是如何运作的，所谓的洋葱模型是如何建立的koa 源码的 lib 目录十分简单Application 类初始化入口文件是 application.js，我们先从这里入手Application 是一个 class，这个类继承了 node 的 Events 这里不详细展开，在 constructor 中初始化了以下内容：use 方法按照正常的编码顺序，在初始化完 koa 实例后（即 const app = new Koa()），我们需要调用 app.use() 去挂载我们的中间件，那么我们看下 use 方法做了什么判断中间件为 function，判断中间件是否为 generator function 类型，只是简单的将中间件函数 push 到了 middleware 数组中。此时心中有没有大写的 WHAT？其实就是这么直白，没什么复杂逻辑，后面也许大家都猜到了，循环调用 middleware 中的方法去执行，此处尚未表明洋葱模型是怎么来的，我们先不展开，继续按代码顺序执行。listen 方法按照正常的编码顺序，在 use 完我们的中间件之后就是 app.listen(3000)一起看下这个 listen 干了什么这里的 http.createServer 就是 node 原生启动 http 服务的方法，这里稍微扩展下基础知识，此方法接受两个参数不难理解这里的 this.callback() 方法一定是返回了一个函数，并且接收两个参数 (req, res)，下面看下源码这个 callback 中的信息量有点大，代码本身并不难理解，注释也有说明，从这里展开从上到下分别解释compose 方法这里的 compose 方法主要负责生成洋葱模型，通过 koa-compose 包实现，源码如下从注释看得出大致逻辑，这里的巧妙之处在于 fn(context, dispatch.bind(null, i + 1))。这个 dispatch.bind(null, i + 1) 就是我们通常写中间件的第二个参数 next。我们执行这个 next() 方法实际上得到的是下一个中间件的执行。也就不难理解为什么我们 await next() 的时候等待的是后面所有中间件串联执行后了，回头再看下上文中间件部分的执行顺序就豁然开朗了。createContext 方法callback 中的展开解释，看下 const ctx = this.createContext(req, res) 做了什么这里主要是将 req, res 及 this.request, this.response 都挂载到了 context 上，并通过赋值理清了循环引用层级关系，为使用者提供方便。handleRequest 方法还是 callback 中的展开解释，看下 this.handleRequest(ctx, fn) 这部分做了什么分别拿到 ctx 和 compose 生成的洋葱模型，开始逐一消费中间件。context.js 文件上面理清了整体框架，下面看下 context.js 内部的细节，在文件结尾有两大段的代理这里可以看到所有的 req 及 res 的方法集合，那么哪些方法可读，哪些可写，哪些既可读又可写，哪些方法不允许修改这就是 delegates 这个库做的事情。delegates 内部利用了，__defineGetter__ 和 __defineSetter__ 方法控制读写，当然我们可以从中学习思想，也不能盲从这两个 api 去 MDN 上搜索会给出相同的警告信息This feature is deprecated in favor of defining setters using the object initializer syntax or the Object.defineProperty() API.其实还是建议我们使用 vue 的代理方式 Object.defineProperty()，不过这个库有四年没更新了依然稳定运行着，还是深受 koa 开发者认可的。其它request.js 和 response.js 文件没什么可以讲，就是具体的工具方法实现，方便开发人员调用，感兴趣可以自行阅读源码。应用智联前端架构整体的 node 服务都基于 koa 实现，包括我们的 vue 服务端渲染和 node restful api 等等。我们选择 koa 的原因是其本身轻巧，可扩展性良好，支持 async、await 的异步，彻底摆脱了回调地狱。市面上也有成熟基于 koa2 的企业级解决方案，如 eggjs 和 thinkjs。总结揭开 koa 的神秘面纱，让开发者关注业务逻辑同时也关注下框架本身，有利于问题排查和编写扩展，与此同时可以学习 express、hapi 等同类型框架的思想，结合现有企业级解决方案，选一款适合你的框架，总之框架不论好坏，只论场景。以上就是本文的全部内容，希望对大家的学习有所帮助，也希望大家多多支持我们。随着Node.js的日益火热,各种框架开始层出不穷的涌现出来,Node.js也开始逐渐的被应用到处理服务端请求的场景中.搭建Web项目的框架也随之开始出现--express.koa.koa2.egg等,当然要了解其好坏还是要自己去啃源码的.本文将不会涉及到源码,只是带领初学者简单了解下Koa2的基本使用,欢迎大家在评论中互相交流学习. 注意:koa2使用了ES7的语法,所以使用时请升级Node版本到最新.了解更详细的源码信息可以到git上的koajs/koa去了解 1. 项目目录结构 2. 代码实现跨域ajax请求的方式有很多,其中一个是利用CORS,而这个方法关键是在服务器端进行配置. 本文仅对能够完成正常跨域ajax响应的,最基本的配置进行说明(深层次的配置我也不会). CORS将请求分为简单请求和非简单请求,可以简单的认为,简单请求就是没有加上额外请求头部的get和post请求,并且如果是post请求,请求格式不能是application/json(因为我对这一块理解不深如果错误希望能有人指出错误并提出修改意见).而其余的,put.post请求,Content-Type为appl前言 前段时间和公司一个由技术转产品的同事探讨他的职业道路,对我说了一句深以为然的话: \"不要把自己禁锢在某一个领域,技术到产品的转变,首先就是思维上的转变.你一直做前端,数据的交互你只知道怎么进,却不知道里面是怎么出的,这就是局限性.\" 醍醐灌顶般,刚好学习vue的时候看到有个注册登录的项目,索性我也跟着动手做一个vue项目,引入koa和mongodb,实现客户端(client)提交-服务端(server)接收返回-入数据库全过程. 本项目基于vue-cli搭建,利用token方式进koa2里面使用ES7的语法,如async.await所以需要运行在node7.6之后:但在node7.6之前也可以利用babel是的koa2可以运行. 首先项目中安装babel,和babel的几个模块: npm install babel babel-register babel-preset-env --save 然后在入口文件中引入'babel-register'模块 require('babel-register'); 而后引入业务代码: require('./server.js');前言 上传下载在 web 应用中还是比较常见的,无论是图片还是其他文件等.在 Koa 中,有很多中间件可以帮助我们快速的实现功能. 文件上传 在前端中上传文件,我们都是通过表单来上传,而上传的文件,在服务器端并不能像普通参数一样通过 ctx.request.body 获取.我们可以用 koa-body 中间件来处理文件上传,它可以将请求体拼到 ctx.request 中. // app.js const koa = require('koa'); const app = new koa(); c前言 Koa 2.x 版本是当下最流行的 NodeJS 框架, Koa 2.0 的源码特别精简,不像 Express 封装的功能那么多,所以大部分的功能都是由 Koa 开发团队(同 Express 是一家出品)和社区贡献者针对 Koa 对 NodeJS 的封装特性实现的中间件来提供的,用法非常简单,就是引入中间件,并调用 Koa 的 use 方法使用在对应的位置,这样就可以通过在内部操作 ctx 实现一些功能,我们接下来就讨论常用中间件的实现原理以及我们应该如何开发一个 Koa 中间件供自己和别因为升级到新的node版本,之前的通过很多上传图片的方式都已经不适用了,所以自己就写了一个对于 koa2上传图片的小demo,记录一下心得. 废话不多说,下面直接上代码,里面都有注释. const Koa = require('koa'); const route = require('koa-route'); const serve = require('koa-static'); const inspect = require('util').inspect const path = reqGET 请求 在 koa 中,GET请求获取请求数据request对象中的 query 方法和 querystring 方法, query方法返回的是格式化好的参数,querystring 方法返回的是请求字符串.废话不多说,直接上代码 app.js 中添加如下代码: router.get('/getData', async (ctx,next) => { // 从上下文的request对象中获取 let request = ctx.request; let req_query = reques前言 在学习了koa2和express并写了一些demo后,打算自己写一个项目练练手,由于是在校生,没什么好的项目做,即以开发一个前端论坛为目标,功能需求参照一下一些社区拟定,主要有: 登录注册 个人信息维护.头像等基本信息 发表文章,富文本编辑器采用wangEditor插件,编辑.删除文章,文章分类等 文章评论.文章收藏.点赞等 支持文章分页.评论分页加载 关注取关用户 资源(文件)上传分享.下载.查看 学习资源推荐..... 作者个人日记 but....由于种种原因,目前仅实现了部分功能,资koa 发布已经快 6 年的时间,作为继 express 之后 node 服务框架最大的黑马,有很多的设计思想值得我们学习,本文从简到繁逐步介绍 koa,同时适合新老手阅读. 介绍 这里引用中文官方网站的原文 Koa 是一个新的 web 框架,由 Express 幕后的原班人马打造, 致力于成为 web 应用和 API 开发领域中的一个更小.更富有表现力.更健壮的基石. 通过利用 async 函数,Koa 帮你丢弃回调函数,并有力地增强错误处理. Koa 并没有捆绑任何中间件, 而是提供了一套优内置异常和Throwable核心方法 Java内置异常可查异常(必须要在方法里面捕获或者抛出) ClassNoFoundException 应⽤程序试图加载类,找不到对应的类 IllegalAccessException 拒绝访问⼀个类的时候 NoSuchFieldExcetion 请求的变量不存在 NoSuchMethodException ⽅法不存在 不可查异常 ArrayIndexOutOfBoundsException 数组索引越界 ClassCastException 强制失败抛出异常目录 Bean的自动装配 byName byType 使用注解 Bean的自动装配 自动装配说明 自动装配是使用spring满足bean依赖的一种方法 spring会在应用上下文中为某个bean寻找其依赖的bean. Spring中bean有三种装配机制,分别是: 在xml中显式配置: 在java中显式配置: 隐式的bean发现机制和自动装配. 这里我们主要讲第三种:自动化的装配bean. Spring的自动装配需要从两个角度来实现,或者说是两个操作: 组件扫描(component scannifor语句从入门到精通 一 前言 二 for语句的基本用法 三 for /f 含变量延迟 四 for /r 五 for /d 六 for /l 一.前言 在批处理中,for是最为强大的命令语句,它的出现,使得解析文本内容.遍历文件路径.数值递增/递减等操作成为可能:配合if.call.goto等流程控制语句,更是可以实现脚本复杂的自动化.智能化操作:合理使用for语句,还能使代码大为简化,免除各位编写大量重复语句之苦.而能否熟练使用for语句,已经成为衡量一个人批处理水平高低最主要的标准. 在这什么是mybatis MyBatis是支持普通SQL查询,存储过程和高级映射的优秀持久层框架.MyBatis消除了几乎所有的JDBC代码和参数的手工设置以及结果集的检索.MyBatis使用简单的XML或注解用于配置和原始映射,将接口和Java的POJOs(Plan Old Java Objects,普通的Java对象)映射成数据库中的记录. orm工具的基本思想 无论是用过的hibernate,mybatis,你都可以法相他们有一个共同点: 1. 从配置文件(通常是XML配置文件中)得到 sesFrom:http://www.blog.edu.cn/user2/jashy/archives/2006/1264853.shtml PSPad从入门到精通(PSPad Inside) ------------------------------- PSPad什么意思? 一款优秀的编辑器,宣传一般是很差劲的.PSPad也是如此.基本找不到关于PSPad含义的表述, 也很少有人问.一个中国的网友猜测, 可能是Programmer'S Pad.如若真的如此, 这种用法只有在非英语国家才可能有,也只目录 一.认识线程及线程的创建 1.线程的概念 2.线程的特性 3.线程的创建方式 <1>继承Thread类 <2>实现Runnable接口 <3>实现Callable接口 二.线程的常用方法 1.构造方法和属性的获取方法 2.常用方法 <1>run()和start() <2>interrupt()方法 <3>join方法 <4>获取当前线程的引用currentThread();方法 <5>休眠当前线程slee目录 java程序基本结构 程序注释 变量常量 变量 常量 数据类型与类型转换 常用数据类型 类型转换 运算符表达式 标识符关键字保留字 小常识 这里是JAVA成仙之路 java程序基本结构 java程序的源码文件是Xxx.java,Xxx代码类名和文件名一致(一般要求首字母大写,从第二个单词首字母大写. 新建一个类,类名User class User{ } 新建一个User类,执行代码在控制台打印出\"hello 中国\"的效果 class User{ public static voi目录 概述 入门案例 创建Servlet程序 注解方式配置Servlet程序 配置文件方式配置Servlet程序(提供web.xml) 测试 Servlet的继承结构 Servlet的生命周期 init() 方法 service() 方法 doGet() 方法 doPost() 方法 destroy() 方法 Request 概述 测试 请求转发 Response 概述 测试 重定向 扩展:在web工程里使用Servlet程序 在IDEA里创建一个web工程 扩展案例 总结 概述 Servlet目录 1. 基础概念 2. 单点登录 3. CAS 流程 4. OAuth 流程 5. CAS和OAuth的区别 1. 基础概念 SSO单点登录(Single sign-on) 所谓单点登录就是在多个应用系统中,用户只需登录一次就可以访问所有相互信任的系统. CAS 中央认证服务(Central Authentication Service) CAS是由美国耶鲁大学发起的一个企业级开源项目,旨在为WEB应用系统提供一种可靠的单点登录解决方案(WEB SSO). OAuth2.0 开放授权(Ope© 2024 张生荣",
            "在前端开发中，文件上传功能是一个很常见的需求。而 Koa 是一个轻量级的 Node.js Web 框架，它提供了很好的中间件支持，可以方便地实现文件上传功能。本文将介绍如何利用 Koa 实现文件上传功能，并提供示例代码。在开始之前，我们需要先安装 Koa 和 koa-body 中间件，koa-body 中间件是用于处理请求体的中间件，可以处理文件上传等复杂的请求体。在 Koa 中，文件上传的实现需要借助 koa-body 中间件，具体实现步骤如下：在 Koa 中使用 koa-body 中间件需要先引入该中间件。在 Koa 中，文件上传请求的处理需要在路由中间件中实现，通常是在 POST 请求中处理文件上传请求。在处理文件上传请求时，我们需要访问上传文件的原始文件名、文件类型、文件大小等信息，以及文件流。Koa 中的 koa-body 中间件可以帮助我们实现这些功能。上面的代码中，我们首先通过 ctx.request.files.file 获取上传文件，然后创建可读流和可写流，将可读流通过管道写入可写流，实现文件上传。最后设置响应体为“文件上传成功”。在文件上传过程中，可能会出现一些错误，比如上传的文件过大或文件格式不支持等。在这种情况下，我们需要对错误进行处理。上面的代码中，我们通过判断上传文件是否为空和上传文件大小是否超过 5MB，对错误进行了处理。在文件上传过程中，我们可能需要对上传文件的格式、大小等进行限制。在 Koa 中，我们可以通过设置 koa-body 中间件的配置项来实现这些限制。上面的代码中，我们通过设置 koa-body 中间件的 multipart 和 formidable 配置项，实现了上传文件大小限制、保留上传文件的扩展名、允许上传多个文件以及文件上传开始时的回调函数。在回调函数中，我们可以重命名上传文件。通过本文的介绍，我们了解了如何利用 Koa 实现文件上传功能，并设置文件上传限制。文件上传是一个很常见的功能，掌握了文件上传的实现方法，可以为我们的前端开发工作带来很大的便利。来源：JavaScript中文网 ，转载请联系管理员！\\n本文地址：https://www.javascriptcn.com/post/65f9f286d10417a2225cecc6\\n  \\n猜你喜欢\\n前言 GraphQL 是一种由 Facebook 开发的数据查询和操作语言，它提供了一种更高效、更灵活的方式来获取和操作数据。GraphQL 的一个重要特性就是可以精确地指定需要查询的数据，避免了传统...什么是 Server-sent Events？ Server-sent Events（简称 SSE）是一种基于 HTTP 的服务器推送技术，它可以让服务器向客户端发送事件流，客户端通过监听这个事件流来...在 ECMAScript 2020（ES11）中，新增了一种数据类型：BigInt。它是一种可以表示任意大整数的数据类型，可以用来解决 JavaScript 中整数运算的精度问题。什么是 CSS Reset CSS Reset 是一种通过重置浏览器默认样式的方式，消除不同浏览器之间的差异，从而实现更加一致的样式效果的技术手段。在前端开发中，使用 CSS Reset 可以让我们更...在 ES6 中，引入了 class 关键字，使得 JavaScript 也具备了面向对象编程的能力。在类继承和原型链之间，有着密切的关系。本文将详细解析 ES6 中的类继承和原型链之间的关系，并提供一...前言 在开发 React 应用时，表单数据的处理是非常常见的需求。然而，由于 React 的单向数据流和组件化特性，传统的表单处理方式可能会变得非常繁琐。而 Redux 作为一种状态管理工具，可以帮助...前言 随着互联网的发展，高并发已经成为了一个不可避免的问题。而 Redis 作为一款高性能的 NoSQL 数据库，也成为了处理高并发的重要工具之一。本文将会介绍 Redis 处理高并发的策略，并且会提...在响应式设计中，图片适配是一个比较棘手的问题。如果不加以处理，可能会导致图片在不同设备上显示不佳，影响用户体验。本文将介绍响应式设计中的图片适配问题，并提供解决方案。解析 TypeScript 中 encapsulation（封装）的实现方式 在 TypeScript 中，封装（encapsulation）是一种重要的面向对象编程的特性。在前端开发中，我们经常使用 PM2 进行进程管理和部署。但是，当 PM2 进程崩溃时，应用也会跟着崩溃。如何避免这种情况的发生？本文将介绍 PM2 崩溃处理的方法和技巧，帮助您更好地管理和部署应用。Node.js 是一个非常流行的 JavaScript 运行时环境，它可以让我们通过 JavaScript 编写服务器端应用程序。在开发 Web 应用程序时，安全性是非常重要的。ECMAScript 2018 (简称 ES2018) 是 JavaScript 语言的最新标准，其中包含了许多新特性和语法糖。本文将详细介绍其中的三个新操作符及其用法，分别是：扩展运算符、剩余运算符...在开发 React Native 应用时，我们经常需要使用 Enzyme 来测试组件。然而，当我们测试涉及到动画的组件时，我们可能会遇到一些问题：动画无法渲染，导致测试失败。随着 Web 技术的不断发展，单页应用（Single Page Application，SPA）已经成为了现代 Web 应用的主流。SPA 通过异步加载数据和动态更新页面，提供了更快速、更流畅的用户体...在 AngularJS 中，ng-repeat 指令是用于循环遍历数组或对象并生成 HTML 元素的常用指令。而 ng-repeat 指令中的 filter 属性则是用于过滤数据的功能。如何在 Chai 中验证 Promise.all 在前端开发中，Promise.all 是一个非常常用的功能，它可以让我们在多个异步操作完成后再执行一些操作，这个功能在实际开发中非常实用。前言 在前端开发中，经常会涉及到对数据库中的数据进行批量更新的操作。而 Mongoose 是一款 Node.js 平台下的 MongoDB 对象模型工具，它提供了一种方便的方式来操作 MongoDB ...前言 在使用 Web Components 的时候，我们通常会使用 Shadow DOM 来实现封装和样式隔离。然而，Shadow DOM 的封闭性也带来了一些挑战，其中之一就是变量传递问题。随着互联网的发展，越来越多的网站和应用开始支持动态换肤功能。动态换肤不仅可以提升用户体验，还可以让用户在不同的环境下选择适合自己的主题，增加用户黏性和满意度。本文将介绍如何使用 Tailwind CS...在前端开发中，样式表是不可或缺的一部分。而 Less 是一种动态样式语言，它是 CSS 的一种扩展。在 Less 中，我们可以使用字符串操作函数来处理字符串，这些函数可以帮助我们更加方便地操作字符串，...\\n相关推荐\\n© 2023 JavaScript中文网",
            "要在Koa2中实现文件上传，你可以按照以下步骤进行操作：安装依赖：首先，确保已在你的项目中安装了koa-body模块，它用于解析请求体中的表单数据和文件。导入所需的模块：将以下代码添加到你的应用程序文件中。配置中间件：在创建 Koa 应用之后，使用 koa-body 中间件来处理文件上传的请求，并通过 multipart: true 选项启用文件上传功能。创建路由：使用 Koa 的路由机制来处理文件上传的请求。例如，假设你有一个 /upload 路由用于处理文件上传。在这个示例中，我们通过 ctx.request.files 对象来获取上传的文件对象，其中 file 是表单字段的名称。监听端口：最后，监听一个端口来启动 Koa 服务器。整个示例代码如下：通过以上步骤，你可以在 Koa2 中实现文件上传功能。记得根据实际需求对文件进行进一步处理，例如保存到服务器或其他操作。更多精彩内容，请微信搜索“前端爱好者“， 戳我 查看 。要在Koa2中实现文件上传，可以使用koa-body和koa-multer这两个中间件。下面是一个示例代码：首先，我们需要安装相关依赖：然后，通过引入所需模块并创建相关实例，实现文件上传功能。其中，koa-body中间件用于解析请求体，@koa/multer用于处理文件上传。创建multer实例时，需要配置存储目录和文件名，可以根据实际需求进行调整。在路由处理函数中，通过upload.single('file')中间件来处理单个文件的上传，'file’是表单中文件字段的名称，可以根据实际表单字段进行修改。最后，通过app.use()方法注册路由，并使用app.listen()启动服务器，监听指定的端口。在启动服务器后，可以通过向/upload发送带有文件字段的POST请求进行文件上传。上传成功后，可以进一步处理文件，如保存文件信息到数据库等。在 server\\\\routes\\\\文件夹创建upload.js,并且配置koa-multer设置完整代码\\r方豆子 \\n题目描述 \\n阿宁最近对吃豆子感兴趣&#xff0c;阿宁想要用程序输出一下&#xff0c;但是图形化对于阿宁来说太难。因此他决定用字符&#xff0c;并且是方形的模样。   \\n给一个正整数n&#xff0c;输出n级好豆子。 题解&#xff1a;每个豆子都由四个豆子组成&#xff0c…...\\r\\r任务目标 \\n在获取了网页的HTML代码后我们可以使用很多方法查找元素并爬取其中的数据Selenium支持XPath、CSS等多种查找元素的方法&#xff0c;掌握这些方法可以灵活地爬取到所要的数据这个项目我们学习怎么样使用Selenium的XPath、CSS 等方法查找元素数据。 Selenium 提取HTML元…...\\r\\r系列文章目录 \\n基于PyQt5的桌面图像调试仿真平台开发(1)环境搭建 \\n基于PyQt5的桌面图像调试仿真平台开发(2)UI设计和控件绑定 \\n基于PyQt5的桌面图像调试仿真平台开发(3)黑电平处理 \\n基于PyQt5的桌面图像调试仿真平台开发(4)白平衡处理 \\n基于PyQt5的桌面图像调试仿真平台开发(5)…...\\r\\r目录 \\n一、Dialer应用的作用和重要性 \\n二、Dialer应用的类型和功能 \\n三、Dialer应用的架构和组件 \\n四、Dialer应用的定制和扩展 一、Dialer应用的作用和重要性 \\n下表是Android开发中Dialer应用的作用和重要性&#xff1a; \\n作用和重要性说明拨号功能Dialer应用提供了拨打电话的…...\\r\\rLsion <dreamlison163.com>, v1.0.0, 2023.04.01 \\nJAVA-编程基础-08-try-catch性能探究 文章目录 JAVA-编程基础-08-try-catch性能探究try-catch会影响性能吗&#xff1f; try-catch会影响性能吗&#xff1f; \\n在 for 循环里面搞了个 try-catch&#xff0c;不知道try-cat…...\\r\\r作为连接实体对象&#xff08;人或物&#xff09;的现实身份与链上身份的可信映射&#xff0c;实现实体对象之间安全可信的数据授权与交换&#xff0c;分布式身份技术解决方案在推动区块链应用繁荣及可信数据流转的过程中扮演着重要角色。 WeIdentity是由微众银行自主研发并完全…...\\r\\r1. 有哪些注解可以注入 Bean&#xff1f;Autowired 和 Resource 的区别&#xff1f; 在 Spring 框架中&#xff0c;常用的注入 Bean 的注解包括&#xff1a; Autowired&#xff1a;自动注入&#xff0c;按照类型自动装配&#xff0c;如果有多个同类型的 Bean&#xff0c;则需要…...\\r\\r文章目录 简介回调函数API 文档及示例状态控制session_statecache_data | cache_resource 显示控件 其他扩展st_autorefreshEcharts 简介 Stream Lit 是一个能够使用python的网页部署客户端。   安装可以参考官网安装教程。   StreamLit运行方式有多种&#xff0c;如下所示…...\\r\\rday-102-one-hundred-and-two-20230630-QQ音乐-从零开始构建一个Vue2的项目-常见面试题-Vue组件间通信 \\nQQ音乐 \\n自适应适配。 \\n从零开始构建一个Vue2的项目 基于vue/cli脚手架创建项目。 vue create xxx修改默认的配置项&#xff1a; 基础配置项&#xff1a; publicPathlintOn…...\\r\\r当前&#xff0c;数字经济因其覆盖面广且渗透力强&#xff0c;与各行业深度融合&#xff0c;正在逐渐引领新经济发展。另一方面&#xff0c;数据安全已上升为国家战略&#xff0c;中央相继出台政策文件&#xff0c;加强数据安全、商业秘密、个人隐私保护&#xff0c;提高网络安…...\\r\\rday4 \\n汇编代码初始化系统中&#xff1a; \\n为什么要保存cpsr&#xff1a;要把其他的状态还原 如&#xff08;N Z&#xff09;\\nuser&#xff1a;mov r0,#3cmp r0,#4...\\t\\t\\t//irqmovlt r1,#5irq:mov r0,#10cmp r0,#10moveq r2,#6fiq和irq的区别&#xff1a; \\nfiq和irq的区别&#…...\\r\\r什么是视频解说小程序&#xff1f; 影视剪辑和解说&#xff0c;我们都知道有这类的抖音号&#xff0c;这时候就用到我们小程序了&#xff0c;流量主产生了收益。把视频解说上传到小程序&#xff0c;设置为广告观看&#xff0c;这样引导用户去小程序看&#xff0c;就产生一个广告…...\\r\\rMySql安装 \\n1.下载wget命令 \\nyum -y install wget   \\n2. 在线下载mysql安装包 \\nwget https://repo.mysql.com//mysql80-community-release-el7-3.noarch.rpm   \\n3.MySQL的GPG升级了&#xff0c;需要更新&#xff0c;如果是新安装的MySQL&#xff0c;执行以下脚本即可&#xff1…...\\r\\rSpring Boot中的SimpMessagingTemplate是什么&#xff0c;原理&#xff0c;以及如何使用 \\nSimpMessagingTemplate是Spring Framework中的一个类&#xff0c;用于向WebSocket客户端发送消息。在Spring Boot应用程序中&#xff0c;可以使用SimpMessagingTemplate来实现WebSocket通…...\\r\\r2023-06-30每日一题 \\n一、题目编号 \\n2490. 回环句二、题目链接 \\n点击跳转到题目位置 \\n三、题目描述 \\n句子 是由单个空格分隔的一组单词&#xff0c;且不含前导或尾随空格。 \\n例如&#xff0c;“Hello World”、“HELLO”、“hello world hello world” 都是符合要求的句子。 \\n单…...\\r\\r时钟: \\n51单片机中有时钟和时钟树的概念&#xff0c;外设只有GPIO、定时器、和一个串口&#xff0c;使用的都是11.0592MHZ的频率&#xff0c;除了定时器外&#xff0c;其他外设只要上电就可以使用。 stm32不同外设对应的时钟频率不同&#xff0c;故有时钟树的概念  PLL&#xf…...\\r\\r昨天在Docker中配置ElasticSearcch8集群模式时&#xff0c;先初步配置了master主节点。然后主节点启动就报错&#xff0c;看日志&#xff0c;提示“Device or resource busy”。异常第一句大概这个样子&#xff1a; \\nException in thread \"main\" java.nio.file.FileS…...\\r\\r目录 \\n1.判断链表是否带环 \\n证明 \\n2.寻找环的入口点 1.判断链表是否带环 \\n原题链接&#xff1a;力扣 思路一&#xff1a;先遍历一遍链表&#xff0c;计算出链表的长度&#xff0c;然后将长度除二&#xff0c;在遍历半个链表即可。但是这种方法效率比较低。 \\n思路二&#xff1a;…...\\r\\r2023.6.30今天我学习了如何使用echarts渲染一个3d的饼图&#xff0c;效果如下&#xff1a; 相关代码如下&#xff1a; \\n<template><div  ref\"pie3d\"/>\\n</template>\\n<script>mounted() {this.myChart  this.$echarts.init(this.$refs.pie3d);…...\\r\\rgo标准库中的os/exec包对调用外部程序提供了支持,os.exec是对os.StartProcess的包装&#xff0c;方便重新映射标准输入输出&#xff0c;连接io到管道等。 exec包不调用系统shell&#xff0c;并且不支持shell通配符&#xff0c;或其他的扩展&#xff0c;管道&#xff0c;重定向等…...\\r\\r核心&#xff1a;给图例按钮添加点击事件 \\nmyChart.on(\"legendselectchanged\", function (params) {let selected  {功率柜: true,母线柜: false,充电桩终端: false,网络柜: false,};for (let key in selected) {if (key ! params.name) {myChart.setOption({legend:…...\\r在这里是记录一下梯度消失或梯度爆炸的一些处理技巧。全当学习总结了如有错误还请留言&#xff0c;在此感激不尽。 权重和梯度的更新公式如下&#xff1a;  w  w − η ⋅ ∇ w w  w - \\\\eta \\\\cdot \\\\nabla w ww−η⋅∇w \\n个人通俗的理解梯度消失就是网络模型在反向求导的时候出…...\\r文章目录 5.6 有哪些池化方法 5.7 1x1卷积作用 5.8 卷积层和池化层有什么区别 5.9 卷积核是否一定越大越好 5.10 每层卷积是否只能用一种尺寸的卷积核 5.11 怎样才能减少卷积层参数量 5.12 在进行卷积操作时&#xff0c;必须同时考虑通道和区域吗 5.13 采用宽卷积的好处有什么 …...\\r前言 \\n今天是贪心算法的第一天&#xff0c;算法之路重新开始&#xff01; \\n内容 \\n之前没了解过贪心算法。 \\n什么是贪心 \\n贪心的本质是选择每一阶段的局部最优&#xff0c;从而达到全局最优。难点就是如何通过局部最优&#xff0c;推出整体最优。 \\n一、455.分发饼干 \\n假设你是一…...\\r题目 题解 \\nclass Solution:def canPartition(self, nums: List[int]) -> bool:# badcaseif not nums:return True# 不能被2整除if sum(nums) % 2 ! 0:return False# 状态定义&#xff1a;dp[i][j]表示当背包容量为j&#xff0c;用前i个物品是否正好可以将背包填满&#xff…...\\r工具类 \\nimport org.apache.poi.ss.usermodel.Cell;\\nimport org.apache.poi.ss.usermodel.CellType;\\nimport org.apache.poi.ss.usermodel.Row;\\nimport org.apache.poi.ss.usermodel.Sheet;/*** Excel工具类** author xiaoming* date 2023/11/17 10:40*/\\npublic class ExcelUti…...\\rLoadBalance vs Ribbon \\n由于Spring cloud2020之后移除了Ribbon&#xff0c;直接使用Spring Cloud LoadBalancer作为客户端负载均衡组件&#xff0c;我们讨论Spring负载均衡以Spring Cloud2020之后版本为主&#xff0c;学习Spring Cloud LoadBalance&#xff0c;暂不讨论Ribbon…...\\r一、背景需求分析 \\n在工业产业园、化工园或生产制造园区中&#xff0c;周界防范意义重大&#xff0c;对园区的安全起到重要的作用。常规的安防方式是采用人员巡查&#xff0c;人力投入成本大而且效率低。周界一旦被破坏或入侵&#xff0c;会影响园区人员和资产安全&#xff0c;…...\\r在用WebBrowser编程实现网页操作自动化时&#xff0c;常要分析网页Html&#xff0c;例如网页在加载数据时&#xff0c;常会显示“系统处理中&#xff0c;请稍候..”&#xff0c;我们需要在数据加载完成后才能继续下一步操作&#xff0c;如何抓取这个信息的网页html元素变化&…...\\r方法定义 \\n参考&#xff1a;https://www.yiibai.com/objective_c/objective_c_functions.html \\nObjective-C编程语言中方法定义的一般形式如下 \\n- (return_type) method_name:( argumentType1 )argumentName1 joiningArgument2:( argumentType2 )argumentName2 ... joiningArgu…...\\r&#x1f468;‍&#x1f4bb;博客主页&#xff1a;花无缺 欢迎 点赞&#x1f44d; 收藏⭐ 留言&#x1f4dd; 加关注✅! 本文由 花无缺 原创 收录于专栏 【洛谷算法题】 文章目录 【洛谷算法题】P5713-洛谷团队系统【入门2分支结构】&#x1f30f;题目描述&#x1f30f;输入格…...\\r【ES6.0】- 扩展运算符... 文章目录 【ES6.0】- 扩展运算符...一、概述二、拷贝数组对象三、合并操作四、参数传递五、数组去重六、字符串转字符数组七、NodeList转数组八、解构变量九、打印日志十、总结 一、概述 \\n**扩展运算符(...)**允许一个表达式在期望多个参数&#xff0…...\\r文 | 螳螂观察 \\n作者 | 李燃 \\n双11狂欢已落下帷幕&#xff0c;各大品牌纷纷晒出优异的成绩单&#xff0c;摩根士丹利投资的智能硬件头部品牌凯迪仕也不例外。然而有爆料称&#xff0c;在自媒体平台发布霸榜各大榜单喜讯的凯迪仕智能锁&#xff0c;多个平台数据都表现出极度异常…...\\r文章目录 前言常用命令go bug示例参数说明 go doc示例参数说明 go env示例 go fix示例 go fmt示例 go generate示例 总结写在最后 前言 \\n接着上一篇继续介绍Go语言的常用命令 \\n常用命令 \\n以下是一些常用的Go命令&#xff0c;这些命令可以帮助您在Go开发中进行编译、测试、运行和…...\\rhttp://cplusoj.com/d/senior/p/SS231116D \\n假设我们要把  a a a 变成  b b b&#xff0c;我们在  a i a_i ai​ 和  a i  1 a_{i1} ai1​ 之间连边&#xff0c; b b b 同理&#xff0c;则  a a a 能变成  b b b 的充要条件是两图  A , B A,B A,B 同构。 \\n必要性显然&#xff0…...\\r1、在 Debian/Ubuntu 上安装 NGINX \\n在 Debian 或 Ubuntu 机器上安装 NGINX 开源版。 更新已配置源的软件包信息&#xff0c;并安装一些有助于配置官方 NGINX 软件包仓库的软件包&#xff1a; \\napt-get update\\napt install -y curl gnupg2 ca-certificates lsb-release debian-…...\\r目录 1、Hive默认分割符2、Hive存储格式3、Hive数据压缩 1、Hive默认分割符 Hive创建表时指定的行受限&#xff08;ROW FORMAT&#xff09;配置标准HQL为&#xff1a; \\n...\\nROW FORMAT DELIMITED\\nFIELDS TERMINATED BY \\\\u0001\\nCOLLECTION ITEMS TERMINATED BY ,\\nMAP KEYS TERMI…...\\r文章目录 摘要1 引言2 问题描述3 拟议框架4 所提出方法的细节A.数据预处理B.变量相关分析C.MAG模型D.异常分数 5 实验A.数据集和性能指标B.实验设置与平台C.结果和比较 6 结论 摘要 \\n异常检测是保证航天器稳定性的关键。在航天器运行过程中&#xff0c;传感器和控制器产生大量周…...\\rvue项目运行时&#xff0c;如果经常运行慢&#xff0c;崩溃停止服务&#xff0c;报如下错误 FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory 因为在 Node 中&#xff0c;通过JavaScript使用内存时只能使用部分内存&#xff08;64位系统&…...\\r恶意软件是指恶意软件犯罪者用来感染个人计算机或整个组织的网络的软件。 它利用目标系统漏洞&#xff0c;例如可以被劫持的合法软件&#xff08;例如浏览器或 Web 应用程序插件&#xff09;中的错误。 \\n恶意软件渗透可能会造成灾难性的后果&#xff0c;包括数据被盗、勒索或网…...\\r让我简单的为大家介绍一下原型对象prototype吧&#xff01; \\n使用原型实现方法共享 \\n1.构造函数通过原型分配的函数是所有对象所 共享的。 \\n2.JavaScript 规定&#xff0c;每一个构造函数都有一个 prototype 属性&#xff0c;指向另一个对象&#xff0c;所以我们也称为原型对象…...\\rC中只能有一个实例的单例类 \\n前面讨论的 President 类很不错&#xff0c;但存在一个缺陷&#xff1a;无法禁止通过实例化多个对象来创建多名总统&#xff1a; President One, Two, Three; 由于复制构造函数是私有的&#xff0c;其中每个对象都是不可复制的&#xff0c;但您的目…...\\r开发工具&#xff1a; \\nPyCharm&#xff0c;mysql5.7&#xff0c;微信开发者工具 \\n技术说明&#xff1a; \\npython django html 小程序 \\n功能介绍&#xff1a; \\n用户端&#xff1a; \\n登录注册&#xff08;含授权登录&#xff09; \\n首页显示搜索图书&#xff0c;轮播图&#xff0…...\\rC/C++等级考试（1~8级）全部真题・点这里 第1题：双精度浮点数的输入输出 \\n输入一个双精度浮点数，保留8位小数，输出这个浮点数。 时间限制：1000 内存限制：65536输入 只有一行，一个双精度浮点数。输出 一行，保留8位小数的浮点数。样例输入 3.1415926535798932样例输出 3.1…...\\r解析如下&#xff1a;1、长按电脑电源键直至关机&#xff0c;然后再按一次电源健重启电脑&#xff0c;按F8健进入安全模式2、安全模式下进入Windows系统桌面后&#xff0c;按住“winR”打开运行窗口&#xff0c;输入“services.msc”打开服务设置3、在服务界面&#xff0c;选中…...\\r%读入6幅图像&#xff08;每一幅图像的大小是564*564&#xff09;\\nf1  imread(WashingtonDC_Band1_564.tif);\\nsubplot(3,2,1),imshow(f1);\\nf2  imread(WashingtonDC_Band2_564.tif);\\nsubplot(3,2,2),imshow(f2);\\nf3  imread(WashingtonDC_Band3_564.tif);\\nsubplot(3,2,3),imsho…...\\rwin7系统关机提示“配置Windows Update已完成30%请勿关闭计算机”问题的解决方法在win7系统关机时如果有升级系统的或者其他需要会直接进入一个 等待界面&#xff0c;在等待界面中我们需要等待操作结束才能关机&#xff0c;虽然这比较麻烦&#xff0c;但是对系统进行配置和升级…...\\r有不少用户在重装Win7系统或更新系统后会遇到“准备配置windows&#xff0c;请勿关闭计算机”的提示&#xff0c;要过很久才能进入系统&#xff0c;有的用户甚至几个小时也无法进入&#xff0c;下面就教大家这个问题的解决方法。第一种方法&#xff1a;我们首先在左下角的“开始…...\\r置信有很多用户都跟小编一样遇到过这样的问题&#xff0c;电脑时发现开机屏幕显现“正在配置Windows Update&#xff0c;请勿关机”(如下图所示)&#xff0c;而且还需求等大约5分钟才干进入系统。这是怎样回事呢&#xff1f;一切都是正常操作的&#xff0c;为什么开时机呈现“正…...\\rWin7系统开机启动时总是出现“配置Windows请勿关机”的提示&#xff0c;没过几秒后电脑自动重启&#xff0c;每次开机都这样无法进入系统&#xff0c;此时碰到这种现象的用户就可以使用以下5种方法解决问题。方法一&#xff1a;开机按下F8&#xff0c;在出现的Windows高级启动选…...\\r有不少windows10系统用户反映说碰到这样一个情况&#xff0c;就是电脑提示正在准备windows请勿关闭计算机&#xff0c;碰到这样的问题该怎么解决呢&#xff0c;现在小编就给大家分享一下windows10系统提示正在准备windows请勿关闭计算机的具体第一种方法&#xff1a;1、2、依次…...\\r今天和大家分享一下win7系统重装了Win7旗舰版系统后&#xff0c;每次关机的时候桌面上都会显示一个“配置Windows Update的界面&#xff0c;提示请勿关闭计算机”&#xff0c;每次停留好几分钟才能正常关机&#xff0c;导致什么情况引起的呢&#xff1f;出现配置Windows Update…...\\r只能是等着&#xff0c;别无他法。说是卡着如果你看硬盘灯应该在读写。如果从 Win 10 无法正常回滚&#xff0c;只能是考虑备份数据后重装系统了。解决来方案一&#xff1a;管理员运行cmd&#xff1a;net stop WuAuServcd %windir%ren SoftwareDistribution SDoldnet start WuA…...\\r原标题&#xff1a;电脑提示“配置Windows Update请勿关闭计算机”怎么办&#xff1f;win7系统中在开机与关闭的时候总是显示“配置windows update请勿关闭计算机”相信有不少朋友都曾遇到过一次两次还能忍但经常遇到就叫人感到心烦了遇到这种问题怎么办呢&#xff1f;一般的方…...\\r关机提示 windows7 正在配置windows 请勿关闭计算机 &#xff0c;然后等了一晚上也没有关掉。现在电脑无法正常关机以下文字资料是由(历史新知网www.lishixinzhi.com)小编为大家搜集整理后发布的内容&#xff0c;让我们赶快一起来看一下吧&#xff01;关机提示 windows7 正在配…...\\r钉钉请勿通过开发者调试模式是真的吗好不好用 更新时间：2020-04-20 22:24:19　浏览次数：729次 区域： 南阳 > 卧龙 列举网提醒您：为保障您的权益，请不要提前支付任何费用！ 虚拟位置外设器!!轨迹模拟&虚拟位置外设神器 专业用于：钉钉，外勤365，红圈通，企业微信和…...\\r前几天班里有位学生电脑(windows 7系统)出问题了&#xff0c;具体表现是开机时一直停留在“配置windows update失败 还原更改 请勿关闭计算机”这个界面&#xff0c;长时间没反应&#xff0c;无法进入系统。这个问题原来帮其他同学也解决过&#xff0c;网上搜了不少资料&#x…...\\r本文为你提供了3个有效解决电脑显示“清理请勿关闭计算机”问题的方法&#xff0c;并在最后教给你1种保护系统安全的好方法&#xff0c;一起来看看&#xff01;电脑出现“清理请勿关闭计算机”在Windows 7(SP1)和Windows Server 2008 R2 SP1中&#xff0c;添加了1个新功能在“磁…...\\r许多用户在长期不使用电脑的时候&#xff0c;开启电脑发现电脑显示&#xff1a;配置windows更新失败&#xff0c;正在还原更改&#xff0c;请勿关闭计算机。。.这要怎么办呢&#xff1f;下面小编就带着大家一起看看吧&#xff01;如果能够正常进入系统&#xff0c;建议您暂时移…...\\r配置windows update失败 还原更改 请勿关闭计算机&#xff0c;电脑开机后一直显示以以下文字资料是由(历史新知网www.lishixinzhi.com)小编为大家搜集整理后发布的内容&#xff0c;让我们赶快一起来看一下吧&#xff01;配置windows update失败 还原更改 请勿关闭计算机&#x…...\\r不知道大家有没有遇到过这样的一个问题&#xff0c;就是我们的win7系统在关机的时候&#xff0c;总是喜欢显示“准备配置windows&#xff0c;请勿关机”这样的一个页面&#xff0c;没有什么大碍&#xff0c;但是如果一直等着的话就要两个小时甚至更久都关不了机&#xff0c;非常…...\\r当电脑出现正在准备配置windows请勿关闭计算机时&#xff0c;一般是您正对windows进行升级&#xff0c;但是这个要是长时间没有反应&#xff0c;我们不能再傻等下去了。可能是电脑出了别的问题了&#xff0c;来看看教程的说法。正在准备配置windows请勿关闭计算机时间长了方法一…...\\r我们使用电脑的过程中有时会遇到这种情况&#xff0c;当我们打开电脑之后&#xff0c;发现一直停留在一个界面&#xff1a;“配置Windows Update失败&#xff0c;还原更改请勿关闭计算机”&#xff0c;等了许久还是无法进入系统。如果我们遇到此类问题应该如何解决呢&#xff0…...\\rApple’s “Do Not Disturb While Driving” is a potentially lifesaving iPhone feature, but it doesn’t always turn on automatically at the appropriate time. For example, you might be a passenger in a moving car, but your iPhone may think you’re the one dri…...\\rPowered By betheme"
        ]
    },
    {
        "prompt": "添加功能，如果float(\n        data[1])<=39.19,弹窗提醒\n```Python\nimport requests\r\nimport time\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib.font_manager as fm\r\nfrom datetime import datetime\r\nimport pandas as pd\r\n\r\n# 设置中文字体\r\nfont_path = 'SimHei.ttf'  # 替换为您安装的中文字体文件的路径\r\nfont_prop = fm.FontProperties(fname=font_path)\r\nplt.rcParams['font.family'] = font_prop.get_name()\r\n\r\nshjc_data = pd.DataFrame(columns=['name', 'price', 'formatted_now', 'val'])\r\n\r\n\r\ndef re_exe(inc=0.5):\r\n    while True:\r\n        shjc = get_price('http://qt.gtimg.cn/q=sh600009')\r\n        # print(shjc)\r\n        # Call function to draw candlestick chart using shjc data\r\n        draw_candlestick(shjc)\r\n        plt.pause(inc)  # 暂停指定的时间间隔\r\n\r\n\r\ndef get_price(gp_url):\r\n    url = gp_url\r\n    page = get_page(url)\r\n    data = page.split('~')\r\n    name = data[1]\r\n    price = float(data[3])\r\n    return name, price\r\n\r\n\r\ndef get_page(url):\r\n    page = requests.get(url).content.decode('gb18030')\r\n    return page\r\n\r\n\r\ndef draw_candlestick(data):\r\n    global shjc_data\r\n    data = list(data)\r\n    # 获取当前时间\r\n    now = datetime.now()\r\n    # 格式化时间\r\n    formatted_now = now.strftime(\"%H:%M:%S\")\r\n    val = round(15200*(float(data[1])-39.832), 2)\r\n    # Code to draw candlestick chart using data\r\n    df2 = [{'name': data[0], 'price': float(\r\n        data[1]), 'formatted_now': formatted_now, 'val': val}]\r\n    shjc_data = pd.concat([shjc_data, pd.DataFrame(df2)], ignore_index=True)\r\n    # 清除之前的注释\r\n    plt.gca().texts.clear()\r\n    # 绘制折线图\r\n    x = shjc_data['formatted_now']\r\n    y = shjc_data['price']\r\n    # Display maximum, minimum, and mean values of shjc_data['price']\r\n    # max_value = y.max()\r\n    # min_value = y.min()\r\n    # mean_value = round(y.mean(),2)\r\n    plt.text(\r\n        0.8, 0.9, f\"now: {float(data[1])}\", transform=plt.gca().transAxes)\r\n    data_value = shjc_data['val']\r\n    plt.plot(x, y)\r\n    plt.xticks(rotation=45)  # 设置x轴刻度标签旋转角度\r\n    plt.tight_layout()  # 调整图像布局，防止刻度标签重叠\r\n    # 设置刻度的数量和间隔，避免重叠\r\n    plt.xticks(range(0, len(x), max(1, len(x)//10)))\r\n    # 添加数据值的注释\r\n    for i in range(len(x)):\r\n        if i == len(x) - 1:  # 只在最新的数据点上添加注释\r\n            plt.annotate(data_value[i], (x[i], y[i]), xytext=(\r\n                5, 5), textcoords='offset points')\r\n\r\n\r\nplt.ion()  # 开启交互模式\r\nre_exe(0.3)\r\n\n```",
        "doc": []
    },
    {
        "prompt": "line 39: cd: too many arguments\n怎么解决",
        "doc": [
            "\\nThe high level overview of all the articles on the site.\\n\\nAbout Baeldung.\\n\\nA collection of guides on Linux system administration\\n\\nLearn about essential filesystem management.\\n\\nLearn about managing Linux processes and threads\\n\\nDeep dive into working with Files on Linux.\\n\\nBasic and advanced scripting on Linux.\\n\\nLearn about installing and updating Linux packages\\n\\nThe building blocks for machine-to-machine communication\\n\\nLearn about file and user security, cryptographic keys, SSH, and SSL.\\nLast updated: March 18, 2024Browsing data is a trivial but critical activity when using any system. A major part of that activity is switching directories, commonly with cd.In this tutorial, we tackle the scenario in which we’re unable to enter a given directory. First, we delve into invalid paths in Linux. Next, we check other reasons for the inability to access a directory. After that, the focus is on the permissions we need to change into a directory and how to assess and correct them. Finally, we provide a comprehensive example.We tested the code in this tutorial on Debian 11 (Bullseye) with GNU Bash 5.1.4. It should work in most POSIX-compliant environments.Since it’s perhaps one of the most common problems when using cd, let’s get invalid paths out of the way first.To confirm our current location at different points, we use the pwd command. As usual, ls helps when listing directory contents.While a human may detect simple typos like /dirs/ubdir instead of /dir/subdir or incorrect spelling, machines are rarely equipped to do so by default. The problem is tougher when we get similar-looking characters wrong:Depending on the font, we can have trouble distinguishing a one (1) from a lowercase “L” (l). Of course, this is easy to correct by listing / in this example, but the problem may be at any point in a long path.Linux has a strict standard for paths, which includes predefined tokens like the / forward slash separator.Using a \\\\ backslash instead of a forward slash can lead to incorrect results. For example, /dir/file is a file within /dir, but /dir\\\\subdir is the dirsubdir file in root:On the other hand, shells often treat multiple forward slashes in paths as one, so that’s acceptable.Many UNIX tools also have switches that force input interpretation, output generation, or both to use NULL (\\\\0) as the separator. The reason for this is that only NULL and forward slash are forbidden as parts of names in Linux, but the latter is the path separator.Whitespaces are allowed in Linux paths. Even newlines can be a part of object names. This can be very confusing, especially when we list directory contents.In fact, when a path contains any whitespace, we need to either wrap it in quotes or escape the whitespace:Here, we enter /dir 1 by escaping the single space and confirm we’re inside the correct directory. However, if we try to avoid escaping the space, cd complains about the number of arguments since 1 is superfluous.Finally, unlike Microsoft Windows, the Linux operating system is case-sensitive. This means that /dir/subDir is not the same as /dir/subdir.To make things more problematic, we can have both at the same time:The situation is even worse when both are directories. Naturally, this is also an organizational problem, but still a valid scenario.After looking at the many ways seemingly valid paths can actually be invalid, let’s explore what else can prevent us from entering a valid path.Of course, even with a valid path, different issues can arise when attempting to enter a directory. Let’s look at some of them.Supplying a path that’s not an actual directory is the first trivial reason for the inability to enter. For example, we might be attempting to access a nonexistent directory that was moved, deleted, or renamed if it even existed in the first place.In other cases, the object we expect to be a directory can turn out to be a file.If we have a valid path that’s a directory, but we’re still unable to get in with cd, it’s most commonly due to the following error:Here, the error text tells us that we don’t have the necessary permissions. Let’s dive further into this scenario and explore how to remedy it.Linux file and directory permissions dictate which actors can perform what actions over which objects.An easy way to check the permissions for an object is the ls command:In its long listing (-l) format, ls provides the following information about each item from the second row onwards, column by column:From these, the permissions and owning user and group are of interest to us. By default, each user is the sole member of a group with the user’s name.Indeed, the permissions are represented by a string of letters. The first letter identifies the object type (d means directory). Following are three 3-letter clusters of rwx, responsible for the [r]ead, [w]rite, and e[x]excute permissions of the owning user, owning group, and everyone else, respectively. If a position has a – dash instead of a letter, it means that the permission is unavailable for the given actor.Importantly, to change into a directory, a user must have the x execute permission over it. This can happen if our user is:Finally, we change the owning user and group via chown, while chmod is the command for changing all permissions.Armed with the knowledge above, we can combine all commands in an example.Let’s create a path structure as user1:After confirming the current user as user1, we create a new directory /dir with a subdirectory /dir/subdir via mkdir –parents. Its owner is user1 of the single-user user1 group.Let’s describe the default permissions of the subdirectory in this case:Of course, that means we can freely cd into the directory as any user:How do we change that?Naturally, we can use chmod to strip the x permissions for all actors:Now, we’re locked out. Still, we can change permissions as the owner or a superuser.As usual, even if we don’t have a particular permission as a given user, superusers can access and change most objects:Of course, the same can be achieved with sudo and similar tools as long as our user is configured correctly:Even the owner does not always have all permissions.Let’s add the execute permission only for non-owner users that are not part of the owner group:At this point, we can cd with user2 as long as it’s not part of the user1 group as returned by getent:However, we still can’t change to /dir/subdir with user1, as it’s the owner and doesn’t have the necessary permissions:To work around this, we can also change the owner.We can use chown to modify the current owning user of /dir/subdir:After this, we can’t access the subdirectory with user2 anymore since that user, as the owner, does not have the x permission:Note that the owner group has not changed, so now the permissions applicable to user1 come from the second 3-letter cluster.Finally, we can restore the defaults:At this point, we’re back to the original permissions.In this article, we explored why we might not be able to change into a given directory. Specifically, we paid attention to permissions problems and how to fix them.In conclusion, while there are many reasons a directory can be inaccessible, we can typically remedy each one as long as we can identify it correctly.",
            "用pip安装依赖包时，默认是从国外下载，可以指定国内源，速度飞快 pip install -i 国内镜像地址 包名 例如： pip install -i https://mirrors.aliyun.com/pypi/simple/ numpy      国内常用pip镜像地址清华：https://pypi.tuna.tsinghua.edu.cn/simple阿里云：https://mirrors.aliyun.com/pypi/simple/豆瓣：  https://pypi.douban.com/simple/  --trusted-host pypi.douban.compypi.org :    https://pypi.org/simple    --ignore-installed --upgrade：忽略已安装的，升级安装--no-dependencies: 忽略版本依赖关系--force-reinstall :强制重新安装  pip install  --ignore-installed --upgrade  tensorflow  pip install --no-cache-dir --force-reinstall --no-binary :all: scikit-learn百度：https://mirror.baidu.com/pypi/simple中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/华中理工大学：https://pypi.hustunique.com/山东理工大学：https://pypi.sdutlinux.org/pip install mxnet-cu102 -f https://dist.mxnet.io/python        国内常用conda镜像地址 中科大：--channel https://mirrors.ustc.edu.cn/anaconda/pkgs/free例如 conda install --channel https://conda .anaconda.ort/pandas bottleneckconda install安装不成功时加--channel conda-forge :  例如    conda install --channel conda-forge-c bioconda    例如 ：conda install -c bioconda sra-tools  conda install -c bioconda/label/cf201901 sra-tools查看源：conda config --show-sources恢复官方镜像源:conda config --remove-key channels创建 .condarc文件： conda config --set show_channel_urls yes清除索引缓存 ：conda clean -i查看conda版本： conda --version升级conda版本： conda update conda升级conda所有包：conda update --all创建环境tensorflow,并指定python=3.7:conda create -n tensorflow python=3.7激活环境：windows用户： conda activate tensorflow     linux用户：  source activate tensorflow退出环境：windows用户：deactivate     linux用户：  source deactivate复制一个环境：克隆tensorflow来创建一个称为tensorflow2的副本  :    conda create -n tensorflow2  --clone tensorflow通过环境文件创建环境：conda env create -f environment.yaml提升到root权限   sudo -s创建虚拟环境   python -m venv py38使用命令查看jupyter的内核是否是正确的内核如果不正确，使用jupyter kernelspec remove 内核名 删除掉内核使用python -m ipykernel install --user 安装内核，再安装pypiwin32   wrapt装插件会出现Conda选项卡，然后再安装jupyter    conda install jupyter解决办法解决办法 在 Anaconda Prompt 终端执行 python3.7 -m pip install jupyter_contrib_nbextensions；其中python3.7 是你安装python的版本解决办法 修改[Python目录]\\\\Lib\\\\idlelib\\\\PyShell.py文件bai，在du1300行附近，将zhidef main():函数下面use_subprocess = True修改为：daouse_subprocess = False先安装libffi-devel 再编译python3.7UbuntuCentosWindows 10 SDK - Windows app development添加 PPA 软件仓库，需要输入用户密码，更新软件索引查阅资料之后发现：在./configure过程中，如果没有加上–with-ssl参数时，默认安装的软件涉及到ssl的功能不可用， 刚好pip3过程需要ssl模块，而由于没有指定，所以该功能不可用numpy版本太高，降级为1.16.2删除Mysql80服务，进入cmd 输入sc delete MySQL80一直提示提交错误报告，这可能是防火墙问题，使用命令pyqt5问题，无法使用jupyter  spyder打不开  ipynb文批处理转化为普通的Python文件linux安装nvidia驱动 加-no x check就可以正常安装 mininet是一个仿真工具，能够仿真一个SDN网络，包含主机、交换机、控制器和链路组成的虚拟网络。\\n                    菜鸟康: \\n                    你好请问目录下没有resetsettings怎么办呢\\n                \\n                    lxy_666666: \\n                    请问你这个问题解决了么\\n                \\n                    krisyoung1028: \\n                    你这是nvidia相关的所有东西都删了，不能就单纯删显卡吗\\n                \\n                    喰砺冰: \\n                    大哥牛啊，解决了，出现这种情况的原因是什么呢？\\n                \\n                    qq_39936107: \\n                    试了一堆方法，又是装C++编译器，又是搞这搞那的，都不行，结果这个一行搞定了！！！感谢楼主！！！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元打赏作者纬领网络你的鼓励将是我创作的最大动力您的余额不足，请更换扫码支付或充值打赏作者抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。",
            "先声明一下，本文总结的仿真问题均是我碰到的一些不明显错误，log文件明显直接说明的错误我就不写出来啦。表示提前终止，程序停在哪一行就检查哪一行的问题，一般问题会是括号不匹配，要么少打要么多打。这个就比较明显了，应该是有拼写错误，如果该错误单词多的话，建议点击Edit→Replace，把文章中的拼写错误的单词替换掉。我比较容易写错的词是Poisson（我经常会写成Possion）。",
            "在开发Java应用的过程中，你可能偶尔会遇到“Error running ‘Application’: Command line is too long”的问题。这是因为Java虚拟机（JVM）在启动时，如果传递给它的类路径（classpath）过长，超过了操作系统的命令行长度限制，就会抛出这个错误。尤其是在大型项目中，依赖库众多，导致classpath非常庞大，就可能出现这个问题。以下是一些解决此问题的方法：Windows系统： 创建一个名为classpath.txt的文件，将所有需要包含在classpath中的jar包或目录路径写入到这个文件中，每行一个路径。然后在启动Java应用时，通过-classpath @classpath.txt来指定类路径。Unix/Linux系统： 在Unix/Linux系统中，通常使用.代替@符号，创建一个名为classpath.list的文件：如果你是在IntelliJ IDEA或其他IDE中遇到这个问题，可以在项目的运行/调试配置中设置类路径文件：如果你使用Maven或者Gradle等构建工具，可以利用它们来管理和构建运行环境，从而避免直接在命令行指定过长的类路径。例如，在Maven中，你可以使用 mvn exec:java 命令来运行主类，Maven会自动处理类路径问题。对于大型项目，还可以考虑采用模块化的设计思路，按需加载所需的类和资源，减少一次性加载的类路径长度。总结起来，解决\"Command line is too long\"的问题主要是通过合理组织和管理类路径，避免一次性加载过多的类和资源，借助于操作系统支持、IDE特性以及构建工具的力量，可以有效地规避这一问题。\\n        \\n    \\n                    xiaoopin: \\n                    这也不是mybatis 提供的 for update 功能啊\\n                \\n                    李少兄: \\n                    是的。可以把开发环境和测试环境的验证码关掉测\\n                \\n                    爪洼大王: \\n                    如果有验证码就不行了\\n                \\n                    CSDN-Ada助手: \\n                    恭喜您写了第19篇博客！标题看起来很有趣，我对如何在MySQL Workbench中导出表结构与数据非常感兴趣。您的博客内容一直都很有价值，对读者来说非常有帮助。希望您能继续保持创作的动力，分享更多关于MySQL Workbench的实用技巧和经验。对于下一步的创作建议，我想提议您可以探索一下如何在MySQL Workbench中进行数据的导入和导出，这个话题可能对读者也非常有帮助。谢谢您的分享！\\n                \\n                    CSDN-Ada助手: \\n                    恭喜你写了第16篇博客！看到你分享关于如何解除360捆绑的浏览器主页并设定默认页面的内容，我感到非常开心。希望你能继续保持创作的激情，分享更多有价值的内容给大家。或许下一次你可以写一些关于网络安全的小贴士，或者分享一些实用的软件使用技巧，让更多的人受益。加油！\\n                请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。"
        ]
    }
]